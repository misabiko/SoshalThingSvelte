var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};

// node_modules/mfm-js/built/internal/core/index.js
var require_core = __commonJS({
  "node_modules/mfm-js/built/internal/core/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createLanguage = exports.lazy = exports.lineEnd = exports.lineBegin = exports.char = exports.newline = exports.crlf = exports.lf = exports.cr = exports.notMatch = exports.alt = exports.seq = exports.regexp = exports.str = exports.Parser = exports.failure = exports.success = void 0;
    function success(index, value) {
      return {
        success: true,
        value,
        index
      };
    }
    exports.success = success;
    function failure() {
      return { success: false };
    }
    exports.failure = failure;
    var Parser = class {
      constructor(handler, name) {
        this.handler = (input, index, state) => {
          if (state.trace && this.name != null) {
            const pos = `${index}`;
            console.log(`${pos.padEnd(6, " ")}enter ${this.name}`);
            const result = handler(input, index, state);
            if (result.success) {
              const pos2 = `${index}:${result.index}`;
              console.log(`${pos2.padEnd(6, " ")}match ${this.name}`);
            } else {
              const pos2 = `${index}`;
              console.log(`${pos2.padEnd(6, " ")}fail ${this.name}`);
            }
            return result;
          }
          return handler(input, index, state);
        };
        this.name = name;
      }
      map(fn) {
        return new Parser((input, index, state) => {
          const result = this.handler(input, index, state);
          if (!result.success) {
            return result;
          }
          return success(result.index, fn(result.value));
        });
      }
      text() {
        return new Parser((input, index, state) => {
          const result = this.handler(input, index, state);
          if (!result.success) {
            return result;
          }
          const text2 = input.slice(index, result.index);
          return success(result.index, text2);
        });
      }
      many(min) {
        return new Parser((input, index, state) => {
          let result;
          let latestIndex = index;
          const accum = [];
          while (latestIndex < input.length) {
            result = this.handler(input, latestIndex, state);
            if (!result.success) {
              break;
            }
            latestIndex = result.index;
            accum.push(result.value);
          }
          if (accum.length < min) {
            return failure();
          }
          return success(latestIndex, accum);
        });
      }
      sep(separator, min) {
        if (min < 1) {
          throw new Error('"min" must be a value greater than or equal to 1.');
        }
        return seq([
          this,
          seq([
            separator,
            this
          ], 1).many(min - 1)
        ]).map((result) => [result[0], ...result[1]]);
      }
      option() {
        return alt([
          this,
          succeeded(null)
        ]);
      }
    };
    exports.Parser = Parser;
    function str(value) {
      return new Parser((input, index, _state) => {
        if (input.length - index < value.length) {
          return failure();
        }
        if (input.substr(index, value.length) !== value) {
          return failure();
        }
        return success(index + value.length, value);
      });
    }
    exports.str = str;
    function regexp(pattern) {
      const re = RegExp(`^(?:${pattern.source})`, pattern.flags);
      return new Parser((input, index, _state) => {
        const text2 = input.slice(index);
        const result = re.exec(text2);
        if (result == null) {
          return failure();
        }
        return success(index + result[0].length, result[0]);
      });
    }
    exports.regexp = regexp;
    function seq(parsers, select) {
      return new Parser((input, index, state) => {
        let result;
        let latestIndex = index;
        const accum = [];
        for (let i = 0; i < parsers.length; i++) {
          result = parsers[i].handler(input, latestIndex, state);
          if (!result.success) {
            return result;
          }
          latestIndex = result.index;
          accum.push(result.value);
        }
        return success(latestIndex, select != null ? accum[select] : accum);
      });
    }
    exports.seq = seq;
    function alt(parsers) {
      return new Parser((input, index, state) => {
        let result;
        for (let i = 0; i < parsers.length; i++) {
          result = parsers[i].handler(input, index, state);
          if (result.success) {
            return result;
          }
        }
        return failure();
      });
    }
    exports.alt = alt;
    function succeeded(value) {
      return new Parser((_input, index, _state) => {
        return success(index, value);
      });
    }
    function notMatch(parser) {
      return new Parser((input, index, state) => {
        const result = parser.handler(input, index, state);
        return !result.success ? success(index, null) : failure();
      });
    }
    exports.notMatch = notMatch;
    exports.cr = str("\r");
    exports.lf = str("\n");
    exports.crlf = str("\r\n");
    exports.newline = alt([exports.crlf, exports.cr, exports.lf]);
    exports.char = new Parser((input, index, _state) => {
      if (input.length - index < 1) {
        return failure();
      }
      const value = input.charAt(index);
      return success(index + 1, value);
    });
    exports.lineBegin = new Parser((input, index, state) => {
      if (index === 0) {
        return success(index, null);
      }
      if (exports.cr.handler(input, index - 1, state).success) {
        return success(index, null);
      }
      if (exports.lf.handler(input, index - 1, state).success) {
        return success(index, null);
      }
      return failure();
    });
    exports.lineEnd = new Parser((input, index, state) => {
      if (index === input.length) {
        return success(index, null);
      }
      if (exports.cr.handler(input, index, state).success) {
        return success(index, null);
      }
      if (exports.lf.handler(input, index, state).success) {
        return success(index, null);
      }
      return failure();
    });
    function lazy(fn) {
      const parser = new Parser((input, index, state) => {
        parser.handler = fn().handler;
        return parser.handler(input, index, state);
      });
      return parser;
    }
    exports.lazy = lazy;
    function createLanguage(syntaxes) {
      const rules = {};
      for (const key of Object.keys(syntaxes)) {
        rules[key] = lazy(() => {
          const parser = syntaxes[key](rules);
          if (parser == null) {
            throw new Error("syntax must return a parser.");
          }
          parser.name = key;
          return parser;
        });
      }
      return rules;
    }
    exports.createLanguage = createLanguage;
  }
});

// node_modules/mfm-js/built/node.js
var require_node = __commonJS({
  "node_modules/mfm-js/built/node.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TEXT = exports.PLAIN = exports.FN = exports.LINK = exports.N_URL = exports.HASHTAG = exports.MENTION = exports.MATH_INLINE = exports.INLINE_CODE = exports.STRIKE = exports.ITALIC = exports.SMALL = exports.BOLD = exports.EMOJI_CODE = exports.UNI_EMOJI = exports.CENTER = exports.MATH_BLOCK = exports.CODE_BLOCK = exports.SEARCH = exports.QUOTE = exports.isMfmBlock = void 0;
    var blockTypes = ["quote", "search", "blockCode", "mathBlock", "center"];
    function isMfmBlock(node) {
      return blockTypes.includes(node.type);
    }
    exports.isMfmBlock = isMfmBlock;
    var QUOTE = (children2) => {
      return { type: "quote", children: children2 };
    };
    exports.QUOTE = QUOTE;
    var SEARCH = (query, content) => {
      return { type: "search", props: { query, content } };
    };
    exports.SEARCH = SEARCH;
    var CODE_BLOCK = (code, lang) => {
      return { type: "blockCode", props: { code, lang } };
    };
    exports.CODE_BLOCK = CODE_BLOCK;
    var MATH_BLOCK = (formula) => {
      return { type: "mathBlock", props: { formula } };
    };
    exports.MATH_BLOCK = MATH_BLOCK;
    var CENTER = (children2) => {
      return { type: "center", children: children2 };
    };
    exports.CENTER = CENTER;
    var UNI_EMOJI = (value) => {
      return { type: "unicodeEmoji", props: { emoji: value } };
    };
    exports.UNI_EMOJI = UNI_EMOJI;
    var EMOJI_CODE = (name) => {
      return { type: "emojiCode", props: { name } };
    };
    exports.EMOJI_CODE = EMOJI_CODE;
    var BOLD = (children2) => {
      return { type: "bold", children: children2 };
    };
    exports.BOLD = BOLD;
    var SMALL = (children2) => {
      return { type: "small", children: children2 };
    };
    exports.SMALL = SMALL;
    var ITALIC = (children2) => {
      return { type: "italic", children: children2 };
    };
    exports.ITALIC = ITALIC;
    var STRIKE = (children2) => {
      return { type: "strike", children: children2 };
    };
    exports.STRIKE = STRIKE;
    var INLINE_CODE = (code) => {
      return { type: "inlineCode", props: { code } };
    };
    exports.INLINE_CODE = INLINE_CODE;
    var MATH_INLINE = (formula) => {
      return { type: "mathInline", props: { formula } };
    };
    exports.MATH_INLINE = MATH_INLINE;
    var MENTION = (username, host, acct) => {
      return { type: "mention", props: { username, host, acct } };
    };
    exports.MENTION = MENTION;
    var HASHTAG = (value) => {
      return { type: "hashtag", props: { hashtag: value } };
    };
    exports.HASHTAG = HASHTAG;
    var N_URL = (value, brackets) => {
      const node = { type: "url", props: { url: value } };
      if (brackets)
        node.props.brackets = brackets;
      return node;
    };
    exports.N_URL = N_URL;
    var LINK = (silent, url, children2) => {
      return { type: "link", props: { silent, url }, children: children2 };
    };
    exports.LINK = LINK;
    var FN = (name, args, children2) => {
      return { type: "fn", props: { name, args }, children: children2 };
    };
    exports.FN = FN;
    var PLAIN = (text2) => {
      return { type: "plain", children: [(0, exports.TEXT)(text2)] };
    };
    exports.PLAIN = PLAIN;
    var TEXT = (value) => {
      return { type: "text", props: { text: value } };
    };
    exports.TEXT = TEXT;
  }
});

// node_modules/mfm-js/built/internal/util.js
var require_util = __commonJS({
  "node_modules/mfm-js/built/internal/util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.inspectOne = exports.stringifyTree = exports.stringifyNode = exports.mergeText = void 0;
    var node_1 = require_node();
    function mergeText(nodes) {
      const dest = [];
      const storedChars = [];
      function generateText() {
        if (storedChars.length > 0) {
          dest.push((0, node_1.TEXT)(storedChars.join("")));
          storedChars.length = 0;
        }
      }
      const flatten = nodes.flat(1);
      for (const node of flatten) {
        if (typeof node === "string") {
          storedChars.push(node);
        } else if (!Array.isArray(node) && node.type === "text") {
          storedChars.push(node.props.text);
        } else {
          generateText();
          dest.push(node);
        }
      }
      generateText();
      return dest;
    }
    exports.mergeText = mergeText;
    function stringifyNode(node) {
      var _a;
      switch (node.type) {
        case "quote": {
          return stringifyTree(node.children).split("\n").map((line) => `> ${line}`).join("\n");
        }
        case "search": {
          return node.props.content;
        }
        case "blockCode": {
          return `\`\`\`${(_a = node.props.lang) !== null && _a !== void 0 ? _a : ""}
${node.props.code}
\`\`\``;
        }
        case "mathBlock": {
          return `\\[
${node.props.formula}
\\]`;
        }
        case "center": {
          return `<center>
${stringifyTree(node.children)}
</center>`;
        }
        case "emojiCode": {
          return `:${node.props.name}:`;
        }
        case "unicodeEmoji": {
          return node.props.emoji;
        }
        case "bold": {
          return `**${stringifyTree(node.children)}**`;
        }
        case "small": {
          return `<small>${stringifyTree(node.children)}</small>`;
        }
        case "italic": {
          return `<i>${stringifyTree(node.children)}</i>`;
        }
        case "strike": {
          return `~~${stringifyTree(node.children)}~~`;
        }
        case "inlineCode": {
          return `\`${node.props.code}\``;
        }
        case "mathInline": {
          return `\\(${node.props.formula}\\)`;
        }
        case "mention": {
          return node.props.acct;
        }
        case "hashtag": {
          return `#${node.props.hashtag}`;
        }
        case "url": {
          if (node.props.brackets) {
            return `<${node.props.url}>`;
          } else {
            return node.props.url;
          }
        }
        case "link": {
          const prefix = node.props.silent ? "?" : "";
          return `${prefix}[${stringifyTree(node.children)}](${node.props.url})`;
        }
        case "fn": {
          const argFields = Object.keys(node.props.args).map((key) => {
            const value = node.props.args[key];
            if (value === true) {
              return key;
            } else {
              return `${key}=${value}`;
            }
          });
          const args = argFields.length > 0 ? "." + argFields.join(",") : "";
          return `$[${node.props.name}${args} ${stringifyTree(node.children)}]`;
        }
        case "plain": {
          return `<plain>
${stringifyTree(node.children)}
</plain>`;
        }
        case "text": {
          return node.props.text;
        }
      }
      throw new Error("unknown mfm node");
    }
    exports.stringifyNode = stringifyNode;
    var stringifyState;
    (function(stringifyState2) {
      stringifyState2[stringifyState2["none"] = 0] = "none";
      stringifyState2[stringifyState2["inline"] = 1] = "inline";
      stringifyState2[stringifyState2["block"] = 2] = "block";
    })(stringifyState || (stringifyState = {}));
    function stringifyTree(nodes) {
      const dest = [];
      let state = stringifyState.none;
      for (const node of nodes) {
        let pushLf = true;
        if ((0, node_1.isMfmBlock)(node)) {
          if (state === stringifyState.none) {
            pushLf = false;
          }
          state = stringifyState.block;
        } else {
          if (state === stringifyState.none || state === stringifyState.inline) {
            pushLf = false;
          }
          state = stringifyState.inline;
        }
        if (pushLf) {
          dest.push((0, node_1.TEXT)("\n"));
        }
        dest.push(node);
      }
      return dest.map((n) => stringifyNode(n)).join("");
    }
    exports.stringifyTree = stringifyTree;
    function inspectOne(node, action) {
      action(node);
      if (node.children != null) {
        for (const child of node.children) {
          inspectOne(child, action);
        }
      }
    }
    exports.inspectOne = inspectOne;
  }
});

// node_modules/twemoji-parser/dist/lib/regex.js
var require_regex = __commonJS({
  "node_modules/twemoji-parser/dist/lib/regex.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = /(?:\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffc-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb\udffd-\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb\udffc\udffe\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb-\udffd\udfff]|\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb-\udffe]|\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffc-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffd-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffd\udfff]|\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffe]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffc-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffc-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffd-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb\udffd-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffd\udfff]|\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb-\udffd\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffe]|\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb-\udffe]|\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffc-\udfff]|\ud83e\uddd1\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb\udffd-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb\udffc\udffe\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb-\udffd\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb-\udffe]|\ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68|\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d[\udc68\udc69]|\ud83e\udef1\ud83c\udffb\u200d\ud83e\udef2\ud83c[\udffc-\udfff]|\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c[\udffb\udffd-\udfff]|\ud83e\udef1\ud83c\udffd\u200d\ud83e\udef2\ud83c[\udffb\udffc\udffe\udfff]|\ud83e\udef1\ud83c\udffe\u200d\ud83e\udef2\ud83c[\udffb-\udffd\udfff]|\ud83e\udef1\ud83c\udfff\u200d\ud83e\udef2\ud83c[\udffb-\udffe]|\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc68|\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d[\udc68\udc69]|\ud83e\uddd1\u200d\ud83e\udd1d\u200d\ud83e\uddd1|\ud83d\udc6b\ud83c[\udffb-\udfff]|\ud83d\udc6c\ud83c[\udffb-\udfff]|\ud83d\udc6d\ud83c[\udffb-\udfff]|\ud83d\udc8f\ud83c[\udffb-\udfff]|\ud83d\udc91\ud83c[\udffb-\udfff]|\ud83e\udd1d\ud83c[\udffb-\udfff]|\ud83d[\udc6b-\udc6d\udc8f\udc91]|\ud83e\udd1d)|(?:\ud83d[\udc68\udc69]|\ud83e\uddd1)(?:\ud83c[\udffb-\udfff])?\u200d(?:\u2695\ufe0f|\u2696\ufe0f|\u2708\ufe0f|\ud83c[\udf3e\udf73\udf7c\udf84\udf93\udfa4\udfa8\udfeb\udfed]|\ud83d[\udcbb\udcbc\udd27\udd2c\ude80\ude92]|\ud83e[\uddaf-\uddb3\uddbc\uddbd])|(?:\ud83c[\udfcb\udfcc]|\ud83d[\udd74\udd75]|\u26f9)((?:\ud83c[\udffb-\udfff]|\ufe0f)\u200d[\u2640\u2642]\ufe0f)|(?:\ud83c[\udfc3\udfc4\udfca]|\ud83d[\udc6e\udc70\udc71\udc73\udc77\udc81\udc82\udc86\udc87\ude45-\ude47\ude4b\ude4d\ude4e\udea3\udeb4-\udeb6]|\ud83e[\udd26\udd35\udd37-\udd39\udd3d\udd3e\uddb8\uddb9\uddcd-\uddcf\uddd4\uddd6-\udddd])(?:\ud83c[\udffb-\udfff])?\u200d[\u2640\u2642]\ufe0f|(?:\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f|\ud83c\udff3\ufe0f\u200d\ud83c\udf08|\ud83d\ude36\u200d\ud83c\udf2b\ufe0f|\u2764\ufe0f\u200d\ud83d\udd25|\u2764\ufe0f\u200d\ud83e\ude79|\ud83c\udff4\u200d\u2620\ufe0f|\ud83d\udc15\u200d\ud83e\uddba|\ud83d\udc3b\u200d\u2744\ufe0f|\ud83d\udc41\u200d\ud83d\udde8|\ud83d\udc68\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83d\udc6f\u200d\u2640\ufe0f|\ud83d\udc6f\u200d\u2642\ufe0f|\ud83d\ude2e\u200d\ud83d\udca8|\ud83d\ude35\u200d\ud83d\udcab|\ud83e\udd3c\u200d\u2640\ufe0f|\ud83e\udd3c\u200d\u2642\ufe0f|\ud83e\uddde\u200d\u2640\ufe0f|\ud83e\uddde\u200d\u2642\ufe0f|\ud83e\udddf\u200d\u2640\ufe0f|\ud83e\udddf\u200d\u2642\ufe0f|\ud83d\udc08\u200d\u2b1b)|[#*0-9]\ufe0f?\u20e3|(?:[©®\u2122\u265f]\ufe0f)|(?:\ud83c[\udc04\udd70\udd71\udd7e\udd7f\ude02\ude1a\ude2f\ude37\udf21\udf24-\udf2c\udf36\udf7d\udf96\udf97\udf99-\udf9b\udf9e\udf9f\udfcd\udfce\udfd4-\udfdf\udff3\udff5\udff7]|\ud83d[\udc3f\udc41\udcfd\udd49\udd4a\udd6f\udd70\udd73\udd76-\udd79\udd87\udd8a-\udd8d\udda5\udda8\uddb1\uddb2\uddbc\uddc2-\uddc4\uddd1-\uddd3\udddc-\uddde\udde1\udde3\udde8\uddef\uddf3\uddfa\udecb\udecd-\udecf\udee0-\udee5\udee9\udef0\udef3]|[\u203c\u2049\u2139\u2194-\u2199\u21a9\u21aa\u231a\u231b\u2328\u23cf\u23ed-\u23ef\u23f1\u23f2\u23f8-\u23fa\u24c2\u25aa\u25ab\u25b6\u25c0\u25fb-\u25fe\u2600-\u2604\u260e\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262a\u262e\u262f\u2638-\u263a\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267b\u267f\u2692-\u2697\u2699\u269b\u269c\u26a0\u26a1\u26a7\u26aa\u26ab\u26b0\u26b1\u26bd\u26be\u26c4\u26c5\u26c8\u26cf\u26d1\u26d3\u26d4\u26e9\u26ea\u26f0-\u26f5\u26f8\u26fa\u26fd\u2702\u2708\u2709\u270f\u2712\u2714\u2716\u271d\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u2764\u27a1\u2934\u2935\u2b05-\u2b07\u2b1b\u2b1c\u2b50\u2b55\u3030\u303d\u3297\u3299])(?:\ufe0f|(?!\ufe0e))|(?:(?:\ud83c[\udfcb\udfcc]|\ud83d[\udd74\udd75\udd90]|[\u261d\u26f7\u26f9\u270c\u270d])(?:\ufe0f|(?!\ufe0e))|(?:\ud83c[\udf85\udfc2-\udfc4\udfc7\udfca]|\ud83d[\udc42\udc43\udc46-\udc50\udc66-\udc69\udc6e\udc70-\udc78\udc7c\udc81-\udc83\udc85-\udc87\udcaa\udd7a\udd95\udd96\ude45-\ude47\ude4b-\ude4f\udea3\udeb4-\udeb6\udec0\udecc]|\ud83e[\udd0c\udd0f\udd18-\udd1c\udd1e\udd1f\udd26\udd30-\udd39\udd3d\udd3e\udd77\uddb5\uddb6\uddb8\uddb9\uddbb\uddcd-\uddcf\uddd1-\udddd\udec3-\udec5\udef0-\udef6]|[\u270a\u270b]))(?:\ud83c[\udffb-\udfff])?|(?:\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f|\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc73\udb40\udc63\udb40\udc74\udb40\udc7f|\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f|\ud83c\udde6\ud83c[\udde8-\uddec\uddee\uddf1\uddf2\uddf4\uddf6-\uddfa\uddfc\uddfd\uddff]|\ud83c\udde7\ud83c[\udde6\udde7\udde9-\uddef\uddf1-\uddf4\uddf6-\uddf9\uddfb\uddfc\uddfe\uddff]|\ud83c\udde8\ud83c[\udde6\udde8\udde9\uddeb-\uddee\uddf0-\uddf5\uddf7\uddfa-\uddff]|\ud83c\udde9\ud83c[\uddea\uddec\uddef\uddf0\uddf2\uddf4\uddff]|\ud83c\uddea\ud83c[\udde6\udde8\uddea\uddec\udded\uddf7-\uddfa]|\ud83c\uddeb\ud83c[\uddee-\uddf0\uddf2\uddf4\uddf7]|\ud83c\uddec\ud83c[\udde6\udde7\udde9-\uddee\uddf1-\uddf3\uddf5-\uddfa\uddfc\uddfe]|\ud83c\udded\ud83c[\uddf0\uddf2\uddf3\uddf7\uddf9\uddfa]|\ud83c\uddee\ud83c[\udde8-\uddea\uddf1-\uddf4\uddf6-\uddf9]|\ud83c\uddef\ud83c[\uddea\uddf2\uddf4\uddf5]|\ud83c\uddf0\ud83c[\uddea\uddec-\uddee\uddf2\uddf3\uddf5\uddf7\uddfc\uddfe\uddff]|\ud83c\uddf1\ud83c[\udde6-\udde8\uddee\uddf0\uddf7-\uddfb\uddfe]|\ud83c\uddf2\ud83c[\udde6\udde8-\udded\uddf0-\uddff]|\ud83c\uddf3\ud83c[\udde6\udde8\uddea-\uddec\uddee\uddf1\uddf4\uddf5\uddf7\uddfa\uddff]|\ud83c\uddf4\ud83c\uddf2|\ud83c\uddf5\ud83c[\udde6\uddea-\udded\uddf0-\uddf3\uddf7-\uddf9\uddfc\uddfe]|\ud83c\uddf6\ud83c\udde6|\ud83c\uddf7\ud83c[\uddea\uddf4\uddf8\uddfa\uddfc]|\ud83c\uddf8\ud83c[\udde6-\uddea\uddec-\uddf4\uddf7-\uddf9\uddfb\uddfd-\uddff]|\ud83c\uddf9\ud83c[\udde6\udde8\udde9\uddeb-\udded\uddef-\uddf4\uddf7\uddf9\uddfb\uddfc\uddff]|\ud83c\uddfa\ud83c[\udde6\uddec\uddf2\uddf3\uddf8\uddfe\uddff]|\ud83c\uddfb\ud83c[\udde6\udde8\uddea\uddec\uddee\uddf3\uddfa]|\ud83c\uddfc\ud83c[\uddeb\uddf8]|\ud83c\uddfd\ud83c\uddf0|\ud83c\uddfe\ud83c[\uddea\uddf9]|\ud83c\uddff\ud83c[\udde6\uddf2\uddfc]|\ud83c[\udccf\udd8e\udd91-\udd9a\udde6-\uddff\ude01\ude32-\ude36\ude38-\ude3a\ude50\ude51\udf00-\udf20\udf2d-\udf35\udf37-\udf7c\udf7e-\udf84\udf86-\udf93\udfa0-\udfc1\udfc5\udfc6\udfc8\udfc9\udfcf-\udfd3\udfe0-\udff0\udff4\udff8-\udfff]|\ud83d[\udc00-\udc3e\udc40\udc44\udc45\udc51-\udc65\udc6a\udc6f\udc79-\udc7b\udc7d-\udc80\udc84\udc88-\udc8e\udc90\udc92-\udca9\udcab-\udcfc\udcff-\udd3d\udd4b-\udd4e\udd50-\udd67\udda4\uddfb-\ude44\ude48-\ude4a\ude80-\udea2\udea4-\udeb3\udeb7-\udebf\udec1-\udec5\uded0-\uded2\uded5-\uded7\udedd-\udedf\udeeb\udeec\udef4-\udefc\udfe0-\udfeb\udff0]|\ud83e[\udd0d\udd0e\udd10-\udd17\udd20-\udd25\udd27-\udd2f\udd3a\udd3c\udd3f-\udd45\udd47-\udd76\udd78-\uddb4\uddb7\uddba\uddbc-\uddcc\uddd0\uddde-\uddff\ude70-\ude74\ude78-\ude7c\ude80-\ude86\ude90-\udeac\udeb0-\udeba\udec0-\udec2\uded0-\uded9\udee0-\udee7]|[\u23e9-\u23ec\u23f0\u23f3\u267e\u26ce\u2705\u2728\u274c\u274e\u2753-\u2755\u2795-\u2797\u27b0\u27bf\ue50a])|\ufe0f/g;
  }
});

// node_modules/mfm-js/built/internal/parser.js
var require_parser = __commonJS({
  "node_modules/mfm-js/built/internal/parser.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.language = void 0;
    var M = __importStar(require_built());
    var P = __importStar(require_core());
    var util_1 = require_util();
    var regex_1 = __importDefault(require_regex());
    var space2 = P.regexp(/[\u0020\u3000\t]/);
    var alphaAndNum = P.regexp(/[a-z0-9]/i);
    var newLine = P.alt([P.crlf, P.cr, P.lf]);
    function seqOrText(parsers) {
      return new P.Parser((input, index, state) => {
        const accum = [];
        let latestIndex = index;
        for (let i = 0; i < parsers.length; i++) {
          const result = parsers[i].handler(input, latestIndex, state);
          if (!result.success) {
            if (latestIndex === index) {
              return P.failure();
            } else {
              return P.success(latestIndex, input.slice(index, latestIndex));
            }
          }
          accum.push(result.value);
          latestIndex = result.index;
        }
        return P.success(latestIndex, accum);
      });
    }
    var notLinkLabel = new P.Parser((_input, index, state) => {
      return !state.linkLabel ? P.success(index, null) : P.failure();
    });
    var nestable = new P.Parser((_input, index, state) => {
      return state.depth < state.nestLimit ? P.success(index, null) : P.failure();
    });
    function nest(parser, fallback) {
      const inner = P.alt([
        P.seq([nestable, parser], 1),
        fallback != null ? fallback : P.char
      ]);
      return new P.Parser((input, index, state) => {
        state.depth++;
        const result = inner.handler(input, index, state);
        state.depth--;
        return result;
      });
    }
    exports.language = P.createLanguage({
      fullParser: (r) => {
        return r.full.many(0);
      },
      simpleParser: (r) => {
        return r.simple.many(0);
      },
      full: (r) => {
        return P.alt([
          r.unicodeEmoji,
          r.centerTag,
          r.smallTag,
          r.plainTag,
          r.boldTag,
          r.italicTag,
          r.strikeTag,
          r.urlAlt,
          r.big,
          r.boldAsta,
          r.italicAsta,
          r.boldUnder,
          r.italicUnder,
          r.codeBlock,
          r.inlineCode,
          r.quote,
          r.mathBlock,
          r.mathInline,
          r.strikeWave,
          r.fn,
          r.mention,
          r.hashtag,
          r.emojiCode,
          r.link,
          r.url,
          r.search,
          r.text
        ]);
      },
      simple: (r) => {
        return P.alt([
          r.unicodeEmoji,
          r.emojiCode,
          r.text
        ]);
      },
      inline: (r) => {
        return P.alt([
          r.unicodeEmoji,
          r.smallTag,
          r.plainTag,
          r.boldTag,
          r.italicTag,
          r.strikeTag,
          r.urlAlt,
          r.big,
          r.boldAsta,
          r.italicAsta,
          r.boldUnder,
          r.italicUnder,
          r.inlineCode,
          r.mathInline,
          r.strikeWave,
          r.fn,
          r.mention,
          r.hashtag,
          r.emojiCode,
          r.link,
          r.url,
          r.text
        ]);
      },
      quote: (r) => {
        const lines = P.seq([
          P.str(">"),
          space2.option(),
          P.seq([P.notMatch(newLine), P.char], 1).many(0).text()
        ], 2).sep(newLine, 1);
        const parser = P.seq([
          newLine.option(),
          newLine.option(),
          P.lineBegin,
          lines,
          newLine.option(),
          newLine.option()
        ], 3);
        return new P.Parser((input, index, state) => {
          let result;
          result = parser.handler(input, index, state);
          if (!result.success) {
            return result;
          }
          const contents = result.value;
          const quoteIndex = result.index;
          if (contents.length === 1 && contents[0].length === 0) {
            return P.failure();
          }
          const contentParser = nest(r.fullParser).many(0);
          result = contentParser.handler(contents.join("\n"), 0, state);
          if (!result.success) {
            return result;
          }
          return P.success(quoteIndex, M.QUOTE((0, util_1.mergeText)(result.value)));
        });
      },
      codeBlock: (r) => {
        const mark = P.str("```");
        return P.seq([
          newLine.option(),
          P.lineBegin,
          mark,
          P.seq([P.notMatch(newLine), P.char], 1).many(0),
          newLine,
          P.seq([P.notMatch(P.seq([newLine, mark, P.lineEnd])), P.char], 1).many(1),
          newLine,
          mark,
          P.lineEnd,
          newLine.option()
        ]).map((result) => {
          const lang = result[3].join("").trim();
          const code = result[5].join("");
          return M.CODE_BLOCK(code, lang.length > 0 ? lang : null);
        });
      },
      mathBlock: (r) => {
        const open = P.str("\\[");
        const close = P.str("\\]");
        return P.seq([
          newLine.option(),
          P.lineBegin,
          open,
          newLine.option(),
          P.seq([P.notMatch(P.seq([newLine.option(), close])), P.char], 1).many(1),
          newLine.option(),
          close,
          P.lineEnd,
          newLine.option()
        ]).map((result) => {
          const formula = result[4].join("");
          return M.MATH_BLOCK(formula);
        });
      },
      centerTag: (r) => {
        const open = P.str("<center>");
        const close = P.str("</center>");
        return P.seq([
          newLine.option(),
          P.lineBegin,
          open,
          newLine.option(),
          P.seq([P.notMatch(P.seq([newLine.option(), close])), nest(r.inline)], 1).many(1),
          newLine.option(),
          close,
          P.lineEnd,
          newLine.option()
        ]).map((result) => {
          return M.CENTER((0, util_1.mergeText)(result[4]));
        });
      },
      big: (r) => {
        const mark = P.str("***");
        return seqOrText([
          mark,
          P.seq([P.notMatch(mark), nest(r.inline)], 1).many(1),
          mark
        ]).map((result) => {
          if (typeof result === "string")
            return result;
          return M.FN("tada", {}, (0, util_1.mergeText)(result[1]));
        });
      },
      boldAsta: (r) => {
        const mark = P.str("**");
        return seqOrText([
          mark,
          P.seq([P.notMatch(mark), nest(r.inline)], 1).many(1),
          mark
        ]).map((result) => {
          if (typeof result === "string")
            return result;
          return M.BOLD((0, util_1.mergeText)(result[1]));
        });
      },
      boldTag: (r) => {
        const open = P.str("<b>");
        const close = P.str("</b>");
        return seqOrText([
          open,
          P.seq([P.notMatch(close), nest(r.inline)], 1).many(1),
          close
        ]).map((result) => {
          if (typeof result === "string")
            return result;
          return M.BOLD((0, util_1.mergeText)(result[1]));
        });
      },
      boldUnder: (r) => {
        const mark = P.str("__");
        return P.seq([
          mark,
          P.alt([alphaAndNum, space2]).many(1),
          mark
        ]).map((result) => M.BOLD((0, util_1.mergeText)(result[1])));
      },
      smallTag: (r) => {
        const open = P.str("<small>");
        const close = P.str("</small>");
        return seqOrText([
          open,
          P.seq([P.notMatch(close), nest(r.inline)], 1).many(1),
          close
        ]).map((result) => {
          if (typeof result === "string")
            return result;
          return M.SMALL((0, util_1.mergeText)(result[1]));
        });
      },
      italicTag: (r) => {
        const open = P.str("<i>");
        const close = P.str("</i>");
        return seqOrText([
          open,
          P.seq([P.notMatch(close), nest(r.inline)], 1).many(1),
          close
        ]).map((result) => {
          if (typeof result === "string")
            return result;
          return M.ITALIC((0, util_1.mergeText)(result[1]));
        });
      },
      italicAsta: (r) => {
        const mark = P.str("*");
        const parser = P.seq([
          mark,
          P.alt([alphaAndNum, space2]).many(1),
          mark
        ]);
        return new P.Parser((input, index, state) => {
          const result = parser.handler(input, index, state);
          if (!result.success) {
            return P.failure();
          }
          const beforeStr = input.slice(0, index);
          if (/[a-z0-9]$/i.test(beforeStr)) {
            return P.failure();
          }
          return P.success(result.index, M.ITALIC((0, util_1.mergeText)(result.value[1])));
        });
      },
      italicUnder: (r) => {
        const mark = P.str("_");
        const parser = P.seq([
          mark,
          P.alt([alphaAndNum, space2]).many(1),
          mark
        ]);
        return new P.Parser((input, index, state) => {
          const result = parser.handler(input, index, state);
          if (!result.success) {
            return P.failure();
          }
          const beforeStr = input.slice(0, index);
          if (/[a-z0-9]$/i.test(beforeStr)) {
            return P.failure();
          }
          return P.success(result.index, M.ITALIC((0, util_1.mergeText)(result.value[1])));
        });
      },
      strikeTag: (r) => {
        const open = P.str("<s>");
        const close = P.str("</s>");
        return seqOrText([
          open,
          P.seq([P.notMatch(close), nest(r.inline)], 1).many(1),
          close
        ]).map((result) => {
          if (typeof result === "string")
            return result;
          return M.STRIKE((0, util_1.mergeText)(result[1]));
        });
      },
      strikeWave: (r) => {
        const mark = P.str("~~");
        return seqOrText([
          mark,
          P.seq([P.notMatch(P.alt([mark, newLine])), nest(r.inline)], 1).many(1),
          mark
        ]).map((result) => {
          if (typeof result === "string")
            return result;
          return M.STRIKE((0, util_1.mergeText)(result[1]));
        });
      },
      unicodeEmoji: (r) => {
        const emoji = RegExp(regex_1.default.source);
        return P.regexp(emoji).map((content) => M.UNI_EMOJI(content));
      },
      plainTag: (r) => {
        const open = P.str("<plain>");
        const close = P.str("</plain>");
        return P.seq([
          open,
          newLine.option(),
          P.seq([
            P.notMatch(P.seq([newLine.option(), close])),
            P.char
          ], 1).many(1).text(),
          newLine.option(),
          close
        ], 2).map((result) => M.PLAIN(result));
      },
      fn: (r) => {
        const fnName = new P.Parser((input, index, state) => {
          const result = P.regexp(/[a-z0-9_]+/i).handler(input, index, state);
          if (!result.success) {
            return result;
          }
          return P.success(result.index, result.value);
        });
        const arg = P.seq([
          P.regexp(/[a-z0-9_]+/i),
          P.seq([
            P.str("="),
            P.regexp(/[a-z0-9_.-]+/i)
          ], 1).option()
        ]).map((result) => {
          return {
            k: result[0],
            v: result[1] != null ? result[1] : true
          };
        });
        const args = P.seq([
          P.str("."),
          arg.sep(P.str(","), 1)
        ], 1).map((pairs) => {
          const result = {};
          for (const pair of pairs) {
            result[pair.k] = pair.v;
          }
          return result;
        });
        const fnClose = P.str("]");
        return seqOrText([
          P.str("$["),
          fnName,
          args.option(),
          P.str(" "),
          P.seq([P.notMatch(fnClose), nest(r.inline)], 1).many(1),
          fnClose
        ]).map((result) => {
          if (typeof result === "string")
            return result;
          const name = result[1];
          const args2 = result[2] || {};
          const content = result[4];
          return M.FN(name, args2, (0, util_1.mergeText)(content));
        });
      },
      inlineCode: (r) => {
        const mark = P.str("`");
        return P.seq([
          mark,
          P.seq([
            P.notMatch(P.alt([mark, P.str("\xB4"), newLine])),
            P.char
          ], 1).many(1),
          mark
        ]).map((result) => M.INLINE_CODE(result[1].join("")));
      },
      mathInline: (r) => {
        const open = P.str("\\(");
        const close = P.str("\\)");
        return P.seq([
          open,
          P.seq([
            P.notMatch(P.alt([close, newLine])),
            P.char
          ], 1).many(1),
          close
        ]).map((result) => M.MATH_INLINE(result[1].join("")));
      },
      mention: (r) => {
        const parser = P.seq([
          notLinkLabel,
          P.str("@"),
          P.regexp(/[a-z0-9_-]+/i),
          P.seq([
            P.str("@"),
            P.regexp(/[a-z0-9_.-]+/i)
          ], 1).option()
        ]);
        return new P.Parser((input, index, state) => {
          let result;
          result = parser.handler(input, index, state);
          if (!result.success) {
            return P.failure();
          }
          const beforeStr = input.slice(0, index);
          if (/[a-z0-9]$/i.test(beforeStr)) {
            return P.failure();
          }
          let invalidMention = false;
          const resultIndex = result.index;
          const username = result.value[2];
          const hostname = result.value[3];
          let modifiedHost = hostname;
          if (hostname != null) {
            result = /[.-]+$/.exec(hostname);
            if (result != null) {
              modifiedHost = hostname.slice(0, -1 * result[0].length);
              if (modifiedHost.length === 0) {
                invalidMention = true;
                modifiedHost = null;
              }
            }
          }
          let modifiedName = username;
          result = /-+$/.exec(username);
          if (result != null) {
            if (modifiedHost == null) {
              modifiedName = username.slice(0, -1 * result[0].length);
            } else {
              invalidMention = true;
            }
          }
          if (modifiedName.length === 0 || modifiedName[0] === "-") {
            invalidMention = true;
          }
          if (modifiedHost != null && /^[.-]/.test(modifiedHost)) {
            invalidMention = true;
          }
          if (invalidMention) {
            return P.success(resultIndex, input.slice(index, resultIndex));
          }
          const acct = modifiedHost != null ? `@${modifiedName}@${modifiedHost}` : `@${modifiedName}`;
          return P.success(index + acct.length, M.MENTION(modifiedName, modifiedHost, acct));
        });
      },
      hashtag: (r) => {
        const mark = P.str("#");
        const hashTagChar = P.seq([
          P.notMatch(P.alt([P.regexp(/[ \u3000\t.,!?'"#:/[\]【】()「」（）<>]/), space2, newLine])),
          P.char
        ], 1);
        const innerItem = P.lazy(() => P.alt([
          P.seq([
            P.str("("),
            nest(innerItem, hashTagChar).many(0),
            P.str(")")
          ]),
          P.seq([
            P.str("["),
            nest(innerItem, hashTagChar).many(0),
            P.str("]")
          ]),
          P.seq([
            P.str("\u300C"),
            nest(innerItem, hashTagChar).many(0),
            P.str("\u300D")
          ]),
          P.seq([
            P.str("\uFF08"),
            nest(innerItem, hashTagChar).many(0),
            P.str("\uFF09")
          ]),
          hashTagChar
        ]));
        const parser = P.seq([
          notLinkLabel,
          mark,
          innerItem.many(1).text()
        ], 2);
        return new P.Parser((input, index, state) => {
          const result = parser.handler(input, index, state);
          if (!result.success) {
            return P.failure();
          }
          const beforeStr = input.slice(0, index);
          if (/[a-z0-9]$/i.test(beforeStr)) {
            return P.failure();
          }
          const resultIndex = result.index;
          const resultValue = result.value;
          if (/^[0-9]+$/.test(resultValue)) {
            return P.failure();
          }
          return P.success(resultIndex, M.HASHTAG(resultValue));
        });
      },
      emojiCode: (r) => {
        const side = P.notMatch(P.regexp(/[a-z0-9]/i));
        const mark = P.str(":");
        return P.seq([
          P.alt([P.lineBegin, side]),
          mark,
          P.regexp(/[a-z0-9_+-]+/i),
          mark,
          P.alt([P.lineEnd, side])
        ], 2).map((name) => M.EMOJI_CODE(name));
      },
      link: (r) => {
        const labelInline = new P.Parser((input, index, state) => {
          state.linkLabel = true;
          const result = r.inline.handler(input, index, state);
          state.linkLabel = false;
          return result;
        });
        const closeLabel = P.str("]");
        return P.seq([
          notLinkLabel,
          P.alt([P.str("?["), P.str("[")]),
          P.seq([
            P.notMatch(P.alt([closeLabel, newLine])),
            nest(labelInline)
          ], 1).many(1),
          closeLabel,
          P.str("("),
          P.alt([r.urlAlt, r.url]),
          P.str(")")
        ]).map((result) => {
          const silent = result[1] === "?[";
          const label = result[2];
          const url = result[5];
          return M.LINK(silent, url.props.url, (0, util_1.mergeText)(label));
        });
      },
      url: (r) => {
        const urlChar = P.regexp(/[.,a-z0-9_/:%#@$&?!~=+-]/i);
        const innerItem = P.lazy(() => P.alt([
          P.seq([
            P.str("("),
            nest(innerItem, urlChar).many(0),
            P.str(")")
          ]),
          P.seq([
            P.str("["),
            nest(innerItem, urlChar).many(0),
            P.str("]")
          ]),
          urlChar
        ]));
        const parser = P.seq([
          notLinkLabel,
          P.regexp(/https?:\/\//),
          innerItem.many(1).text()
        ]);
        return new P.Parser((input, index, state) => {
          let result;
          result = parser.handler(input, index, state);
          if (!result.success) {
            return P.failure();
          }
          const resultIndex = result.index;
          let modifiedIndex = resultIndex;
          const schema = result.value[1];
          let content = result.value[2];
          result = /[.,]+$/.exec(content);
          if (result != null) {
            modifiedIndex -= result[0].length;
            content = content.slice(0, -1 * result[0].length);
            if (content.length === 0) {
              return P.success(resultIndex, input.slice(index, resultIndex));
            }
          }
          return P.success(modifiedIndex, M.N_URL(schema + content, false));
        });
      },
      urlAlt: (r) => {
        const open = P.str("<");
        const close = P.str(">");
        const parser = P.seq([
          notLinkLabel,
          open,
          P.regexp(/https?:\/\//),
          P.seq([P.notMatch(P.alt([close, space2])), P.char], 1).many(1),
          close
        ]).text();
        return new P.Parser((input, index, state) => {
          const result = parser.handler(input, index, state);
          if (!result.success) {
            return P.failure();
          }
          const text2 = result.value.slice(1, result.value.length - 1);
          return P.success(result.index, M.N_URL(text2, true));
        });
      },
      search: (r) => {
        const button = P.alt([
          P.regexp(/\[(検索|search)\]/i),
          P.regexp(/(検索|search)/i)
        ]);
        return P.seq([
          newLine.option(),
          P.lineBegin,
          P.seq([
            P.notMatch(P.alt([
              newLine,
              P.seq([space2, button, P.lineEnd])
            ])),
            P.char
          ], 1).many(1),
          space2,
          button,
          P.lineEnd,
          newLine.option()
        ]).map((result) => {
          const query = result[2].join("");
          return M.SEARCH(query, `${query}${result[3]}${result[4]}`);
        });
      },
      text: (r) => P.char
    });
  }
});

// node_modules/mfm-js/built/internal/index.js
var require_internal = __commonJS({
  "node_modules/mfm-js/built/internal/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.simpleParser = exports.fullParser = void 0;
    var parser_1 = require_parser();
    var util_1 = require_util();
    function fullParser(input, opts) {
      const result = parser_1.language.fullParser.handler(input, 0, {
        nestLimit: opts.nestLimit != null ? opts.nestLimit : 20,
        depth: 0,
        linkLabel: false,
        trace: false
      });
      return (0, util_1.mergeText)(result.value);
    }
    exports.fullParser = fullParser;
    function simpleParser(input) {
      const result = parser_1.language.simpleParser.handler(input, 0, {});
      return (0, util_1.mergeText)(result.value);
    }
    exports.simpleParser = simpleParser;
  }
});

// node_modules/mfm-js/built/api.js
var require_api = __commonJS({
  "node_modules/mfm-js/built/api.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.extract = exports.inspect = exports.toString = exports.parseSimple = exports.parse = void 0;
    var internal_1 = require_internal();
    var util_1 = require_util();
    function parse2(input, opts = {}) {
      const nodes = (0, internal_1.fullParser)(input, {
        nestLimit: opts.nestLimit
      });
      return nodes;
    }
    exports.parse = parse2;
    function parseSimple(input) {
      const nodes = (0, internal_1.simpleParser)(input);
      return nodes;
    }
    exports.parseSimple = parseSimple;
    function toString(node) {
      if (Array.isArray(node)) {
        return (0, util_1.stringifyTree)(node);
      } else {
        return (0, util_1.stringifyNode)(node);
      }
    }
    exports.toString = toString;
    function inspect(node, action) {
      if (Array.isArray(node)) {
        for (const n of node) {
          (0, util_1.inspectOne)(n, action);
        }
      } else {
        (0, util_1.inspectOne)(node, action);
      }
    }
    exports.inspect = inspect;
    function extract(nodes, predicate) {
      const dest = [];
      inspect(nodes, (node) => {
        if (predicate(node)) {
          dest.push(node);
        }
      });
      return dest;
    }
    exports.extract = extract;
  }
});

// node_modules/mfm-js/built/index.js
var require_built = __commonJS({
  "node_modules/mfm-js/built/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TEXT = exports.PLAIN = exports.FN = exports.LINK = exports.N_URL = exports.HASHTAG = exports.MENTION = exports.MATH_INLINE = exports.INLINE_CODE = exports.STRIKE = exports.ITALIC = exports.SMALL = exports.BOLD = exports.EMOJI_CODE = exports.UNI_EMOJI = exports.CENTER = exports.MATH_BLOCK = exports.CODE_BLOCK = exports.SEARCH = exports.QUOTE = exports.extract = exports.inspect = exports.toString = exports.parseSimple = exports.parse = void 0;
    var api_1 = require_api();
    Object.defineProperty(exports, "parse", { enumerable: true, get: function() {
      return api_1.parse;
    } });
    Object.defineProperty(exports, "parseSimple", { enumerable: true, get: function() {
      return api_1.parseSimple;
    } });
    Object.defineProperty(exports, "toString", { enumerable: true, get: function() {
      return api_1.toString;
    } });
    Object.defineProperty(exports, "inspect", { enumerable: true, get: function() {
      return api_1.inspect;
    } });
    Object.defineProperty(exports, "extract", { enumerable: true, get: function() {
      return api_1.extract;
    } });
    var node_1 = require_node();
    Object.defineProperty(exports, "QUOTE", { enumerable: true, get: function() {
      return node_1.QUOTE;
    } });
    Object.defineProperty(exports, "SEARCH", { enumerable: true, get: function() {
      return node_1.SEARCH;
    } });
    Object.defineProperty(exports, "CODE_BLOCK", { enumerable: true, get: function() {
      return node_1.CODE_BLOCK;
    } });
    Object.defineProperty(exports, "MATH_BLOCK", { enumerable: true, get: function() {
      return node_1.MATH_BLOCK;
    } });
    Object.defineProperty(exports, "CENTER", { enumerable: true, get: function() {
      return node_1.CENTER;
    } });
    Object.defineProperty(exports, "UNI_EMOJI", { enumerable: true, get: function() {
      return node_1.UNI_EMOJI;
    } });
    Object.defineProperty(exports, "EMOJI_CODE", { enumerable: true, get: function() {
      return node_1.EMOJI_CODE;
    } });
    Object.defineProperty(exports, "BOLD", { enumerable: true, get: function() {
      return node_1.BOLD;
    } });
    Object.defineProperty(exports, "SMALL", { enumerable: true, get: function() {
      return node_1.SMALL;
    } });
    Object.defineProperty(exports, "ITALIC", { enumerable: true, get: function() {
      return node_1.ITALIC;
    } });
    Object.defineProperty(exports, "STRIKE", { enumerable: true, get: function() {
      return node_1.STRIKE;
    } });
    Object.defineProperty(exports, "INLINE_CODE", { enumerable: true, get: function() {
      return node_1.INLINE_CODE;
    } });
    Object.defineProperty(exports, "MATH_INLINE", { enumerable: true, get: function() {
      return node_1.MATH_INLINE;
    } });
    Object.defineProperty(exports, "MENTION", { enumerable: true, get: function() {
      return node_1.MENTION;
    } });
    Object.defineProperty(exports, "HASHTAG", { enumerable: true, get: function() {
      return node_1.HASHTAG;
    } });
    Object.defineProperty(exports, "N_URL", { enumerable: true, get: function() {
      return node_1.N_URL;
    } });
    Object.defineProperty(exports, "LINK", { enumerable: true, get: function() {
      return node_1.LINK;
    } });
    Object.defineProperty(exports, "FN", { enumerable: true, get: function() {
      return node_1.FN;
    } });
    Object.defineProperty(exports, "PLAIN", { enumerable: true, get: function() {
      return node_1.PLAIN;
    } });
    Object.defineProperty(exports, "TEXT", { enumerable: true, get: function() {
      return node_1.TEXT;
    } });
  }
});

// node_modules/@fortawesome/free-solid-svg-icons/faTableColumns.js
var require_faTableColumns = __commonJS({
  "node_modules/@fortawesome/free-solid-svg-icons/faTableColumns.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var prefix = "fas";
    var iconName = "table-columns";
    var width = 512;
    var height = 512;
    var aliases = ["columns"];
    var unicode = "f0db";
    var svgPathData = "M0 96C0 60.7 28.7 32 64 32H448c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zm64 64V416H224V160H64zm384 0H288V416H448V160z";
    exports.definition = {
      prefix,
      iconName,
      icon: [
        width,
        height,
        aliases,
        unicode,
        svgPathData
      ]
    };
    exports.faTableColumns = exports.definition;
    exports.prefix = prefix;
    exports.iconName = iconName;
    exports.width = width;
    exports.height = height;
    exports.ligatures = aliases;
    exports.unicode = unicode;
    exports.svgPathData = svgPathData;
    exports.aliases = aliases;
  }
});

// node_modules/svelte/internal/index.mjs
function noop() {
}
function assign(tar, src) {
  for (const k in src)
    tar[k] = src[k];
  return tar;
}
function add_location(element2, file31, line, column, char) {
  element2.__svelte_meta = {
    loc: { file: file31, line, column, char }
  };
}
function run(fn) {
  return fn();
}
function blank_object() {
  return /* @__PURE__ */ Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function is_function(thing) {
  return typeof thing === "function";
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
var src_url_equal_anchor;
function src_url_equal(element_src, url) {
  if (!src_url_equal_anchor) {
    src_url_equal_anchor = document.createElement("a");
  }
  src_url_equal_anchor.href = url;
  return element_src === src_url_equal_anchor.href;
}
function is_empty(obj) {
  return Object.keys(obj).length === 0;
}
function validate_store(store, name) {
  if (store != null && typeof store.subscribe !== "function") {
    throw new Error(`'${name}' is not a store with a 'subscribe' method`);
  }
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function get_store_value(store) {
  let value;
  subscribe(store, (_) => value = _)();
  return value;
}
function component_subscribe(component, store, callback) {
  component.$$.on_destroy.push(subscribe(store, callback));
}
function create_slot(definition, ctx, $$scope, fn) {
  if (definition) {
    const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);
    return definition[0](slot_ctx);
  }
}
function get_slot_context(definition, ctx, $$scope, fn) {
  return definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;
}
function get_slot_changes(definition, $$scope, dirty, fn) {
  if (definition[2] && fn) {
    const lets = definition[2](fn(dirty));
    if ($$scope.dirty === void 0) {
      return lets;
    }
    if (typeof lets === "object") {
      const merged = [];
      const len = Math.max($$scope.dirty.length, lets.length);
      for (let i = 0; i < len; i += 1) {
        merged[i] = $$scope.dirty[i] | lets[i];
      }
      return merged;
    }
    return $$scope.dirty | lets;
  }
  return $$scope.dirty;
}
function update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {
  if (slot_changes) {
    const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);
    slot.p(slot_context, slot_changes);
  }
}
function get_all_dirty_from_scope($$scope) {
  if ($$scope.ctx.length > 32) {
    const dirty = [];
    const length = $$scope.ctx.length / 32;
    for (let i = 0; i < length; i++) {
      dirty[i] = -1;
    }
    return dirty;
  }
  return -1;
}
function compute_slots(slots) {
  const result = {};
  for (const key in slots) {
    result[key] = true;
  }
  return result;
}
function null_to_empty(value) {
  return value == null ? "" : value;
}
var globals = typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : global;
var ResizeObserverSingleton = class {
  constructor(options) {
    this.options = options;
    this._listeners = "WeakMap" in globals ? /* @__PURE__ */ new WeakMap() : void 0;
  }
  observe(element2, listener) {
    this._listeners.set(element2, listener);
    this._getObserver().observe(element2, this.options);
    return () => {
      this._listeners.delete(element2);
      this._observer.unobserve(element2);
    };
  }
  _getObserver() {
    var _a;
    return (_a = this._observer) !== null && _a !== void 0 ? _a : this._observer = new ResizeObserver((entries) => {
      var _a2;
      for (const entry of entries) {
        ResizeObserverSingleton.entries.set(entry.target, entry);
        (_a2 = this._listeners.get(entry.target)) === null || _a2 === void 0 ? void 0 : _a2(entry);
      }
    });
  }
};
ResizeObserverSingleton.entries = "WeakMap" in globals ? /* @__PURE__ */ new WeakMap() : void 0;
var is_hydrating = false;
function start_hydrating() {
  is_hydrating = true;
}
function end_hydrating() {
  is_hydrating = false;
}
function append(target, node) {
  target.appendChild(node);
}
function insert(target, node, anchor) {
  target.insertBefore(node, anchor || null);
}
function detach(node) {
  if (node.parentNode) {
    node.parentNode.removeChild(node);
  }
}
function destroy_each(iterations, detaching) {
  for (let i = 0; i < iterations.length; i += 1) {
    if (iterations[i])
      iterations[i].d(detaching);
  }
}
function element(name) {
  return document.createElement(name);
}
function svg_element(name) {
  return document.createElementNS("http://www.w3.org/2000/svg", name);
}
function text(data) {
  return document.createTextNode(data);
}
function space() {
  return text(" ");
}
function empty() {
  return text("");
}
function listen(node, event, handler, options) {
  node.addEventListener(event, handler, options);
  return () => node.removeEventListener(event, handler, options);
}
function prevent_default(fn) {
  return function(event) {
    event.preventDefault();
    return fn.call(this, event);
  };
}
function attr(node, attribute, value) {
  if (value == null)
    node.removeAttribute(attribute);
  else if (node.getAttribute(attribute) !== value)
    node.setAttribute(attribute, value);
}
function to_number(value) {
  return value === "" ? null : +value;
}
function children(element2) {
  return Array.from(element2.childNodes);
}
function set_input_value(input, value) {
  input.value = value == null ? "" : value;
}
function set_style(node, key, value, important) {
  if (value == null) {
    node.style.removeProperty(key);
  } else {
    node.style.setProperty(key, value, important ? "important" : "");
  }
}
function select_option(select, value, mounting) {
  for (let i = 0; i < select.options.length; i += 1) {
    const option = select.options[i];
    if (option.__value === value) {
      option.selected = true;
      return;
    }
  }
  if (!mounting || value !== void 0) {
    select.selectedIndex = -1;
  }
}
function select_value(select) {
  const selected_option = select.querySelector(":checked");
  return selected_option && selected_option.__value;
}
function toggle_class(element2, name, toggle) {
  element2.classList[toggle ? "add" : "remove"](name);
}
function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {
  const e = document.createEvent("CustomEvent");
  e.initCustomEvent(type, bubbles, cancelable, detail);
  return e;
}
var HtmlTag = class {
  constructor(is_svg = false) {
    this.is_svg = false;
    this.is_svg = is_svg;
    this.e = this.n = null;
  }
  c(html) {
    this.h(html);
  }
  m(html, target, anchor = null) {
    if (!this.e) {
      if (this.is_svg)
        this.e = svg_element(target.nodeName);
      else
        this.e = element(target.nodeType === 11 ? "TEMPLATE" : target.nodeName);
      this.t = target.tagName !== "TEMPLATE" ? target : target.content;
      this.c(html);
    }
    this.i(anchor);
  }
  h(html) {
    this.e.innerHTML = html;
    this.n = Array.from(this.e.nodeName === "TEMPLATE" ? this.e.content.childNodes : this.e.childNodes);
  }
  i(anchor) {
    for (let i = 0; i < this.n.length; i += 1) {
      insert(this.t, this.n[i], anchor);
    }
  }
  p(html) {
    this.d();
    this.h(html);
    this.i(this.a);
  }
  d() {
    this.n.forEach(detach);
  }
};
var current_component;
function set_current_component(component) {
  current_component = component;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function onMount(fn) {
  get_current_component().$$.on_mount.push(fn);
}
function afterUpdate(fn) {
  get_current_component().$$.after_update.push(fn);
}
function setContext(key, context) {
  get_current_component().$$.context.set(key, context);
  return context;
}
function getContext(key) {
  return get_current_component().$$.context.get(key);
}
var dirty_components = [];
var binding_callbacks = [];
var render_callbacks = [];
var flush_callbacks = [];
var resolved_promise = /* @__PURE__ */ Promise.resolve();
var update_scheduled = false;
function schedule_update() {
  if (!update_scheduled) {
    update_scheduled = true;
    resolved_promise.then(flush);
  }
}
function add_render_callback(fn) {
  render_callbacks.push(fn);
}
function add_flush_callback(fn) {
  flush_callbacks.push(fn);
}
var seen_callbacks = /* @__PURE__ */ new Set();
var flushidx = 0;
function flush() {
  if (flushidx !== 0) {
    return;
  }
  const saved_component = current_component;
  do {
    try {
      while (flushidx < dirty_components.length) {
        const component = dirty_components[flushidx];
        flushidx++;
        set_current_component(component);
        update(component.$$);
      }
    } catch (e) {
      dirty_components.length = 0;
      flushidx = 0;
      throw e;
    }
    set_current_component(null);
    dirty_components.length = 0;
    flushidx = 0;
    while (binding_callbacks.length)
      binding_callbacks.pop()();
    for (let i = 0; i < render_callbacks.length; i += 1) {
      const callback = render_callbacks[i];
      if (!seen_callbacks.has(callback)) {
        seen_callbacks.add(callback);
        callback();
      }
    }
    render_callbacks.length = 0;
  } while (dirty_components.length);
  while (flush_callbacks.length) {
    flush_callbacks.pop()();
  }
  update_scheduled = false;
  seen_callbacks.clear();
  set_current_component(saved_component);
}
function update($$) {
  if ($$.fragment !== null) {
    $$.update();
    run_all($$.before_update);
    const dirty = $$.dirty;
    $$.dirty = [-1];
    $$.fragment && $$.fragment.p($$.ctx, dirty);
    $$.after_update.forEach(add_render_callback);
  }
}
function flush_render_callbacks(fns) {
  const filtered = [];
  const targets = [];
  render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));
  targets.forEach((c) => c());
  render_callbacks = filtered;
}
var outroing = /* @__PURE__ */ new Set();
var outros;
function group_outros() {
  outros = {
    r: 0,
    c: [],
    p: outros
    // parent group
  };
}
function check_outros() {
  if (!outros.r) {
    run_all(outros.c);
  }
  outros = outros.p;
}
function transition_in(block, local) {
  if (block && block.i) {
    outroing.delete(block);
    block.i(local);
  }
}
function transition_out(block, local, detach2, callback) {
  if (block && block.o) {
    if (outroing.has(block))
      return;
    outroing.add(block);
    outros.c.push(() => {
      outroing.delete(block);
      if (callback) {
        if (detach2)
          block.d(1);
        callback();
      }
    });
    block.o(local);
  } else if (callback) {
    callback();
  }
}
function destroy_block(block, lookup) {
  block.d(1);
  lookup.delete(block.key);
}
function outro_and_destroy_block(block, lookup) {
  transition_out(block, 1, 1, () => {
    lookup.delete(block.key);
  });
}
function update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block18, next, get_context) {
  let o = old_blocks.length;
  let n = list.length;
  let i = o;
  const old_indexes = {};
  while (i--)
    old_indexes[old_blocks[i].key] = i;
  const new_blocks = [];
  const new_lookup = /* @__PURE__ */ new Map();
  const deltas = /* @__PURE__ */ new Map();
  const updates = [];
  i = n;
  while (i--) {
    const child_ctx = get_context(ctx, list, i);
    const key = get_key(child_ctx);
    let block = lookup.get(key);
    if (!block) {
      block = create_each_block18(key, child_ctx);
      block.c();
    } else if (dynamic) {
      updates.push(() => block.p(child_ctx, dirty));
    }
    new_lookup.set(key, new_blocks[i] = block);
    if (key in old_indexes)
      deltas.set(key, Math.abs(i - old_indexes[key]));
  }
  const will_move = /* @__PURE__ */ new Set();
  const did_move = /* @__PURE__ */ new Set();
  function insert2(block) {
    transition_in(block, 1);
    block.m(node, next);
    lookup.set(block.key, block);
    next = block.first;
    n--;
  }
  while (o && n) {
    const new_block = new_blocks[n - 1];
    const old_block = old_blocks[o - 1];
    const new_key = new_block.key;
    const old_key = old_block.key;
    if (new_block === old_block) {
      next = new_block.first;
      o--;
      n--;
    } else if (!new_lookup.has(old_key)) {
      destroy(old_block, lookup);
      o--;
    } else if (!lookup.has(new_key) || will_move.has(new_key)) {
      insert2(new_block);
    } else if (did_move.has(old_key)) {
      o--;
    } else if (deltas.get(new_key) > deltas.get(old_key)) {
      did_move.add(new_key);
      insert2(new_block);
    } else {
      will_move.add(old_key);
      o--;
    }
  }
  while (o--) {
    const old_block = old_blocks[o];
    if (!new_lookup.has(old_block.key))
      destroy(old_block, lookup);
  }
  while (n)
    insert2(new_blocks[n - 1]);
  run_all(updates);
  return new_blocks;
}
function validate_each_keys(ctx, list, get_context, get_key) {
  const keys = /* @__PURE__ */ new Set();
  for (let i = 0; i < list.length; i++) {
    const key = get_key(get_context(ctx, list, i));
    if (keys.has(key)) {
      throw new Error("Cannot have duplicate keys in a keyed each");
    }
    keys.add(key);
  }
}
var _boolean_attributes = [
  "allowfullscreen",
  "allowpaymentrequest",
  "async",
  "autofocus",
  "autoplay",
  "checked",
  "controls",
  "default",
  "defer",
  "disabled",
  "formnovalidate",
  "hidden",
  "inert",
  "ismap",
  "loop",
  "multiple",
  "muted",
  "nomodule",
  "novalidate",
  "open",
  "playsinline",
  "readonly",
  "required",
  "reversed",
  "selected"
];
var boolean_attributes = /* @__PURE__ */ new Set([..._boolean_attributes]);
function bind(component, name, callback) {
  const index = component.$$.props[name];
  if (index !== void 0) {
    component.$$.bound[index] = callback;
    callback(component.$$.ctx[index]);
  }
}
function create_component(block) {
  block && block.c();
}
function mount_component(component, target, anchor, customElement) {
  const { fragment, after_update } = component.$$;
  fragment && fragment.m(target, anchor);
  if (!customElement) {
    add_render_callback(() => {
      const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);
      if (component.$$.on_destroy) {
        component.$$.on_destroy.push(...new_on_destroy);
      } else {
        run_all(new_on_destroy);
      }
      component.$$.on_mount = [];
    });
  }
  after_update.forEach(add_render_callback);
}
function destroy_component(component, detaching) {
  const $$ = component.$$;
  if ($$.fragment !== null) {
    flush_render_callbacks($$.after_update);
    run_all($$.on_destroy);
    $$.fragment && $$.fragment.d(detaching);
    $$.on_destroy = $$.fragment = null;
    $$.ctx = [];
  }
}
function make_dirty(component, i) {
  if (component.$$.dirty[0] === -1) {
    dirty_components.push(component);
    schedule_update();
    component.$$.dirty.fill(0);
  }
  component.$$.dirty[i / 31 | 0] |= 1 << i % 31;
}
function init(component, options, instance31, create_fragment31, not_equal, props, append_styles, dirty = [-1]) {
  const parent_component = current_component;
  set_current_component(component);
  const $$ = component.$$ = {
    fragment: null,
    ctx: [],
    // state
    props,
    update: noop,
    not_equal,
    bound: blank_object(),
    // lifecycle
    on_mount: [],
    on_destroy: [],
    on_disconnect: [],
    before_update: [],
    after_update: [],
    context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),
    // everything else
    callbacks: blank_object(),
    dirty,
    skip_bound: false,
    root: options.target || parent_component.$$.root
  };
  append_styles && append_styles($$.root);
  let ready = false;
  $$.ctx = instance31 ? instance31(component, options.props || {}, (i, ret, ...rest) => {
    const value = rest.length ? rest[0] : ret;
    if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
      if (!$$.skip_bound && $$.bound[i])
        $$.bound[i](value);
      if (ready)
        make_dirty(component, i);
    }
    return ret;
  }) : [];
  $$.update();
  ready = true;
  run_all($$.before_update);
  $$.fragment = create_fragment31 ? create_fragment31($$.ctx) : false;
  if (options.target) {
    if (options.hydrate) {
      start_hydrating();
      const nodes = children(options.target);
      $$.fragment && $$.fragment.l(nodes);
      nodes.forEach(detach);
    } else {
      $$.fragment && $$.fragment.c();
    }
    if (options.intro)
      transition_in(component.$$.fragment);
    mount_component(component, options.target, options.anchor, options.customElement);
    end_hydrating();
    flush();
  }
  set_current_component(parent_component);
}
var SvelteElement;
if (typeof HTMLElement === "function") {
  SvelteElement = class extends HTMLElement {
    constructor() {
      super();
      this.attachShadow({ mode: "open" });
    }
    connectedCallback() {
      const { on_mount } = this.$$;
      this.$$.on_disconnect = on_mount.map(run).filter(is_function);
      for (const key in this.$$.slotted) {
        this.appendChild(this.$$.slotted[key]);
      }
    }
    attributeChangedCallback(attr2, _oldValue, newValue) {
      this[attr2] = newValue;
    }
    disconnectedCallback() {
      run_all(this.$$.on_disconnect);
    }
    $destroy() {
      destroy_component(this, 1);
      this.$destroy = noop;
    }
    $on(type, callback) {
      if (!is_function(callback)) {
        return noop;
      }
      const callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);
      callbacks.push(callback);
      return () => {
        const index = callbacks.indexOf(callback);
        if (index !== -1)
          callbacks.splice(index, 1);
      };
    }
    $set($$props) {
      if (this.$$set && !is_empty($$props)) {
        this.$$.skip_bound = true;
        this.$$set($$props);
        this.$$.skip_bound = false;
      }
    }
  };
}
var SvelteComponent = class {
  $destroy() {
    destroy_component(this, 1);
    this.$destroy = noop;
  }
  $on(type, callback) {
    if (!is_function(callback)) {
      return noop;
    }
    const callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);
    callbacks.push(callback);
    return () => {
      const index = callbacks.indexOf(callback);
      if (index !== -1)
        callbacks.splice(index, 1);
    };
  }
  $set($$props) {
    if (this.$$set && !is_empty($$props)) {
      this.$$.skip_bound = true;
      this.$$set($$props);
      this.$$.skip_bound = false;
    }
  }
};
function dispatch_dev(type, detail) {
  document.dispatchEvent(custom_event(type, Object.assign({ version: "3.59.2" }, detail), { bubbles: true }));
}
function append_dev(target, node) {
  dispatch_dev("SvelteDOMInsert", { target, node });
  append(target, node);
}
function insert_dev(target, node, anchor) {
  dispatch_dev("SvelteDOMInsert", { target, node, anchor });
  insert(target, node, anchor);
}
function detach_dev(node) {
  dispatch_dev("SvelteDOMRemove", { node });
  detach(node);
}
function listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {
  const modifiers = options === true ? ["capture"] : options ? Array.from(Object.keys(options)) : [];
  if (has_prevent_default)
    modifiers.push("preventDefault");
  if (has_stop_propagation)
    modifiers.push("stopPropagation");
  if (has_stop_immediate_propagation)
    modifiers.push("stopImmediatePropagation");
  dispatch_dev("SvelteDOMAddEventListener", { node, event, handler, modifiers });
  const dispose = listen(node, event, handler, options);
  return () => {
    dispatch_dev("SvelteDOMRemoveEventListener", { node, event, handler, modifiers });
    dispose();
  };
}
function attr_dev(node, attribute, value) {
  attr(node, attribute, value);
  if (value == null)
    dispatch_dev("SvelteDOMRemoveAttribute", { node, attribute });
  else
    dispatch_dev("SvelteDOMSetAttribute", { node, attribute, value });
}
function prop_dev(node, property, value) {
  node[property] = value;
  dispatch_dev("SvelteDOMSetProperty", { node, property, value });
}
function set_data_dev(text2, data) {
  data = "" + data;
  if (text2.data === data)
    return;
  dispatch_dev("SvelteDOMSetData", { node: text2, data });
  text2.data = data;
}
function validate_each_argument(arg) {
  if (typeof arg !== "string" && !(arg && typeof arg === "object" && "length" in arg)) {
    let msg = "{#each} only iterates over array-like objects.";
    if (typeof Symbol === "function" && arg && Symbol.iterator in arg) {
      msg += " You can use a spread to convert this iterable into an array.";
    }
    throw new Error(msg);
  }
}
function validate_slots(name, slot, keys) {
  for (const slot_key of Object.keys(slot)) {
    if (!~keys.indexOf(slot_key)) {
      console.warn(`<${name}> received an unexpected slot "${slot_key}".`);
    }
  }
}
function construct_svelte_component_dev(component, props) {
  const error_message = "this={...} of <svelte:component> should specify a Svelte component.";
  try {
    const instance31 = new component(props);
    if (!instance31.$$ || !instance31.$set || !instance31.$on || !instance31.$destroy) {
      throw new Error(error_message);
    }
    return instance31;
  } catch (err) {
    const { message } = err;
    if (typeof message === "string" && message.indexOf("is not a constructor") !== -1) {
      throw new Error(error_message);
    } else {
      throw err;
    }
  }
}
var SvelteComponentDev = class extends SvelteComponent {
  constructor(options) {
    if (!options || !options.target && !options.$$inline) {
      throw new Error("'target' is a required option");
    }
    super();
  }
  $destroy() {
    super.$destroy();
    this.$destroy = () => {
      console.warn("Component was already destroyed");
    };
  }
  $capture_state() {
  }
  $inject_state() {
  }
};

// node_modules/svelte/store/index.mjs
var subscriber_queue = [];
function readable(value, start) {
  return {
    subscribe: writable(value, start).subscribe
  };
}
function writable(value, start = noop) {
  let stop;
  const subscribers = /* @__PURE__ */ new Set();
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update3(fn) {
    set(fn(value));
  }
  function subscribe3(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0 && stop) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update: update3, subscribe: subscribe3 };
}
function derived(stores, fn, initial_value) {
  const single = !Array.isArray(stores);
  const stores_array = single ? [stores] : stores;
  const auto = fn.length < 2;
  return readable(initial_value, (set) => {
    let started = false;
    const values = [];
    let pending = 0;
    let cleanup = noop;
    const sync = () => {
      if (pending) {
        return;
      }
      cleanup();
      const result = fn(single ? values[0] : values, set);
      if (auto) {
        set(result);
      } else {
        cleanup = is_function(result) ? result : noop;
      }
    };
    const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {
      values[i] = value;
      pending &= ~(1 << i);
      if (started) {
        sync();
      }
    }, () => {
      pending |= 1 << i;
    }));
    started = true;
    sync();
    return function stop() {
      run_all(unsubscribers);
      cleanup();
      started = false;
    };
  });
}

// src/articles/ArticleComponent.svelte
var { console: console_1 } = globals;
var file = "src/articles/ArticleComponent.svelte";
function create_fragment(ctx) {
  let article;
  let switch_instance;
  let updating_modal;
  let updating_showAllMedia;
  let article_class_value;
  let current;
  function switch_instance_modal_binding(value) {
    ctx[11](value);
  }
  function switch_instance_showAllMedia_binding(value) {
    ctx[12](value);
  }
  var switch_value = (
    /*view*/
    ctx[2]
  );
  function switch_props(ctx2) {
    let switch_instance_props = {
      timelineProps: (
        /*timelineProps*/
        ctx2[1]
      ),
      articleProps: (
        /*articleProps*/
        ctx2[0]
      ),
      rootArticle: (
        /*rootArticle*/
        ctx2[6]
      ),
      actualArticle: (
        /*actualArticle*/
        ctx2[7]
      ),
      onLogData: (
        /*onLogData*/
        ctx2[8]
      ),
      onLogJSON: (
        /*onLogJSON*/
        ctx2[9]
      ),
      onMediaClick: (
        /*onMediaClick*/
        ctx2[10]
      )
    };
    if (
      /*modal*/
      ctx2[4] !== void 0
    ) {
      switch_instance_props.modal = /*modal*/
      ctx2[4];
    }
    if (
      /*showAllMedia*/
      ctx2[5] !== void 0
    ) {
      switch_instance_props.showAllMedia = /*showAllMedia*/
      ctx2[5];
    }
    return {
      props: switch_instance_props,
      $$inline: true
    };
  }
  if (switch_value) {
    switch_instance = construct_svelte_component_dev(switch_value, switch_props(ctx));
    binding_callbacks.push(() => bind(switch_instance, "modal", switch_instance_modal_binding));
    binding_callbacks.push(() => bind(switch_instance, "showAllMedia", switch_instance_showAllMedia_binding));
  }
  const block = {
    c: function create() {
      article = element("article");
      if (switch_instance)
        create_component(switch_instance.$$.fragment);
      attr_dev(article, "class", article_class_value = null_to_empty(
        /*articleProps*/
        ctx[0].filteredOut ? "transparent" : ""
      ) + " svelte-1ewdhcj");
      attr_dev(
        article,
        "style",
        /*style*/
        ctx[3]
      );
      add_location(article, file, 81, 0, 1863);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, article, anchor);
      if (switch_instance)
        mount_component(switch_instance, article, null);
      current = true;
    },
    p: function update3(ctx2, [dirty]) {
      const switch_instance_changes = {};
      if (dirty & /*timelineProps*/
      2)
        switch_instance_changes.timelineProps = /*timelineProps*/
        ctx2[1];
      if (dirty & /*articleProps*/
      1)
        switch_instance_changes.articleProps = /*articleProps*/
        ctx2[0];
      if (dirty & /*rootArticle*/
      64)
        switch_instance_changes.rootArticle = /*rootArticle*/
        ctx2[6];
      if (dirty & /*actualArticle*/
      128)
        switch_instance_changes.actualArticle = /*actualArticle*/
        ctx2[7];
      if (!updating_modal && dirty & /*modal*/
      16) {
        updating_modal = true;
        switch_instance_changes.modal = /*modal*/
        ctx2[4];
        add_flush_callback(() => updating_modal = false);
      }
      if (!updating_showAllMedia && dirty & /*showAllMedia*/
      32) {
        updating_showAllMedia = true;
        switch_instance_changes.showAllMedia = /*showAllMedia*/
        ctx2[5];
        add_flush_callback(() => updating_showAllMedia = false);
      }
      if (dirty & /*view*/
      4 && switch_value !== (switch_value = /*view*/
      ctx2[2])) {
        if (switch_instance) {
          group_outros();
          const old_component = switch_instance;
          transition_out(old_component.$$.fragment, 1, 0, () => {
            destroy_component(old_component, 1);
          });
          check_outros();
        }
        if (switch_value) {
          switch_instance = construct_svelte_component_dev(switch_value, switch_props(ctx2));
          binding_callbacks.push(() => bind(switch_instance, "modal", switch_instance_modal_binding));
          binding_callbacks.push(() => bind(switch_instance, "showAllMedia", switch_instance_showAllMedia_binding));
          create_component(switch_instance.$$.fragment);
          transition_in(switch_instance.$$.fragment, 1);
          mount_component(switch_instance, article, null);
        } else {
          switch_instance = null;
        }
      } else if (switch_value) {
        switch_instance.$set(switch_instance_changes);
      }
      if (!current || dirty & /*articleProps*/
      1 && article_class_value !== (article_class_value = null_to_empty(
        /*articleProps*/
        ctx2[0].filteredOut ? "transparent" : ""
      ) + " svelte-1ewdhcj")) {
        attr_dev(article, "class", article_class_value);
      }
      if (!current || dirty & /*style*/
      8) {
        attr_dev(
          article,
          "style",
          /*style*/
          ctx2[3]
        );
      }
    },
    i: function intro(local) {
      if (current)
        return;
      if (switch_instance)
        transition_in(switch_instance.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      if (switch_instance)
        transition_out(switch_instance.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(article);
      if (switch_instance)
        destroy_component(switch_instance);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("ArticleComponent", slots, []);
  let { articleProps } = $$props;
  let { timelineProps } = $$props;
  let { view } = $$props;
  let { style = "" } = $$props;
  style;
  let modal = false;
  let showAllMedia = false;
  const isInjected = getContext("isInjected");
  let rootArticle;
  let actualArticle;
  function onLogData() {
    console.dir(articleProps);
  }
  function onLogJSON() {
    switch (articleProps.type) {
      case "normal":
        console.dir({
          ...articleProps,
          article: articleProps.article.rawSource
        });
        break;
      case "reposts":
        console.dir({
          ...articleProps,
          reposted: getRootArticle(articleProps.reposted).rawSource
        });
        break;
      case "quote":
        console.dir({
          article: getRootArticle(articleProps).rawSource,
          quoted: getRootArticle(articleProps.quoted).rawSource
        });
        break;
    }
  }
  function onMediaClick(idPair, _index) {
    toggleMarkAsRead(idPair);
  }
  $$self.$$.on_mount.push(function() {
    if (articleProps === void 0 && !("articleProps" in $$props || $$self.$$.bound[$$self.$$.props["articleProps"]])) {
      console_1.warn("<ArticleComponent> was created without expected prop 'articleProps'");
    }
    if (timelineProps === void 0 && !("timelineProps" in $$props || $$self.$$.bound[$$self.$$.props["timelineProps"]])) {
      console_1.warn("<ArticleComponent> was created without expected prop 'timelineProps'");
    }
    if (view === void 0 && !("view" in $$props || $$self.$$.bound[$$self.$$.props["view"]])) {
      console_1.warn("<ArticleComponent> was created without expected prop 'view'");
    }
  });
  const writable_props = ["articleProps", "timelineProps", "view", "style"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console_1.warn(`<ArticleComponent> was created with unknown prop '${key}'`);
  });
  function switch_instance_modal_binding(value) {
    modal = value;
    $$invalidate(4, modal);
  }
  function switch_instance_showAllMedia_binding(value) {
    showAllMedia = value;
    $$invalidate(5, showAllMedia);
  }
  $$self.$$set = ($$props2) => {
    if ("articleProps" in $$props2)
      $$invalidate(0, articleProps = $$props2.articleProps);
    if ("timelineProps" in $$props2)
      $$invalidate(1, timelineProps = $$props2.timelineProps);
    if ("view" in $$props2)
      $$invalidate(2, view = $$props2.view);
    if ("style" in $$props2)
      $$invalidate(3, style = $$props2.style);
  };
  $$self.$capture_state = () => ({
    toggleMarkAsRead,
    Article,
    getActualArticle,
    getContext,
    getRootArticle,
    articleProps,
    timelineProps,
    view,
    style,
    modal,
    showAllMedia,
    isInjected,
    rootArticle,
    actualArticle,
    onLogData,
    onLogJSON,
    onMediaClick
  });
  $$self.$inject_state = ($$props2) => {
    if ("articleProps" in $$props2)
      $$invalidate(0, articleProps = $$props2.articleProps);
    if ("timelineProps" in $$props2)
      $$invalidate(1, timelineProps = $$props2.timelineProps);
    if ("view" in $$props2)
      $$invalidate(2, view = $$props2.view);
    if ("style" in $$props2)
      $$invalidate(3, style = $$props2.style);
    if ("modal" in $$props2)
      $$invalidate(4, modal = $$props2.modal);
    if ("showAllMedia" in $$props2)
      $$invalidate(5, showAllMedia = $$props2.showAllMedia);
    if ("rootArticle" in $$props2)
      $$invalidate(6, rootArticle = $$props2.rootArticle);
    if ("actualArticle" in $$props2)
      $$invalidate(7, actualArticle = $$props2.actualArticle);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*articleProps*/
    1) {
      $: {
        $$invalidate(6, rootArticle = getRootArticle(articleProps));
        $$invalidate(7, actualArticle = getActualArticle(articleProps));
      }
    }
  };
  return [
    articleProps,
    timelineProps,
    view,
    style,
    modal,
    showAllMedia,
    rootArticle,
    actualArticle,
    onLogData,
    onLogJSON,
    onMediaClick,
    switch_instance_modal_binding,
    switch_instance_showAllMedia_binding
  ];
}
var ArticleComponent = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance, create_fragment, safe_not_equal, {
      articleProps: 0,
      timelineProps: 1,
      view: 2,
      style: 3
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "ArticleComponent",
      options,
      id: create_fragment.name
    });
  }
  get articleProps() {
    throw new Error("<ArticleComponent>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set articleProps(value) {
    throw new Error("<ArticleComponent>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get timelineProps() {
    throw new Error("<ArticleComponent>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineProps(value) {
    throw new Error("<ArticleComponent>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get view() {
    throw new Error("<ArticleComponent>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set view(value) {
    throw new Error("<ArticleComponent>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get style() {
    throw new Error("<ArticleComponent>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set style(value) {
    throw new Error("<ArticleComponent>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var ArticleComponent_default = ArticleComponent;

// src/containers/index.ts
function articlesWithUniqueKeys(articles) {
  const idPairs = /* @__PURE__ */ new Set();
  return articles.map((a) => {
    let i = 0;
    let key = `${getRootArticle(a).idPairStr}/${i}`;
    while (idPairs.has(key)) {
      key = `${getRootArticle(a).idPairStr}/${++i}`;
    }
    idPairs.add(key);
    return [a, key];
  });
}

// src/containers/ColumnContainer.svelte
var file2 = "src/containers/ColumnContainer.svelte";
function get_each_context(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[3] = list[i][0];
  child_ctx[4] = list[i][1];
  return child_ctx;
}
function create_each_block(key_1, ctx) {
  let first;
  let articlecomponent;
  let current;
  articlecomponent = new ArticleComponent_default({
    props: {
      view: (
        /*props*/
        ctx[1].articleView
      ),
      articleProps: (
        /*articleProps*/
        ctx[3]
      ),
      timelineProps: (
        /*props*/
        ctx[1].timelineArticleProps
      )
    },
    $$inline: true
  });
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      first = empty();
      create_component(articlecomponent.$$.fragment);
      this.first = first;
    },
    m: function mount(target, anchor) {
      insert_dev(target, first, anchor);
      mount_component(articlecomponent, target, anchor);
      current = true;
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      const articlecomponent_changes = {};
      if (dirty & /*props*/
      2)
        articlecomponent_changes.view = /*props*/
        ctx[1].articleView;
      if (dirty & /*props*/
      2)
        articlecomponent_changes.articleProps = /*articleProps*/
        ctx[3];
      if (dirty & /*props*/
      2)
        articlecomponent_changes.timelineProps = /*props*/
        ctx[1].timelineArticleProps;
      articlecomponent.$set(articlecomponent_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(articlecomponent.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(articlecomponent.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(first);
      destroy_component(articlecomponent, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block.name,
    type: "each",
    source: "(8:1) {#each articlesWithUniqueKeys(props.articles) as [articleProps, key] (key)}",
    ctx
  });
  return block;
}
function create_fragment2(ctx) {
  let div;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let current;
  let each_value = articlesWithUniqueKeys(
    /*props*/
    ctx[1].articles
  );
  validate_each_argument(each_value);
  const get_key = (ctx2) => (
    /*key*/
    ctx2[4]
  );
  validate_each_keys(ctx, each_value, get_each_context, get_key);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
  }
  const block = {
    c: function create() {
      div = element("div");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      attr_dev(div, "class", "articlesContainer columnContainer");
      add_location(div, file2, 6, 0, 205);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div, null);
        }
      }
      ctx[2](div);
      current = true;
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*props, articlesWithUniqueKeys*/
      2) {
        each_value = articlesWithUniqueKeys(
          /*props*/
          ctx2[1].articles
        );
        validate_each_argument(each_value);
        group_outros();
        validate_each_keys(ctx2, each_value, get_each_context, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, div, outro_and_destroy_block, create_each_block, null, get_each_context);
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o: function outro(local) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
      ctx[2](null);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment2.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance2($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("ColumnContainer", slots, []);
  let { props } = $$props;
  let { containerRef = void 0 } = $$props;
  $$self.$$.on_mount.push(function() {
    if (props === void 0 && !("props" in $$props || $$self.$$.bound[$$self.$$.props["props"]])) {
      console.warn("<ColumnContainer> was created without expected prop 'props'");
    }
  });
  const writable_props = ["props", "containerRef"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<ColumnContainer> was created with unknown prop '${key}'`);
  });
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      containerRef = $$value;
      $$invalidate(0, containerRef);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("props" in $$props2)
      $$invalidate(1, props = $$props2.props);
    if ("containerRef" in $$props2)
      $$invalidate(0, containerRef = $$props2.containerRef);
  };
  $$self.$capture_state = () => ({
    ArticleComponent: ArticleComponent_default,
    articlesWithUniqueKeys,
    props,
    containerRef
  });
  $$self.$inject_state = ($$props2) => {
    if ("props" in $$props2)
      $$invalidate(1, props = $$props2.props);
    if ("containerRef" in $$props2)
      $$invalidate(0, containerRef = $$props2.containerRef);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [containerRef, props, div_binding];
}
var ColumnContainer = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance2, create_fragment2, safe_not_equal, { props: 1, containerRef: 0 });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "ColumnContainer",
      options,
      id: create_fragment2.name
    });
  }
  get props() {
    throw new Error("<ColumnContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set props(value) {
    throw new Error("<ColumnContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get containerRef() {
    throw new Error("<ColumnContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set containerRef(value) {
    throw new Error("<ColumnContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var ColumnContainer_default = ColumnContainer;

// src/containers/RowContainer.svelte
var file3 = "src/containers/RowContainer.svelte";
function get_each_context2(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[3] = list[i][0];
  child_ctx[4] = list[i][1];
  return child_ctx;
}
function create_each_block2(key_1, ctx) {
  let first;
  let articlecomponent;
  let current;
  articlecomponent = new ArticleComponent_default({
    props: {
      view: (
        /*props*/
        ctx[1].articleView
      ),
      articleProps: (
        /*articleProps*/
        ctx[3]
      ),
      timelineProps: (
        /*props*/
        ctx[1].timelineArticleProps
      ),
      style: `width: calc(100% / ${/*props*/
      ctx[1].columnCount})`
    },
    $$inline: true
  });
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      first = empty();
      create_component(articlecomponent.$$.fragment);
      this.first = first;
    },
    m: function mount(target, anchor) {
      insert_dev(target, first, anchor);
      mount_component(articlecomponent, target, anchor);
      current = true;
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      const articlecomponent_changes = {};
      if (dirty & /*props*/
      2)
        articlecomponent_changes.view = /*props*/
        ctx[1].articleView;
      if (dirty & /*props*/
      2)
        articlecomponent_changes.articleProps = /*articleProps*/
        ctx[3];
      if (dirty & /*props*/
      2)
        articlecomponent_changes.timelineProps = /*props*/
        ctx[1].timelineArticleProps;
      if (dirty & /*props*/
      2)
        articlecomponent_changes.style = `width: calc(100% / ${/*props*/
        ctx[1].columnCount})`;
      articlecomponent.$set(articlecomponent_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(articlecomponent.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(articlecomponent.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(first);
      destroy_component(articlecomponent, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block2.name,
    type: "each",
    source: "(16:1) {#each articlesWithUniqueKeys(props.articles) as [articleProps, key] (key)}",
    ctx
  });
  return block;
}
function create_fragment3(ctx) {
  let div;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let current;
  let each_value = articlesWithUniqueKeys(
    /*props*/
    ctx[1].articles
  );
  validate_each_argument(each_value);
  const get_key = (ctx2) => (
    /*key*/
    ctx2[4]
  );
  validate_each_keys(ctx, each_value, get_each_context2, get_key);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context2(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block2(key, child_ctx));
  }
  const block = {
    c: function create() {
      div = element("div");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      attr_dev(div, "class", "articlesContainer rowContainer svelte-d28hzw");
      set_style(
        div,
        "flex-direction",
        /*props*/
        ctx[1].rtl ? "row-reverse" : null
      );
      add_location(div, file3, 14, 0, 324);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div, null);
        }
      }
      ctx[2](div);
      current = true;
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*props, articlesWithUniqueKeys*/
      2) {
        each_value = articlesWithUniqueKeys(
          /*props*/
          ctx2[1].articles
        );
        validate_each_argument(each_value);
        group_outros();
        validate_each_keys(ctx2, each_value, get_each_context2, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, div, outro_and_destroy_block, create_each_block2, null, get_each_context2);
        check_outros();
      }
      if (dirty & /*props*/
      2) {
        set_style(
          div,
          "flex-direction",
          /*props*/
          ctx2[1].rtl ? "row-reverse" : null
        );
      }
    },
    i: function intro(local) {
      if (current)
        return;
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o: function outro(local) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
      ctx[2](null);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment3.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance3($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("RowContainer", slots, []);
  let { containerRef = void 0 } = $$props;
  let { props } = $$props;
  $$self.$$.on_mount.push(function() {
    if (props === void 0 && !("props" in $$props || $$self.$$.bound[$$self.$$.props["props"]])) {
      console.warn("<RowContainer> was created without expected prop 'props'");
    }
  });
  const writable_props = ["containerRef", "props"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<RowContainer> was created with unknown prop '${key}'`);
  });
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      containerRef = $$value;
      $$invalidate(0, containerRef);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("containerRef" in $$props2)
      $$invalidate(0, containerRef = $$props2.containerRef);
    if ("props" in $$props2)
      $$invalidate(1, props = $$props2.props);
  };
  $$self.$capture_state = () => ({
    ArticleComponent: ArticleComponent_default,
    articlesWithUniqueKeys,
    containerRef,
    props
  });
  $$self.$inject_state = ($$props2) => {
    if ("containerRef" in $$props2)
      $$invalidate(0, containerRef = $$props2.containerRef);
    if ("props" in $$props2)
      $$invalidate(1, props = $$props2.props);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [containerRef, props, div_binding];
}
var RowContainer = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance3, create_fragment3, safe_not_equal, { containerRef: 0, props: 1 });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "RowContainer",
      options,
      id: create_fragment3.name
    });
  }
  get containerRef() {
    throw new Error("<RowContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set containerRef(value) {
    throw new Error("<RowContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get props() {
    throw new Error("<RowContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set props(value) {
    throw new Error("<RowContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var RowContainer_default = RowContainer;

// src/containers/MasonryContainer.svelte
var { Object: Object_1 } = globals;
var file4 = "src/containers/MasonryContainer.svelte";
function get_each_context3(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[10] = list[i];
  child_ctx[12] = i;
  return child_ctx;
}
function get_each_context_1(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[13] = list[i];
  child_ctx[15] = i;
  return child_ctx;
}
function create_each_block_1(key_1, ctx) {
  let first;
  let articlecomponent;
  let current;
  articlecomponent = new ArticleComponent_default({
    props: {
      view: (
        /*props*/
        ctx[1].articleView
      ),
      articleProps: (
        /*uniqueArticles*/
        ctx[2][
          /*idPairStr*/
          ctx[13]
        ].articleProps
      ),
      timelineProps: (
        /*props*/
        ctx[1].timelineArticleProps
      )
    },
    $$inline: true
  });
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      first = empty();
      create_component(articlecomponent.$$.fragment);
      this.first = first;
    },
    m: function mount(target, anchor) {
      insert_dev(target, first, anchor);
      mount_component(articlecomponent, target, anchor);
      current = true;
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      const articlecomponent_changes = {};
      if (dirty & /*props*/
      2)
        articlecomponent_changes.view = /*props*/
        ctx[1].articleView;
      if (dirty & /*uniqueArticles, columns*/
      12)
        articlecomponent_changes.articleProps = /*uniqueArticles*/
        ctx[2][
          /*idPairStr*/
          ctx[13]
        ].articleProps;
      if (dirty & /*props*/
      2)
        articlecomponent_changes.timelineProps = /*props*/
        ctx[1].timelineArticleProps;
      articlecomponent.$set(articlecomponent_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(articlecomponent.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(articlecomponent.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(first);
      destroy_component(articlecomponent, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_1.name,
    type: "each",
    source: "(101:3) {#each column.articles as idPairStr, index (idPairStr)}",
    ctx
  });
  return block;
}
function create_each_block3(key_1, ctx) {
  let div;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let t;
  let current;
  let each_value_1 = (
    /*column*/
    ctx[10].articles
  );
  validate_each_argument(each_value_1);
  const get_key = (ctx2) => (
    /*idPairStr*/
    ctx2[13]
  );
  validate_each_keys(ctx, each_value_1, get_each_context_1, get_key);
  for (let i = 0; i < each_value_1.length; i += 1) {
    let child_ctx = get_each_context_1(ctx, each_value_1, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block_1(key, child_ctx));
  }
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      div = element("div");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t = space();
      attr_dev(div, "class", "masonryColumn svelte-1xfkx00");
      add_location(div, file4, 97, 2, 3609);
      this.first = div;
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div, null);
        }
      }
      append_dev(div, t);
      current = true;
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty & /*props, uniqueArticles, columns*/
      14) {
        each_value_1 = /*column*/
        ctx[10].articles;
        validate_each_argument(each_value_1);
        group_outros();
        validate_each_keys(ctx, each_value_1, get_each_context_1, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value_1, each_1_lookup, div, outro_and_destroy_block, create_each_block_1, t, get_each_context_1);
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      for (let i = 0; i < each_value_1.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o: function outro(local) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block3.name,
    type: "each",
    source: "(97:1) {#each columns as column, i (i)}",
    ctx
  });
  return block;
}
function create_fragment4(ctx) {
  let div;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let current;
  let each_value = (
    /*columns*/
    ctx[3]
  );
  validate_each_argument(each_value);
  const get_key = (ctx2) => (
    /*i*/
    ctx2[12]
  );
  validate_each_keys(ctx, each_value, get_each_context3, get_key);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context3(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block3(key, child_ctx));
  }
  const block = {
    c: function create() {
      div = element("div");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      attr_dev(div, "class", "articlesContainer masonryContainer svelte-1xfkx00");
      set_style(
        div,
        "flex-direction",
        /*props*/
        ctx[1].rtl ? "row-reverse" : null
      );
      add_location(div, file4, 95, 0, 3443);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div, null);
        }
      }
      ctx[6](div);
      current = true;
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*columns, props, uniqueArticles*/
      14) {
        each_value = /*columns*/
        ctx2[3];
        validate_each_argument(each_value);
        group_outros();
        validate_each_keys(ctx2, each_value, get_each_context3, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, div, outro_and_destroy_block, create_each_block3, null, get_each_context3);
        check_outros();
      }
      if (dirty & /*props*/
      2) {
        set_style(
          div,
          "flex-direction",
          /*props*/
          ctx2[1].rtl ? "row-reverse" : null
        );
      }
    },
    i: function intro(local) {
      if (current)
        return;
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o: function outro(local) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
      ctx[6](null);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment4.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance4($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("MasonryContainer", slots, []);
  let { containerRef = void 0 } = $$props;
  let { props } = $$props;
  let lastRebalanceTrigger = false;
  let lastColumnCount = props.columnCount;
  let uniqueArticles;
  let columns = [];
  function makeColumns() {
    $$invalidate(3, columns = []);
    for (let i = 0; i < props.columnCount; ++i)
      columns.push({ articles: [], ratio: 0 });
    const sortedArticles = Object.values(uniqueArticles);
    sortedArticles.sort((a, b) => a.index - b.index);
    for (const { articleProps } of sortedArticles)
      addArticle(getRootArticle(articleProps).idPairStr);
    return columns;
  }
  function addArticle(idPairStr) {
    const smallestIndex = columns.reduce((acc, curr, currIndex) => curr.ratio < columns[acc].ratio ? currIndex : acc, 0);
    columns[smallestIndex].articles.push(idPairStr);
    $$invalidate(3, columns[smallestIndex].ratio += getRatio2(uniqueArticles[idPairStr].articleProps), columns);
    return smallestIndex;
  }
  function getRatio2(article) {
    return 1 + getActualArticle(article).medias.reduce((acc, curr) => acc + (curr.ratio ?? 1), 0);
  }
  $$self.$$.on_mount.push(function() {
    if (props === void 0 && !("props" in $$props || $$self.$$.bound[$$self.$$.props["props"]])) {
      console.warn("<MasonryContainer> was created without expected prop 'props'");
    }
  });
  const writable_props = ["containerRef", "props"];
  Object_1.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<MasonryContainer> was created with unknown prop '${key}'`);
  });
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      containerRef = $$value;
      $$invalidate(0, containerRef);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("containerRef" in $$props2)
      $$invalidate(0, containerRef = $$props2.containerRef);
    if ("props" in $$props2)
      $$invalidate(1, props = $$props2.props);
  };
  $$self.$capture_state = () => ({
    ArticleComponent: ArticleComponent_default,
    getActualArticle,
    getRootArticle,
    containerRef,
    props,
    lastRebalanceTrigger,
    lastColumnCount,
    uniqueArticles,
    columns,
    makeColumns,
    addArticle,
    getRatio: getRatio2
  });
  $$self.$inject_state = ($$props2) => {
    if ("containerRef" in $$props2)
      $$invalidate(0, containerRef = $$props2.containerRef);
    if ("props" in $$props2)
      $$invalidate(1, props = $$props2.props);
    if ("lastRebalanceTrigger" in $$props2)
      $$invalidate(4, lastRebalanceTrigger = $$props2.lastRebalanceTrigger);
    if ("lastColumnCount" in $$props2)
      $$invalidate(5, lastColumnCount = $$props2.lastColumnCount);
    if ("uniqueArticles" in $$props2)
      $$invalidate(2, uniqueArticles = $$props2.uniqueArticles);
    if ("columns" in $$props2)
      $$invalidate(3, columns = $$props2.columns);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*props*/
    2) {
      $: {
        $$invalidate(2, uniqueArticles = {});
        const idPairs = /* @__PURE__ */ new Set();
        for (const a of props.articles) {
          let lastSize = idPairs.size;
          idPairs.add(getRootArticle(a).idPairStr);
          if (idPairs.size > lastSize) {
            $$invalidate(2, uniqueArticles[getRootArticle(a).idPairStr] = { articleProps: a, index: lastSize }, uniqueArticles);
          }
        }
      }
    }
    if ($$self.$$.dirty & /*props, lastRebalanceTrigger, lastColumnCount*/
    50) {
      $:
        if (props.rebalanceTrigger !== lastRebalanceTrigger || props.columnCount !== lastColumnCount) {
          $$invalidate(3, columns = []);
          $$invalidate(4, lastRebalanceTrigger = props.rebalanceTrigger);
          $$invalidate(5, lastColumnCount = props.columnCount);
        }
    }
    if ($$self.$$.dirty & /*columns, uniqueArticles*/
    12) {
      $: {
        if (!columns.length) {
          $$invalidate(3, columns = makeColumns());
        } else {
          const columnsChanged = /* @__PURE__ */ new Set();
          const addedArticles = [];
          for (let i = 0; i < columns.length; ++i) {
            for (let j = 0; j < columns[i].articles.length; ) {
              if (!uniqueArticles[columns[i].articles[j]]) {
                columns[i].articles.splice(j, 1);
                columnsChanged.add(i);
              } else
                ++j;
            }
          }
          for (const { articleProps, index } of Object.values(uniqueArticles)) {
            if (!columns.some((c) => c.articles.some((idPair) => getRootArticle(uniqueArticles[idPair].articleProps).idPairStr === getRootArticle(articleProps).idPairStr))) {
              addedArticles.push({
                idPairStr: getRootArticle(articleProps).idPairStr,
                index
              });
            }
          }
          addedArticles.sort((a, b) => a.index - b.index);
          for (const { idPairStr } of addedArticles)
            columnsChanged.add(addArticle(idPairStr));
          for (let i = 0; i < columns.length; ++i)
            columns[i].articles.sort((a, b) => uniqueArticles[a].index - uniqueArticles[b].index);
          for (const i of columnsChanged.values())
            $$invalidate(3, columns[i].ratio = columns[i].articles.reduce((acc, curr) => acc + getRatio2(uniqueArticles[curr].articleProps), 0), columns);
        }
      }
    }
  };
  return [
    containerRef,
    props,
    uniqueArticles,
    columns,
    lastRebalanceTrigger,
    lastColumnCount,
    div_binding
  ];
}
var MasonryContainer = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance4, create_fragment4, safe_not_equal, { containerRef: 0, props: 1 });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "MasonryContainer",
      options,
      id: create_fragment4.name
    });
  }
  get containerRef() {
    throw new Error("<MasonryContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set containerRef(value) {
    throw new Error("<MasonryContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get props() {
    throw new Error("<MasonryContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set props(value) {
    throw new Error("<MasonryContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var MasonryContainer_default = MasonryContainer;

// node_modules/svelte-fa/src/utils.js
var parseNumber = parseFloat;
function joinCss(obj, separator = ";") {
  let texts;
  if (Array.isArray(obj)) {
    texts = obj.filter((text2) => text2);
  } else {
    texts = [];
    for (const prop in obj) {
      if (obj[prop]) {
        texts.push(`${prop}:${obj[prop]}`);
      }
    }
  }
  return texts.join(separator);
}
function getStyles(style, size, pull, fw) {
  let float;
  let width;
  const height = "1em";
  let lineHeight;
  let fontSize;
  let textAlign;
  let verticalAlign = "-.125em";
  const overflow = "visible";
  if (fw) {
    textAlign = "center";
    width = "1.25em";
  }
  if (pull) {
    float = pull;
  }
  if (size) {
    if (size == "lg") {
      fontSize = "1.33333em";
      lineHeight = ".75em";
      verticalAlign = "-.225em";
    } else if (size == "xs") {
      fontSize = ".75em";
    } else if (size == "sm") {
      fontSize = ".875em";
    } else {
      fontSize = size.replace("x", "em");
    }
  }
  return joinCss([
    joinCss({
      float,
      width,
      height,
      "line-height": lineHeight,
      "font-size": fontSize,
      "text-align": textAlign,
      "vertical-align": verticalAlign,
      "transform-origin": "center",
      overflow
    }),
    style
  ]);
}
function getTransform(scale, translateX, translateY, rotate, flip, translateTimes = 1, translateUnit = "", rotateUnit = "") {
  let flipX = 1;
  let flipY = 1;
  if (flip) {
    if (flip == "horizontal") {
      flipX = -1;
    } else if (flip == "vertical") {
      flipY = -1;
    } else {
      flipX = flipY = -1;
    }
  }
  return joinCss(
    [
      `translate(${parseNumber(translateX) * translateTimes}${translateUnit},${parseNumber(translateY) * translateTimes}${translateUnit})`,
      `scale(${flipX * parseNumber(scale)},${flipY * parseNumber(scale)})`,
      rotate && `rotate(${rotate}${rotateUnit})`
    ],
    " "
  );
}

// node_modules/svelte-fa/src/fa.svelte
var file5 = "node_modules/svelte-fa/src/fa.svelte";
function create_if_block(ctx) {
  let svg;
  let g1;
  let g0;
  let g1_transform_value;
  let g1_transform_origin_value;
  let svg_id_value;
  let svg_class_value;
  let svg_viewBox_value;
  function select_block_type(ctx2, dirty) {
    if (typeof /*i*/
    ctx2[10][4] == "string")
      return create_if_block_1;
    return create_else_block;
  }
  let current_block_type = select_block_type(ctx, -1);
  let if_block = current_block_type(ctx);
  const block = {
    c: function create() {
      svg = svg_element("svg");
      g1 = svg_element("g");
      g0 = svg_element("g");
      if_block.c();
      attr_dev(
        g0,
        "transform",
        /*transform*/
        ctx[12]
      );
      add_location(g0, file5, 81, 6, 1397);
      attr_dev(g1, "transform", g1_transform_value = "translate(" + /*i*/
      ctx[10][0] / 2 + " " + /*i*/
      ctx[10][1] / 2 + ")");
      attr_dev(g1, "transform-origin", g1_transform_origin_value = /*i*/
      ctx[10][0] / 4 + " 0");
      add_location(g1, file5, 77, 4, 1293);
      attr_dev(svg, "id", svg_id_value = /*id*/
      ctx[1] || void 0);
      attr_dev(svg, "class", svg_class_value = "svelte-fa " + /*clazz*/
      ctx[0] + " svelte-1cj2gr0");
      attr_dev(
        svg,
        "style",
        /*s*/
        ctx[11]
      );
      attr_dev(svg, "viewBox", svg_viewBox_value = "0 0 " + /*i*/
      ctx[10][0] + " " + /*i*/
      ctx[10][1]);
      attr_dev(svg, "aria-hidden", "true");
      attr_dev(svg, "role", "img");
      attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
      toggle_class(
        svg,
        "pulse",
        /*pulse*/
        ctx[4]
      );
      toggle_class(
        svg,
        "spin",
        /*spin*/
        ctx[3]
      );
      add_location(svg, file5, 66, 2, 1071);
    },
    m: function mount(target, anchor) {
      insert_dev(target, svg, anchor);
      append_dev(svg, g1);
      append_dev(g1, g0);
      if_block.m(g0, null);
    },
    p: function update3(ctx2, dirty) {
      if (current_block_type === (current_block_type = select_block_type(ctx2, dirty)) && if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block.d(1);
        if_block = current_block_type(ctx2);
        if (if_block) {
          if_block.c();
          if_block.m(g0, null);
        }
      }
      if (dirty & /*transform*/
      4096) {
        attr_dev(
          g0,
          "transform",
          /*transform*/
          ctx2[12]
        );
      }
      if (dirty & /*i*/
      1024 && g1_transform_value !== (g1_transform_value = "translate(" + /*i*/
      ctx2[10][0] / 2 + " " + /*i*/
      ctx2[10][1] / 2 + ")")) {
        attr_dev(g1, "transform", g1_transform_value);
      }
      if (dirty & /*i*/
      1024 && g1_transform_origin_value !== (g1_transform_origin_value = /*i*/
      ctx2[10][0] / 4 + " 0")) {
        attr_dev(g1, "transform-origin", g1_transform_origin_value);
      }
      if (dirty & /*id*/
      2 && svg_id_value !== (svg_id_value = /*id*/
      ctx2[1] || void 0)) {
        attr_dev(svg, "id", svg_id_value);
      }
      if (dirty & /*clazz*/
      1 && svg_class_value !== (svg_class_value = "svelte-fa " + /*clazz*/
      ctx2[0] + " svelte-1cj2gr0")) {
        attr_dev(svg, "class", svg_class_value);
      }
      if (dirty & /*s*/
      2048) {
        attr_dev(
          svg,
          "style",
          /*s*/
          ctx2[11]
        );
      }
      if (dirty & /*i*/
      1024 && svg_viewBox_value !== (svg_viewBox_value = "0 0 " + /*i*/
      ctx2[10][0] + " " + /*i*/
      ctx2[10][1])) {
        attr_dev(svg, "viewBox", svg_viewBox_value);
      }
      if (dirty & /*clazz, pulse*/
      17) {
        toggle_class(
          svg,
          "pulse",
          /*pulse*/
          ctx2[4]
        );
      }
      if (dirty & /*clazz, spin*/
      9) {
        toggle_class(
          svg,
          "spin",
          /*spin*/
          ctx2[3]
        );
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(svg);
      if_block.d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block.name,
    type: "if",
    source: "(66:0) {#if i[4]}",
    ctx
  });
  return block;
}
function create_else_block(ctx) {
  let path0;
  let path0_d_value;
  let path0_fill_value;
  let path0_fill_opacity_value;
  let path0_transform_value;
  let path1;
  let path1_d_value;
  let path1_fill_value;
  let path1_fill_opacity_value;
  let path1_transform_value;
  const block = {
    c: function create() {
      path0 = svg_element("path");
      path1 = svg_element("path");
      attr_dev(path0, "d", path0_d_value = /*i*/
      ctx[10][4][0]);
      attr_dev(path0, "fill", path0_fill_value = /*secondaryColor*/
      ctx[6] || /*color*/
      ctx[2] || "currentColor");
      attr_dev(path0, "fill-opacity", path0_fill_opacity_value = /*swapOpacity*/
      ctx[9] != false ? (
        /*primaryOpacity*/
        ctx[7]
      ) : (
        /*secondaryOpacity*/
        ctx[8]
      ));
      attr_dev(path0, "transform", path0_transform_value = "translate(" + /*i*/
      ctx[10][0] / -2 + " " + /*i*/
      ctx[10][1] / -2 + ")");
      add_location(path0, file5, 90, 10, 1678);
      attr_dev(path1, "d", path1_d_value = /*i*/
      ctx[10][4][1]);
      attr_dev(path1, "fill", path1_fill_value = /*primaryColor*/
      ctx[5] || /*color*/
      ctx[2] || "currentColor");
      attr_dev(path1, "fill-opacity", path1_fill_opacity_value = /*swapOpacity*/
      ctx[9] != false ? (
        /*secondaryOpacity*/
        ctx[8]
      ) : (
        /*primaryOpacity*/
        ctx[7]
      ));
      attr_dev(path1, "transform", path1_transform_value = "translate(" + /*i*/
      ctx[10][0] / -2 + " " + /*i*/
      ctx[10][1] / -2 + ")");
      add_location(path1, file5, 96, 10, 1935);
    },
    m: function mount(target, anchor) {
      insert_dev(target, path0, anchor);
      insert_dev(target, path1, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*i*/
      1024 && path0_d_value !== (path0_d_value = /*i*/
      ctx2[10][4][0])) {
        attr_dev(path0, "d", path0_d_value);
      }
      if (dirty & /*secondaryColor, color*/
      68 && path0_fill_value !== (path0_fill_value = /*secondaryColor*/
      ctx2[6] || /*color*/
      ctx2[2] || "currentColor")) {
        attr_dev(path0, "fill", path0_fill_value);
      }
      if (dirty & /*swapOpacity, primaryOpacity, secondaryOpacity*/
      896 && path0_fill_opacity_value !== (path0_fill_opacity_value = /*swapOpacity*/
      ctx2[9] != false ? (
        /*primaryOpacity*/
        ctx2[7]
      ) : (
        /*secondaryOpacity*/
        ctx2[8]
      ))) {
        attr_dev(path0, "fill-opacity", path0_fill_opacity_value);
      }
      if (dirty & /*i*/
      1024 && path0_transform_value !== (path0_transform_value = "translate(" + /*i*/
      ctx2[10][0] / -2 + " " + /*i*/
      ctx2[10][1] / -2 + ")")) {
        attr_dev(path0, "transform", path0_transform_value);
      }
      if (dirty & /*i*/
      1024 && path1_d_value !== (path1_d_value = /*i*/
      ctx2[10][4][1])) {
        attr_dev(path1, "d", path1_d_value);
      }
      if (dirty & /*primaryColor, color*/
      36 && path1_fill_value !== (path1_fill_value = /*primaryColor*/
      ctx2[5] || /*color*/
      ctx2[2] || "currentColor")) {
        attr_dev(path1, "fill", path1_fill_value);
      }
      if (dirty & /*swapOpacity, secondaryOpacity, primaryOpacity*/
      896 && path1_fill_opacity_value !== (path1_fill_opacity_value = /*swapOpacity*/
      ctx2[9] != false ? (
        /*secondaryOpacity*/
        ctx2[8]
      ) : (
        /*primaryOpacity*/
        ctx2[7]
      ))) {
        attr_dev(path1, "fill-opacity", path1_fill_opacity_value);
      }
      if (dirty & /*i*/
      1024 && path1_transform_value !== (path1_transform_value = "translate(" + /*i*/
      ctx2[10][0] / -2 + " " + /*i*/
      ctx2[10][1] / -2 + ")")) {
        attr_dev(path1, "transform", path1_transform_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(path0);
      if (detaching)
        detach_dev(path1);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block.name,
    type: "else",
    source: "(89:8) {:else}",
    ctx
  });
  return block;
}
function create_if_block_1(ctx) {
  let path;
  let path_d_value;
  let path_fill_value;
  let path_transform_value;
  const block = {
    c: function create() {
      path = svg_element("path");
      attr_dev(path, "d", path_d_value = /*i*/
      ctx[10][4]);
      attr_dev(path, "fill", path_fill_value = /*color*/
      ctx[2] || /*primaryColor*/
      ctx[5] || "currentColor");
      attr_dev(path, "transform", path_transform_value = "translate(" + /*i*/
      ctx[10][0] / -2 + " " + /*i*/
      ctx[10][1] / -2 + ")");
      add_location(path, file5, 83, 10, 1461);
    },
    m: function mount(target, anchor) {
      insert_dev(target, path, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*i*/
      1024 && path_d_value !== (path_d_value = /*i*/
      ctx2[10][4])) {
        attr_dev(path, "d", path_d_value);
      }
      if (dirty & /*color, primaryColor*/
      36 && path_fill_value !== (path_fill_value = /*color*/
      ctx2[2] || /*primaryColor*/
      ctx2[5] || "currentColor")) {
        attr_dev(path, "fill", path_fill_value);
      }
      if (dirty & /*i*/
      1024 && path_transform_value !== (path_transform_value = "translate(" + /*i*/
      ctx2[10][0] / -2 + " " + /*i*/
      ctx2[10][1] / -2 + ")")) {
        attr_dev(path, "transform", path_transform_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(path);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_1.name,
    type: "if",
    source: "(83:8) {#if typeof i[4] == 'string'}",
    ctx
  });
  return block;
}
function create_fragment5(ctx) {
  let if_block_anchor;
  let if_block = (
    /*i*/
    ctx[10][4] && create_if_block(ctx)
  );
  const block = {
    c: function create() {
      if (if_block)
        if_block.c();
      if_block_anchor = empty();
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      if (if_block)
        if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
    },
    p: function update3(ctx2, [dirty]) {
      if (
        /*i*/
        ctx2[10][4]
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
        } else {
          if_block = create_if_block(ctx2);
          if_block.c();
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (if_block)
        if_block.d(detaching);
      if (detaching)
        detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment5.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance5($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("Fa", slots, []);
  let { class: clazz = "" } = $$props;
  let { id = "" } = $$props;
  let { style = "" } = $$props;
  let { icon } = $$props;
  let { size = "" } = $$props;
  let { color = "" } = $$props;
  let { fw = false } = $$props;
  let { pull = "" } = $$props;
  let { scale = 1 } = $$props;
  let { translateX = 0 } = $$props;
  let { translateY = 0 } = $$props;
  let { rotate = "" } = $$props;
  let { flip = false } = $$props;
  let { spin = false } = $$props;
  let { pulse = false } = $$props;
  let { primaryColor = "" } = $$props;
  let { secondaryColor = "" } = $$props;
  let { primaryOpacity = 1 } = $$props;
  let { secondaryOpacity = 0.4 } = $$props;
  let { swapOpacity = false } = $$props;
  let i;
  let s;
  let transform;
  $$self.$$.on_mount.push(function() {
    if (icon === void 0 && !("icon" in $$props || $$self.$$.bound[$$self.$$.props["icon"]])) {
      console.warn("<Fa> was created without expected prop 'icon'");
    }
  });
  const writable_props = [
    "class",
    "id",
    "style",
    "icon",
    "size",
    "color",
    "fw",
    "pull",
    "scale",
    "translateX",
    "translateY",
    "rotate",
    "flip",
    "spin",
    "pulse",
    "primaryColor",
    "secondaryColor",
    "primaryOpacity",
    "secondaryOpacity",
    "swapOpacity"
  ];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<Fa> was created with unknown prop '${key}'`);
  });
  $$self.$$set = ($$props2) => {
    if ("class" in $$props2)
      $$invalidate(0, clazz = $$props2.class);
    if ("id" in $$props2)
      $$invalidate(1, id = $$props2.id);
    if ("style" in $$props2)
      $$invalidate(13, style = $$props2.style);
    if ("icon" in $$props2)
      $$invalidate(14, icon = $$props2.icon);
    if ("size" in $$props2)
      $$invalidate(15, size = $$props2.size);
    if ("color" in $$props2)
      $$invalidate(2, color = $$props2.color);
    if ("fw" in $$props2)
      $$invalidate(16, fw = $$props2.fw);
    if ("pull" in $$props2)
      $$invalidate(17, pull = $$props2.pull);
    if ("scale" in $$props2)
      $$invalidate(18, scale = $$props2.scale);
    if ("translateX" in $$props2)
      $$invalidate(19, translateX = $$props2.translateX);
    if ("translateY" in $$props2)
      $$invalidate(20, translateY = $$props2.translateY);
    if ("rotate" in $$props2)
      $$invalidate(21, rotate = $$props2.rotate);
    if ("flip" in $$props2)
      $$invalidate(22, flip = $$props2.flip);
    if ("spin" in $$props2)
      $$invalidate(3, spin = $$props2.spin);
    if ("pulse" in $$props2)
      $$invalidate(4, pulse = $$props2.pulse);
    if ("primaryColor" in $$props2)
      $$invalidate(5, primaryColor = $$props2.primaryColor);
    if ("secondaryColor" in $$props2)
      $$invalidate(6, secondaryColor = $$props2.secondaryColor);
    if ("primaryOpacity" in $$props2)
      $$invalidate(7, primaryOpacity = $$props2.primaryOpacity);
    if ("secondaryOpacity" in $$props2)
      $$invalidate(8, secondaryOpacity = $$props2.secondaryOpacity);
    if ("swapOpacity" in $$props2)
      $$invalidate(9, swapOpacity = $$props2.swapOpacity);
  };
  $$self.$capture_state = () => ({
    getStyles,
    getTransform,
    clazz,
    id,
    style,
    icon,
    size,
    color,
    fw,
    pull,
    scale,
    translateX,
    translateY,
    rotate,
    flip,
    spin,
    pulse,
    primaryColor,
    secondaryColor,
    primaryOpacity,
    secondaryOpacity,
    swapOpacity,
    i,
    s,
    transform
  });
  $$self.$inject_state = ($$props2) => {
    if ("clazz" in $$props2)
      $$invalidate(0, clazz = $$props2.clazz);
    if ("id" in $$props2)
      $$invalidate(1, id = $$props2.id);
    if ("style" in $$props2)
      $$invalidate(13, style = $$props2.style);
    if ("icon" in $$props2)
      $$invalidate(14, icon = $$props2.icon);
    if ("size" in $$props2)
      $$invalidate(15, size = $$props2.size);
    if ("color" in $$props2)
      $$invalidate(2, color = $$props2.color);
    if ("fw" in $$props2)
      $$invalidate(16, fw = $$props2.fw);
    if ("pull" in $$props2)
      $$invalidate(17, pull = $$props2.pull);
    if ("scale" in $$props2)
      $$invalidate(18, scale = $$props2.scale);
    if ("translateX" in $$props2)
      $$invalidate(19, translateX = $$props2.translateX);
    if ("translateY" in $$props2)
      $$invalidate(20, translateY = $$props2.translateY);
    if ("rotate" in $$props2)
      $$invalidate(21, rotate = $$props2.rotate);
    if ("flip" in $$props2)
      $$invalidate(22, flip = $$props2.flip);
    if ("spin" in $$props2)
      $$invalidate(3, spin = $$props2.spin);
    if ("pulse" in $$props2)
      $$invalidate(4, pulse = $$props2.pulse);
    if ("primaryColor" in $$props2)
      $$invalidate(5, primaryColor = $$props2.primaryColor);
    if ("secondaryColor" in $$props2)
      $$invalidate(6, secondaryColor = $$props2.secondaryColor);
    if ("primaryOpacity" in $$props2)
      $$invalidate(7, primaryOpacity = $$props2.primaryOpacity);
    if ("secondaryOpacity" in $$props2)
      $$invalidate(8, secondaryOpacity = $$props2.secondaryOpacity);
    if ("swapOpacity" in $$props2)
      $$invalidate(9, swapOpacity = $$props2.swapOpacity);
    if ("i" in $$props2)
      $$invalidate(10, i = $$props2.i);
    if ("s" in $$props2)
      $$invalidate(11, s = $$props2.s);
    if ("transform" in $$props2)
      $$invalidate(12, transform = $$props2.transform);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*icon*/
    16384) {
      $:
        $$invalidate(10, i = icon && icon.icon || [0, 0, "", [], ""]);
    }
    if ($$self.$$.dirty & /*style, size, pull, fw*/
    237568) {
      $:
        $$invalidate(11, s = getStyles(style, size, pull, fw));
    }
    if ($$self.$$.dirty & /*scale, translateX, translateY, rotate, flip*/
    8126464) {
      $:
        $$invalidate(12, transform = getTransform(scale, translateX, translateY, rotate, flip, 512));
    }
  };
  return [
    clazz,
    id,
    color,
    spin,
    pulse,
    primaryColor,
    secondaryColor,
    primaryOpacity,
    secondaryOpacity,
    swapOpacity,
    i,
    s,
    transform,
    style,
    icon,
    size,
    fw,
    pull,
    scale,
    translateX,
    translateY,
    rotate,
    flip
  ];
}
var Fa = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance5, create_fragment5, safe_not_equal, {
      class: 0,
      id: 1,
      style: 13,
      icon: 14,
      size: 15,
      color: 2,
      fw: 16,
      pull: 17,
      scale: 18,
      translateX: 19,
      translateY: 20,
      rotate: 21,
      flip: 22,
      spin: 3,
      pulse: 4,
      primaryColor: 5,
      secondaryColor: 6,
      primaryOpacity: 7,
      secondaryOpacity: 8,
      swapOpacity: 9
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Fa",
      options,
      id: create_fragment5.name
    });
  }
  get class() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set class(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get id() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set id(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get style() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set style(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get icon() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set icon(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get size() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set size(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get color() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set color(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get fw() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set fw(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get pull() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set pull(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get scale() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set scale(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get translateX() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set translateX(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get translateY() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set translateY(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get rotate() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set rotate(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get flip() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set flip(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get spin() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set spin(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get pulse() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set pulse(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get primaryColor() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set primaryColor(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get secondaryColor() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set secondaryColor(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get primaryOpacity() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set primaryOpacity(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get secondaryOpacity() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set secondaryOpacity(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get swapOpacity() {
    throw new Error("<Fa>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set swapOpacity(value) {
    throw new Error("<Fa>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var fa_default = Fa;

// node_modules/@fortawesome/free-solid-svg-icons/index.mjs
var faEyeSlash = {
  prefix: "fas",
  iconName: "eye-slash",
  icon: [640, 512, [], "f070", "M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7L525.6 386.7c39.6-40.6 66.4-86.1 79.9-118.4c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C465.5 68.8 400.8 32 320 32c-68.2 0-125 26.3-169.3 60.8L38.8 5.1zM223.1 149.5C248.6 126.2 282.7 112 320 112c79.5 0 144 64.5 144 144c0 24.9-6.3 48.3-17.4 68.7L408 294.5c8.4-19.3 10.6-41.4 4.8-63.3c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3c0 10.2-2.4 19.8-6.6 28.3l-90.3-70.8zM373 389.9c-16.4 6.5-34.3 10.1-53 10.1c-79.5 0-144-64.5-144-144c0-6.9 .5-13.6 1.4-20.2L83.1 161.5C60.3 191.2 44 220.8 34.5 243.7c-3.3 7.9-3.3 16.7 0 24.6c14.9 35.7 46.2 87.7 93 131.1C174.5 443.2 239.2 480 320 480c47.8 0 89.9-12.9 126.2-32.5L373 389.9z"]
};
var faMaximize = {
  prefix: "fas",
  iconName: "maximize",
  icon: [512, 512, ["expand-arrows-alt"], "f31e", "M200 32H56C42.7 32 32 42.7 32 56V200c0 9.7 5.8 18.5 14.8 22.2s19.3 1.7 26.2-5.2l40-40 79 79-79 79L73 295c-6.9-6.9-17.2-8.9-26.2-5.2S32 302.3 32 312V456c0 13.3 10.7 24 24 24H200c9.7 0 18.5-5.8 22.2-14.8s1.7-19.3-5.2-26.2l-40-40 79-79 79 79-40 40c-6.9 6.9-8.9 17.2-5.2 26.2s12.5 14.8 22.2 14.8H456c13.3 0 24-10.7 24-24V312c0-9.7-5.8-18.5-14.8-22.2s-19.3-1.7-26.2 5.2l-40 40-79-79 79-79 40 40c6.9 6.9 17.2 8.9 26.2 5.2s14.8-12.5 14.8-22.2V56c0-13.3-10.7-24-24-24H312c-9.7 0-18.5 5.8-22.2 14.8s-1.7 19.3 5.2 26.2l40 40-79 79-79-79 40-40c6.9-6.9 8.9-17.2 5.2-26.2S209.7 32 200 32z"]
};
var faExpandArrowsAlt = faMaximize;
var faShuffle = {
  prefix: "fas",
  iconName: "shuffle",
  icon: [512, 512, [128256, "random"], "f074", "M403.8 34.4c12-5 25.7-2.2 34.9 6.9l64 64c6 6 9.4 14.1 9.4 22.6s-3.4 16.6-9.4 22.6l-64 64c-9.2 9.2-22.9 11.9-34.9 6.9s-19.8-16.6-19.8-29.6V160H352c-10.1 0-19.6 4.7-25.6 12.8L284 229.3 244 176l31.2-41.6C293.3 110.2 321.8 96 352 96h32V64c0-12.9 7.8-24.6 19.8-29.6zM164 282.7L204 336l-31.2 41.6C154.7 401.8 126.2 416 96 416H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H96c10.1 0 19.6-4.7 25.6-12.8L164 282.7zm274.6 188c-9.2 9.2-22.9 11.9-34.9 6.9s-19.8-16.6-19.8-29.6V416H352c-30.2 0-58.7-14.2-76.8-38.4L121.6 172.8c-6-8.1-15.5-12.8-25.6-12.8H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H96c30.2 0 58.7 14.2 76.8 38.4L326.4 339.2c6 8.1 15.5 12.8 25.6 12.8h32V320c0-12.9 7.8-24.6 19.8-29.6s25.7-2.2 34.9 6.9l64 64c6 6 9.4 14.1 9.4 22.6s-3.4 16.6-9.4 22.6l-64 64z"]
};
var faRandom = faShuffle;
var faRotateLeft = {
  prefix: "fas",
  iconName: "rotate-left",
  icon: [512, 512, ["rotate-back", "rotate-backward", "undo-alt"], "f2ea", "M48.5 224H40c-13.3 0-24-10.7-24-24V72c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2L98.6 96.6c87.6-86.5 228.7-86.2 315.8 1c87.5 87.5 87.5 229.3 0 316.8s-229.3 87.5-316.8 0c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0c62.5 62.5 163.8 62.5 226.3 0s62.5-163.8 0-226.3c-62.2-62.2-162.7-62.5-225.3-1L185 183c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8H48.5z"]
};
var faTableColumns = {
  prefix: "fas",
  iconName: "table-columns",
  icon: [512, 512, ["columns"], "f0db", "M0 96C0 60.7 28.7 32 64 32H448c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zm64 64V416H224V160H64zm384 0H288V416H448V160z"]
};
var faColumns = faTableColumns;
var faMinimize = {
  prefix: "fas",
  iconName: "minimize",
  icon: [512, 512, ["compress-arrows-alt"], "f78c", "M456 224H312c-13.3 0-24-10.7-24-24V56c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l40 40L442.3 5.7C446 2 450.9 0 456 0s10 2 13.7 5.7l36.7 36.7C510 46 512 50.9 512 56s-2 10-5.7 13.7L433 143l40 40c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8zm0 64c9.7 0 18.5 5.8 22.2 14.8s1.7 19.3-5.2 26.2l-40 40 73.4 73.4c3.6 3.6 5.7 8.5 5.7 13.7s-2 10-5.7 13.7l-36.7 36.7C466 510 461.1 512 456 512s-10-2-13.7-5.7L369 433l-40 40c-6.9 6.9-17.2 8.9-26.2 5.2s-14.8-12.5-14.8-22.2V312c0-13.3 10.7-24 24-24H456zm-256 0c13.3 0 24 10.7 24 24V456c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-40-40L69.7 506.3C66 510 61.1 512 56 512s-10-2-13.7-5.7L5.7 469.7C2 466 0 461.1 0 456s2-10 5.7-13.7L79 369 39 329c-6.9-6.9-8.9-17.2-5.2-26.2s12.5-14.8 22.2-14.8H200zM56 224c-9.7 0-18.5-5.8-22.2-14.8s-1.7-19.3 5.2-26.2l40-40L5.7 69.7C2 66 0 61.1 0 56s2-10 5.7-13.7L42.3 5.7C46 2 50.9 0 56 0s10 2 13.7 5.7L143 79l40-40c6.9-6.9 17.2-8.9 26.2-5.2s14.8 12.5 14.8 22.2V200c0 13.3-10.7 24-24 24H56z"]
};
var faScroll = {
  prefix: "fas",
  iconName: "scroll",
  icon: [576, 512, [128220], "f70e", "M0 80v48c0 17.7 14.3 32 32 32H48 96V80c0-26.5-21.5-48-48-48S0 53.5 0 80zM112 32c10 13.4 16 30 16 48V384c0 35.3 28.7 64 64 64s64-28.7 64-64v-5.3c0-32.4 26.3-58.7 58.7-58.7H480V128c0-53-43-96-96-96H112zM464 480c61.9 0 112-50.1 112-112c0-8.8-7.2-16-16-16H314.7c-14.7 0-26.7 11.9-26.7 26.7V384c0 53-43 96-96 96H368h96z"]
};
var faHeart = {
  prefix: "fas",
  iconName: "heart",
  icon: [512, 512, [128153, 128154, 128155, 128156, 128420, 129293, 129294, 129505, 9829, 10084, 61578], "f004", "M47.6 300.4L228.3 469.1c7.5 7 17.4 10.9 27.7 10.9s20.2-3.9 27.7-10.9L464.4 300.4c30.4-28.3 47.6-68 47.6-109.5v-5.8c0-69.9-50.5-129.5-119.4-141C347 36.5 300.6 51.4 268 84L256 96 244 84c-32.6-32.6-79-47.5-124.6-39.9C50.5 55.6 0 115.2 0 185.1v5.8c0 41.5 17.2 81.2 47.6 109.5z"]
};
var faBarsProgress = {
  prefix: "fas",
  iconName: "bars-progress",
  icon: [512, 512, ["tasks-alt"], "f828", "M448 160H320V128H448v32zM48 64C21.5 64 0 85.5 0 112v64c0 26.5 21.5 48 48 48H464c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H48zM448 352v32H192V352H448zM48 288c-26.5 0-48 21.5-48 48v64c0 26.5 21.5 48 48 48H464c26.5 0 48-21.5 48-48V336c0-26.5-21.5-48-48-48H48z"]
};
var faEye = {
  prefix: "fas",
  iconName: "eye",
  icon: [576, 512, [128065], "f06e", "M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z"]
};
var faUpRightFromSquare = {
  prefix: "fas",
  iconName: "up-right-from-square",
  icon: [512, 512, ["external-link-alt"], "f35d", "M352 0c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9L370.7 96 201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L416 141.3l41.4 41.4c9.2 9.2 22.9 11.9 34.9 6.9s19.8-16.6 19.8-29.6V32c0-17.7-14.3-32-32-32H352zM80 32C35.8 32 0 67.8 0 112V432c0 44.2 35.8 80 80 80H400c44.2 0 80-35.8 80-80V320c0-17.7-14.3-32-32-32s-32 14.3-32 32V432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16H192c17.7 0 32-14.3 32-32s-14.3-32-32-32H80z"]
};
var faExternalLinkAlt = faUpRightFromSquare;
var faGear = {
  prefix: "fas",
  iconName: "gear",
  icon: [512, 512, [9881, "cog"], "f013", "M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z"]
};
var faCog = faGear;
var faEllipsisVertical = {
  prefix: "fas",
  iconName: "ellipsis-vertical",
  icon: [128, 512, ["ellipsis-v"], "f142", "M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z"]
};
var faEllipsisV = faEllipsisVertical;
var faImages = {
  prefix: "fas",
  iconName: "images",
  icon: [576, 512, [], "f302", "M160 32c-35.3 0-64 28.7-64 64V320c0 35.3 28.7 64 64 64H512c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H160zM396 138.7l96 144c4.9 7.4 5.4 16.8 1.2 24.6S480.9 320 472 320H328 280 200c-9.2 0-17.6-5.3-21.6-13.6s-2.9-18.2 2.9-25.4l64-80c4.6-5.7 11.4-9 18.7-9s14.2 3.3 18.7 9l17.3 21.6 56-84C360.5 132 368 128 376 128s15.5 4 20 10.7zM192 128a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zM48 120c0-13.3-10.7-24-24-24S0 106.7 0 120V344c0 75.1 60.9 136 136 136H456c13.3 0 24-10.7 24-24s-10.7-24-24-24H136c-48.6 0-88-39.4-88-88V120z"]
};
var faB = {
  prefix: "fas",
  iconName: "b",
  icon: [320, 512, [98], "42", "M64 32C28.7 32 0 60.7 0 96V256 416c0 35.3 28.7 64 64 64H192c70.7 0 128-57.3 128-128c0-46.5-24.8-87.3-62-109.7c18.7-22.3 30-51 30-82.3c0-70.7-57.3-128-128-128H64zm96 192H64V96h96c35.3 0 64 28.7 64 64s-28.7 64-64 64zM64 288h96 32c35.3 0 64 28.7 64 64s-28.7 64-64 64H64V288z"]
};
var faAngleDown = {
  prefix: "fas",
  iconName: "angle-down",
  icon: [448, 512, [8964], "f107", "M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"]
};
var faEllipsis = {
  prefix: "fas",
  iconName: "ellipsis",
  icon: [448, 512, ["ellipsis-h"], "f141", "M8 256a56 56 0 1 1 112 0A56 56 0 1 1 8 256zm160 0a56 56 0 1 1 112 0 56 56 0 1 1 -112 0zm216-56a56 56 0 1 1 0 112 56 56 0 1 1 0-112z"]
};
var faEllipsisH = faEllipsis;
var faArrowDown = {
  prefix: "fas",
  iconName: "arrow-down",
  icon: [384, 512, [8595], "f063", "M169.4 470.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 370.8 224 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 306.7L54.6 265.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"]
};
var faArrowUp = {
  prefix: "fas",
  iconName: "arrow-up",
  icon: [384, 512, [8593], "f062", "M214.6 41.4c-12.5-12.5-32.8-12.5-45.3 0l-160 160c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 141.2V448c0 17.7 14.3 32 32 32s32-14.3 32-32V141.2L329.4 246.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-160-160z"]
};
var faPlus = {
  prefix: "fas",
  iconName: "plus",
  icon: [448, 512, [10133, 61543, "add"], "2b", "M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z"]
};
var faRetweet = {
  prefix: "fas",
  iconName: "retweet",
  icon: [576, 512, [], "f079", "M272 416c17.7 0 32-14.3 32-32s-14.3-32-32-32H160c-17.7 0-32-14.3-32-32V192h32c12.9 0 24.6-7.8 29.6-19.8s2.2-25.7-6.9-34.9l-64-64c-12.5-12.5-32.8-12.5-45.3 0l-64 64c-9.2 9.2-11.9 22.9-6.9 34.9s16.6 19.8 29.6 19.8l32 0 0 128c0 53 43 96 96 96H272zM304 96c-17.7 0-32 14.3-32 32s14.3 32 32 32l112 0c17.7 0 32 14.3 32 32l0 128H416c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l64 64c12.5 12.5 32.8 12.5 45.3 0l64-64c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8l-32 0V192c0-53-43-96-96-96L304 96z"]
};
var faFaceSmile = {
  prefix: "fas",
  iconName: "face-smile",
  icon: [512, 512, [128578, "smile"], "f118", "M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM164.1 325.5C182 346.2 212.6 368 256 368s74-21.8 91.9-42.5c5.8-6.7 15.9-7.4 22.6-1.6s7.4 15.9 1.6 22.6C349.8 372.1 311.1 400 256 400s-93.8-27.9-116.1-53.5c-5.8-6.7-5.1-16.8 1.6-22.6s16.8-5.1 22.6 1.6zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z"]
};
var faRotate = {
  prefix: "fas",
  iconName: "rotate",
  icon: [512, 512, [128260, "sync-alt"], "f2f1", "M142.9 142.9c62.2-62.2 162.7-62.5 225.3-1L327 183c-6.9 6.9-8.9 17.2-5.2 26.2s12.5 14.8 22.2 14.8H463.5c0 0 0 0 0 0H472c13.3 0 24-10.7 24-24V72c0-9.7-5.8-18.5-14.8-22.2s-19.3-1.7-26.2 5.2L413.4 96.6c-87.6-86.5-228.7-86.2-315.8 1C73.2 122 55.6 150.7 44.8 181.4c-5.9 16.7 2.9 34.9 19.5 40.8s34.9-2.9 40.8-19.5c7.7-21.8 20.2-42.3 37.8-59.8zM16 312v7.6 .7V440c0 9.7 5.8 18.5 14.8 22.2s19.3 1.7 26.2-5.2l41.6-41.6c87.6 86.5 228.7 86.2 315.8-1c24.4-24.4 42.1-53.1 52.9-83.7c5.9-16.7-2.9-34.9-19.5-40.8s-34.9 2.9-40.8 19.5c-7.7 21.8-20.2 42.3-37.8 59.8c-62.2 62.2-162.7 62.5-225.3 1L185 329c6.9-6.9 8.9-17.2 5.2-26.2s-12.5-14.8-22.2-14.8H48.4h-.7H40c-13.3 0-24 10.7-24 24z"]
};
var faSyncAlt = faRotate;
var faSpinner = {
  prefix: "fas",
  iconName: "spinner",
  icon: [512, 512, [], "f110", "M304 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zm0 416a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM48 304a48 48 0 1 0 0-96 48 48 0 1 0 0 96zm464-48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM142.9 437A48 48 0 1 0 75 369.1 48 48 0 1 0 142.9 437zm0-294.2A48 48 0 1 0 75 75a48 48 0 1 0 67.9 67.9zM369.1 437A48 48 0 1 0 437 369.1 48 48 0 1 0 369.1 437z"]
};
var faAnglesLeft = {
  prefix: "fas",
  iconName: "angles-left",
  icon: [512, 512, [171, "angle-double-left"], "f100", "M41.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 256 246.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160zm352-160l-160 160c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L301.3 256 438.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0z"]
};
var faAngleDoubleLeft = faAnglesLeft;
var faUpRightAndDownLeftFromCenter = {
  prefix: "fas",
  iconName: "up-right-and-down-left-from-center",
  icon: [512, 512, ["expand-alt"], "f424", "M344 0H488c13.3 0 24 10.7 24 24V168c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-39-39-87 87c-9.4 9.4-24.6 9.4-33.9 0l-32-32c-9.4-9.4-9.4-24.6 0-33.9l87-87L327 41c-6.9-6.9-8.9-17.2-5.2-26.2S334.3 0 344 0zM168 512H24c-13.3 0-24-10.7-24-24V344c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l39 39 87-87c9.4-9.4 24.6-9.4 33.9 0l32 32c9.4 9.4 9.4 24.6 0 33.9l-87 87 39 39c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8z"]
};
var faExpandAlt = faUpRightAndDownLeftFromCenter;
var faScaleBalanced = {
  prefix: "fas",
  iconName: "scale-balanced",
  icon: [640, 512, [9878, "balance-scale"], "f24e", "M384 32H512c17.7 0 32 14.3 32 32s-14.3 32-32 32H398.4c-5.2 25.8-22.9 47.1-46.4 57.3V448H512c17.7 0 32 14.3 32 32s-14.3 32-32 32H320 128c-17.7 0-32-14.3-32-32s14.3-32 32-32H288V153.3c-23.5-10.3-41.2-31.6-46.4-57.3H128c-17.7 0-32-14.3-32-32s14.3-32 32-32H256c14.6-19.4 37.8-32 64-32s49.4 12.6 64 32zm55.6 288H584.4L512 195.8 439.6 320zM512 416c-62.9 0-115.2-34-126-78.9c-2.6-11 1-22.3 6.7-32.1l95.2-163.2c5-8.6 14.2-13.8 24.1-13.8s19.1 5.3 24.1 13.8l95.2 163.2c5.7 9.8 9.3 21.1 6.7 32.1C627.2 382 574.9 416 512 416zM126.8 195.8L54.4 320H199.3L126.8 195.8zM.9 337.1c-2.6-11 1-22.3 6.7-32.1l95.2-163.2c5-8.6 14.2-13.8 24.1-13.8s19.1 5.3 24.1 13.8l95.2 163.2c5.7 9.8 9.3 21.1 6.7 32.1C242 382 189.7 416 126.8 416S11.7 382 .9 337.1z"]
};

// src/articles/media.ts
function getRatio(width, height) {
  if (isNaN(width))
    throw "Width is NaN";
  if (isNaN(height))
    throw "Height is NaN";
  if (width <= 0)
    throw "Width isn't positive";
  if (height <= 0)
    throw "Height isn't positive";
  return height / width;
}
var MediaType = /* @__PURE__ */ ((MediaType3) => {
  MediaType3[MediaType3["Image"] = 0] = "Image";
  MediaType3[MediaType3["Video"] = 1] = "Video";
  MediaType3[MediaType3["VideoGif"] = 2] = "VideoGif";
  MediaType3[MediaType3["Gif"] = 3] = "Gif";
  return MediaType3;
})(MediaType || {});
var MediaLoadType = /* @__PURE__ */ ((MediaLoadType3) => {
  MediaLoadType3[MediaLoadType3["DirectLoad"] = 0] = "DirectLoad";
  MediaLoadType3[MediaLoadType3["Thumbnail"] = 1] = "Thumbnail";
  MediaLoadType3[MediaLoadType3["LazyLoad"] = 2] = "LazyLoad";
  return MediaLoadType3;
})(MediaLoadType || {});

// src/articles/social/SocialMedia.svelte
var file6 = "src/articles/social/SocialMedia.svelte";
function get_each_context4(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[10] = list[i];
  child_ctx[12] = i;
  return child_ctx;
}
function create_if_block_3(ctx) {
  let video;
  let source;
  let source_src_value;
  let mounted;
  let dispose;
  function click_handler_2() {
    return (
      /*click_handler_2*/
      ctx[7](
        /*index*/
        ctx[12]
      )
    );
  }
  const block = {
    c: function create() {
      video = element("video");
      source = element("source");
      if (!src_url_equal(source.src, source_src_value = /*media*/
      ctx[10].src))
        attr_dev(source, "src", source_src_value);
      attr_dev(source, "type", "video/mp4");
      add_location(source, file6, 83, 4, 2670);
      attr_dev(video, "class", "articleMedia svelte-5m3xzq");
      video.controls = true;
      video.autoplay = true;
      video.loop = true;
      video.muted = true;
      attr_dev(video, "preload", "auto");
      add_location(video, file6, 82, 3, 2541);
    },
    m: function mount(target, anchor) {
      insert_dev(target, video, anchor);
      append_dev(video, source);
      if (!mounted) {
        dispose = listen_dev(video, "click", prevent_default(click_handler_2), false, true, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty & /*article, showAllMedia, timelineProps*/
      7 && !src_url_equal(source.src, source_src_value = /*media*/
      ctx[10].src)) {
        attr_dev(source, "src", source_src_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(video);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_3.name,
    type: "if",
    source: "(81:122) ",
    ctx
  });
  return block;
}
function create_if_block_2(ctx) {
  let video;
  let source;
  let source_src_value;
  let mounted;
  let dispose;
  function click_handler_1() {
    return (
      /*click_handler_1*/
      ctx[6](
        /*index*/
        ctx[12]
      )
    );
  }
  const block = {
    c: function create() {
      video = element("video");
      source = element("source");
      if (!src_url_equal(source.src, source_src_value = /*media*/
      ctx[10].src))
        attr_dev(source, "src", source_src_value);
      attr_dev(source, "type", "video/mp4");
      add_location(source, file6, 78, 4, 2311);
      attr_dev(video, "class", "articleMedia svelte-5m3xzq");
      video.controls = true;
      attr_dev(video, "preload", "auto");
      add_location(video, file6, 77, 3, 2202);
    },
    m: function mount(target, anchor) {
      insert_dev(target, video, anchor);
      append_dev(video, source);
      if (!mounted) {
        dispose = listen_dev(video, "click", prevent_default(click_handler_1), false, true, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty & /*article, showAllMedia, timelineProps*/
      7 && !src_url_equal(source.src, source_src_value = /*media*/
      ctx[10].src)) {
        attr_dev(source, "src", source_src_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(video);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_2.name,
    type: "if",
    source: "(76:81) ",
    ctx
  });
  return block;
}
function create_if_block_12(ctx) {
  let div1;
  let div0;
  let t;
  let img;
  let img_alt_value;
  let img_src_value;
  let mounted;
  let dispose;
  function click_handler() {
    return (
      /*click_handler*/
      ctx[5](
        /*index*/
        ctx[12]
      )
    );
  }
  const block = {
    c: function create() {
      div1 = element("div");
      div0 = element("div");
      t = space();
      img = element("img");
      attr_dev(div0, "class", "is-hidden imgPlaceHolder svelte-5m3xzq");
      set_style(div0, "aspect-ratio", 1 / /*media*/
      ctx[10].ratio);
      add_location(div0, file6, 72, 4, 1860);
      attr_dev(img, "class", "articleMedia svelte-5m3xzq");
      attr_dev(img, "alt", img_alt_value = `${/*article*/
      ctx[1].id}/${/*index*/
      ctx[12]}`);
      if (!src_url_equal(img.src, img_src_value = /*media*/
      ctx[10].src))
        attr_dev(img, "src", img_src_value);
      add_location(img, file6, 73, 4, 1946);
      attr_dev(div1, "class", "imagesHolder svelte-5m3xzq");
      add_location(div1, file6, 71, 3, 1829);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div1, anchor);
      append_dev(div1, div0);
      append_dev(div1, t);
      append_dev(div1, img);
      if (!mounted) {
        dispose = listen_dev(img, "click", click_handler, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty & /*article, showAllMedia, timelineProps*/
      7) {
        set_style(div0, "aspect-ratio", 1 / /*media*/
        ctx[10].ratio);
      }
      if (dirty & /*article, showAllMedia, timelineProps*/
      7 && img_alt_value !== (img_alt_value = `${/*article*/
      ctx[1].id}/${/*index*/
      ctx[12]}`)) {
        attr_dev(img, "alt", img_alt_value);
      }
      if (dirty & /*article, showAllMedia, timelineProps*/
      7 && !src_url_equal(img.src, img_src_value = /*media*/
      ctx[10].src)) {
        attr_dev(img, "src", img_src_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div1);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_12.name,
    type: "if",
    source: "(71:2) {#if media.mediaType === MediaType.Image || media.mediaType === MediaType.Gif}",
    ctx
  });
  return block;
}
function create_each_block4(key_1, ctx) {
  let first;
  let if_block_anchor;
  function select_block_type(ctx2, dirty) {
    if (
      /*media*/
      ctx2[10].mediaType === 0 /* Image */ || /*media*/
      ctx2[10].mediaType === 3 /* Gif */
    )
      return create_if_block_12;
    if (!/*timelineProps*/
    ctx2[2].animatedAsGifs && /*media*/
    ctx2[10].mediaType === 1 /* Video */)
      return create_if_block_2;
    if (
      /*media*/
      ctx2[10].mediaType === 2 /* VideoGif */ || /*timelineProps*/
      ctx2[2].animatedAsGifs && /*media*/
      ctx2[10].mediaType === 1 /* Video */
    )
      return create_if_block_3;
  }
  let current_block_type = select_block_type(ctx, -1);
  let if_block = current_block_type && current_block_type(ctx);
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      first = empty();
      if (if_block)
        if_block.c();
      if_block_anchor = empty();
      this.first = first;
    },
    m: function mount(target, anchor) {
      insert_dev(target, first, anchor);
      if (if_block)
        if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
        if_block.p(ctx, dirty);
      } else {
        if (if_block)
          if_block.d(1);
        if_block = current_block_type && current_block_type(ctx);
        if (if_block) {
          if_block.c();
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(first);
      if (if_block) {
        if_block.d(detaching);
      }
      if (detaching)
        detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block4.name,
    type: "each",
    source: "(70:1) {#each article.medias.slice(0, !showAllMedia && timelineProps.maxMediaCount !== null ? timelineProps.maxMediaCount : undefined) as media, index (index)}",
    ctx
  });
  return block;
}
function create_if_block2(ctx) {
  let div;
  let button;
  let fa;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: { icon: faImages, size: "2x" },
    $$inline: true
  });
  const block = {
    c: function create() {
      div = element("div");
      button = element("button");
      create_component(fa.$$.fragment);
      attr_dev(button, "class", "borderless-button svelte-5m3xzq");
      attr_dev(button, "title", "Load more medias");
      add_location(button, file6, 89, 3, 2887);
      attr_dev(div, "class", "moreMedia svelte-5m3xzq");
      add_location(div, file6, 88, 2, 2860);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, button);
      mount_component(fa, button, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler_3*/
          ctx[8],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block2.name,
    type: "if",
    source: "(88:1) {#if !showAllMedia && timelineProps.maxMediaCount !== null && article.medias.length > timelineProps.maxMediaCount}",
    ctx
  });
  return block;
}
function create_fragment6(ctx) {
  let div;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let t;
  let current;
  let each_value = (
    /*article*/
    ctx[1].medias.slice(0, !/*showAllMedia*/
    ctx[0] && /*timelineProps*/
    ctx[2].maxMediaCount !== null ? (
      /*timelineProps*/
      ctx[2].maxMediaCount
    ) : void 0)
  );
  validate_each_argument(each_value);
  const get_key = (ctx2) => (
    /*index*/
    ctx2[12]
  );
  validate_each_keys(ctx, each_value, get_each_context4, get_key);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context4(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block4(key, child_ctx));
  }
  let if_block = !/*showAllMedia*/
  ctx[0] && /*timelineProps*/
  ctx[2].maxMediaCount !== null && /*article*/
  ctx[1].medias.length > /*timelineProps*/
  ctx[2].maxMediaCount && create_if_block2(ctx);
  const block = {
    c: function create() {
      div = element("div");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t = space();
      if (if_block)
        if_block.c();
      attr_dev(div, "class", "socialMedia svelte-5m3xzq");
      add_location(div, file6, 68, 0, 1546);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div, null);
        }
      }
      append_dev(div, t);
      if (if_block)
        if_block.m(div, null);
      ctx[9](div);
      current = true;
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*article, showAllMedia, timelineProps, undefined, onMediaClick, MediaType*/
      15) {
        each_value = /*article*/
        ctx2[1].medias.slice(0, !/*showAllMedia*/
        ctx2[0] && /*timelineProps*/
        ctx2[2].maxMediaCount !== null ? (
          /*timelineProps*/
          ctx2[2].maxMediaCount
        ) : void 0);
        validate_each_argument(each_value);
        validate_each_keys(ctx2, each_value, get_each_context4, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, div, destroy_block, create_each_block4, t, get_each_context4);
      }
      if (!/*showAllMedia*/
      ctx2[0] && /*timelineProps*/
      ctx2[2].maxMediaCount !== null && /*article*/
      ctx2[1].medias.length > /*timelineProps*/
      ctx2[2].maxMediaCount) {
        if (if_block) {
          if_block.p(ctx2, dirty);
          if (dirty & /*showAllMedia, timelineProps, article*/
          7) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block2(ctx2);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(div, null);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
      if (if_block)
        if_block.d();
      ctx[9](null);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment6.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance6($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("SocialMedia", slots, []);
  let { article } = $$props;
  let { timelineProps } = $$props;
  let { showAllMedia } = $$props;
  let { onMediaClick } = $$props;
  let divRef = null;
  afterUpdate(() => {
    const articleMediaEls = divRef?.querySelectorAll(".articleMedia");
    if (articleMediaEls) {
      const modifiedMedias = [];
      for (let i = 0; i < article.medias.length; ++i)
        if (article.medias[i].ratio === null && articleMediaEls[i] !== void 0)
          modifiedMedias.push([i, articleMediaEls[i].clientHeight / articleMediaEls[i].clientWidth]);
      getWritable(article.idPair).update((a) => {
        for (const [i, ratio] of modifiedMedias)
          a.medias[i].ratio = ratio;
        return a;
      });
    }
  });
  $$self.$$.on_mount.push(function() {
    if (article === void 0 && !("article" in $$props || $$self.$$.bound[$$self.$$.props["article"]])) {
      console.warn("<SocialMedia> was created without expected prop 'article'");
    }
    if (timelineProps === void 0 && !("timelineProps" in $$props || $$self.$$.bound[$$self.$$.props["timelineProps"]])) {
      console.warn("<SocialMedia> was created without expected prop 'timelineProps'");
    }
    if (showAllMedia === void 0 && !("showAllMedia" in $$props || $$self.$$.bound[$$self.$$.props["showAllMedia"]])) {
      console.warn("<SocialMedia> was created without expected prop 'showAllMedia'");
    }
    if (onMediaClick === void 0 && !("onMediaClick" in $$props || $$self.$$.bound[$$self.$$.props["onMediaClick"]])) {
      console.warn("<SocialMedia> was created without expected prop 'onMediaClick'");
    }
  });
  const writable_props = ["article", "timelineProps", "showAllMedia", "onMediaClick"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<SocialMedia> was created with unknown prop '${key}'`);
  });
  const click_handler = (index) => onMediaClick(index);
  const click_handler_1 = (index) => onMediaClick(index);
  const click_handler_2 = (index) => onMediaClick(index);
  const click_handler_3 = () => $$invalidate(0, showAllMedia = true);
  function div_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      divRef = $$value;
      $$invalidate(4, divRef);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("article" in $$props2)
      $$invalidate(1, article = $$props2.article);
    if ("timelineProps" in $$props2)
      $$invalidate(2, timelineProps = $$props2.timelineProps);
    if ("showAllMedia" in $$props2)
      $$invalidate(0, showAllMedia = $$props2.showAllMedia);
    if ("onMediaClick" in $$props2)
      $$invalidate(3, onMediaClick = $$props2.onMediaClick);
  };
  $$self.$capture_state = () => ({
    Article,
    afterUpdate,
    getWritable,
    Fa: fa_default,
    faImages,
    MediaType,
    article,
    timelineProps,
    showAllMedia,
    onMediaClick,
    divRef
  });
  $$self.$inject_state = ($$props2) => {
    if ("article" in $$props2)
      $$invalidate(1, article = $$props2.article);
    if ("timelineProps" in $$props2)
      $$invalidate(2, timelineProps = $$props2.timelineProps);
    if ("showAllMedia" in $$props2)
      $$invalidate(0, showAllMedia = $$props2.showAllMedia);
    if ("onMediaClick" in $$props2)
      $$invalidate(3, onMediaClick = $$props2.onMediaClick);
    if ("divRef" in $$props2)
      $$invalidate(4, divRef = $$props2.divRef);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    showAllMedia,
    article,
    timelineProps,
    onMediaClick,
    divRef,
    click_handler,
    click_handler_1,
    click_handler_2,
    click_handler_3,
    div_binding
  ];
}
var SocialMedia = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance6, create_fragment6, safe_not_equal, {
      article: 1,
      timelineProps: 2,
      showAllMedia: 0,
      onMediaClick: 3
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "SocialMedia",
      options,
      id: create_fragment6.name
    });
  }
  get article() {
    throw new Error("<SocialMedia>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set article(value) {
    throw new Error("<SocialMedia>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get timelineProps() {
    throw new Error("<SocialMedia>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineProps(value) {
    throw new Error("<SocialMedia>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get showAllMedia() {
    throw new Error("<SocialMedia>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set showAllMedia(value) {
    throw new Error("<SocialMedia>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get onMediaClick() {
    throw new Error("<SocialMedia>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set onMediaClick(value) {
    throw new Error("<SocialMedia>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var SocialMedia_default = SocialMedia;

// src/Dropdown.svelte
var file7 = "src/Dropdown.svelte";
var get_triggerIcon_slot_changes = (dirty) => ({});
var get_triggerIcon_slot_context = (ctx) => ({});
function create_else_block2(ctx) {
  let span;
  let t0;
  let t1;
  let fa;
  let current;
  fa = new fa_default({
    props: { icon: faAngleDown, class: "is-small" },
    $$inline: true
  });
  const block = {
    c: function create() {
      span = element("span");
      t0 = text(
        /*labelText*/
        ctx[4]
      );
      t1 = space();
      create_component(fa.$$.fragment);
      add_location(span, file7, 65, 4, 1517);
    },
    m: function mount(target, anchor) {
      insert_dev(target, span, anchor);
      append_dev(span, t0);
      insert_dev(target, t1, anchor);
      mount_component(fa, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      if (!current || dirty & /*labelText*/
      16)
        set_data_dev(
          t0,
          /*labelText*/
          ctx2[4]
        );
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(span);
      if (detaching)
        detach_dev(t1);
      destroy_component(fa, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block2.name,
    type: "else",
    source: "(65:3) {:else}",
    ctx
  });
  return block;
}
function create_if_block3(ctx) {
  let current;
  const triggerIcon_slot_template = (
    /*#slots*/
    ctx[9].triggerIcon
  );
  const triggerIcon_slot = create_slot(
    triggerIcon_slot_template,
    ctx,
    /*$$scope*/
    ctx[8],
    get_triggerIcon_slot_context
  );
  const block = {
    c: function create() {
      if (triggerIcon_slot)
        triggerIcon_slot.c();
    },
    m: function mount(target, anchor) {
      if (triggerIcon_slot) {
        triggerIcon_slot.m(target, anchor);
      }
      current = true;
    },
    p: function update3(ctx2, dirty) {
      if (triggerIcon_slot) {
        if (triggerIcon_slot.p && (!current || dirty & /*$$scope*/
        256)) {
          update_slot_base(
            triggerIcon_slot,
            triggerIcon_slot_template,
            ctx2,
            /*$$scope*/
            ctx2[8],
            !current ? get_all_dirty_from_scope(
              /*$$scope*/
              ctx2[8]
            ) : get_slot_changes(
              triggerIcon_slot_template,
              /*$$scope*/
              ctx2[8],
              dirty,
              get_triggerIcon_slot_changes
            ),
            get_triggerIcon_slot_context
          );
        }
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(triggerIcon_slot, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(triggerIcon_slot, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (triggerIcon_slot)
        triggerIcon_slot.d(detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block3.name,
    type: "if",
    source: "(63:3) {#if $$slots.triggerIcon}",
    ctx
  });
  return block;
}
function create_fragment7(ctx) {
  let div3;
  let div0;
  let button;
  let current_block_type_index;
  let if_block;
  let button_class_value;
  let div0_class_value;
  let t;
  let div2;
  let div1;
  let current;
  let mounted;
  let dispose;
  const if_block_creators = [create_if_block3, create_else_block2];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (
      /*$$slots*/
      ctx2[7].triggerIcon
    )
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx, -1);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  const default_slot_template = (
    /*#slots*/
    ctx[9].default
  );
  const default_slot = create_slot(
    default_slot_template,
    ctx,
    /*$$scope*/
    ctx[8],
    null
  );
  const block = {
    c: function create() {
      div3 = element("div");
      div0 = element("div");
      button = element("button");
      if_block.c();
      t = space();
      div2 = element("div");
      div1 = element("div");
      if (default_slot)
        default_slot.c();
      attr_dev(button, "class", button_class_value = null_to_empty(`button ${/*labelClasses*/
      ctx[3]}`) + " svelte-1cd6j4y");
      add_location(button, file7, 61, 2, 1333);
      attr_dev(div0, "class", div0_class_value = null_to_empty(`dropdown-trigger ${/*triggerClasses*/
      ctx[2]}`) + " svelte-1cd6j4y");
      add_location(div0, file7, 60, 1, 1280);
      attr_dev(div1, "class", "dropdown-content svelte-1cd6j4y");
      add_location(div1, file7, 71, 2, 1648);
      attr_dev(div2, "class", "dropdown-menu svelte-1cd6j4y");
      add_location(div2, file7, 70, 1, 1618);
      attr_dev(div3, "class", "dropdown svelte-1cd6j4y");
      toggle_class(
        div3,
        "is-active",
        /*isActive*/
        ctx[0]
      );
      toggle_class(
        div3,
        "is-right",
        /*isRight*/
        ctx[1]
      );
      add_location(div3, file7, 55, 0, 1200);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div3, anchor);
      append_dev(div3, div0);
      append_dev(div0, button);
      if_blocks[current_block_type_index].m(button, null);
      ctx[10](button);
      append_dev(div3, t);
      append_dev(div3, div2);
      append_dev(div2, div1);
      if (default_slot) {
        default_slot.m(div1, null);
      }
      current = true;
      if (!mounted) {
        dispose = [
          listen_dev(
            button,
            "click",
            /*click_handler*/
            ctx[11],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            div1,
            "auxclick",
            /*close*/
            ctx[6],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, [dirty]) {
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx2, dirty);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx2, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block = if_blocks[current_block_type_index];
        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
          if_block.c();
        } else {
          if_block.p(ctx2, dirty);
        }
        transition_in(if_block, 1);
        if_block.m(button, null);
      }
      if (!current || dirty & /*labelClasses*/
      8 && button_class_value !== (button_class_value = null_to_empty(`button ${/*labelClasses*/
      ctx2[3]}`) + " svelte-1cd6j4y")) {
        attr_dev(button, "class", button_class_value);
      }
      if (!current || dirty & /*triggerClasses*/
      4 && div0_class_value !== (div0_class_value = null_to_empty(`dropdown-trigger ${/*triggerClasses*/
      ctx2[2]}`) + " svelte-1cd6j4y")) {
        attr_dev(div0, "class", div0_class_value);
      }
      if (default_slot) {
        if (default_slot.p && (!current || dirty & /*$$scope*/
        256)) {
          update_slot_base(
            default_slot,
            default_slot_template,
            ctx2,
            /*$$scope*/
            ctx2[8],
            !current ? get_all_dirty_from_scope(
              /*$$scope*/
              ctx2[8]
            ) : get_slot_changes(
              default_slot_template,
              /*$$scope*/
              ctx2[8],
              dirty,
              null
            ),
            null
          );
        }
      }
      if (!current || dirty & /*isActive*/
      1) {
        toggle_class(
          div3,
          "is-active",
          /*isActive*/
          ctx2[0]
        );
      }
      if (!current || dirty & /*isRight*/
      2) {
        toggle_class(
          div3,
          "is-right",
          /*isRight*/
          ctx2[1]
        );
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      transition_in(default_slot, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      transition_out(default_slot, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div3);
      if_blocks[current_block_type_index].d();
      ctx[10](null);
      if (default_slot)
        default_slot.d(detaching);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment7.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance7($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("Dropdown", slots, ["triggerIcon", "default"]);
  const $$slots = compute_slots(slots);
  let { isActive = false } = $$props;
  let { isRight = false } = $$props;
  let { triggerClasses = "" } = $$props;
  let { labelClasses = "" } = $$props;
  let { labelText = "" } = $$props;
  let triggerRef = null;
  function close(e) {
    if (e.button !== 2 && !triggerRef?.contains(e.target))
      $$invalidate(0, isActive = false);
  }
  onMount(() => () => document.removeEventListener("click", close));
  const writable_props = ["isActive", "isRight", "triggerClasses", "labelClasses", "labelText"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<Dropdown> was created with unknown prop '${key}'`);
  });
  function button_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      triggerRef = $$value;
      $$invalidate(5, triggerRef);
    });
  }
  const click_handler = () => $$invalidate(0, isActive = !isActive);
  $$self.$$set = ($$props2) => {
    if ("isActive" in $$props2)
      $$invalidate(0, isActive = $$props2.isActive);
    if ("isRight" in $$props2)
      $$invalidate(1, isRight = $$props2.isRight);
    if ("triggerClasses" in $$props2)
      $$invalidate(2, triggerClasses = $$props2.triggerClasses);
    if ("labelClasses" in $$props2)
      $$invalidate(3, labelClasses = $$props2.labelClasses);
    if ("labelText" in $$props2)
      $$invalidate(4, labelText = $$props2.labelText);
    if ("$$scope" in $$props2)
      $$invalidate(8, $$scope = $$props2.$$scope);
  };
  $$self.$capture_state = () => ({
    Fa: fa_default,
    faAngleDown,
    onMount,
    isActive,
    isRight,
    triggerClasses,
    labelClasses,
    labelText,
    triggerRef,
    close
  });
  $$self.$inject_state = ($$props2) => {
    if ("isActive" in $$props2)
      $$invalidate(0, isActive = $$props2.isActive);
    if ("isRight" in $$props2)
      $$invalidate(1, isRight = $$props2.isRight);
    if ("triggerClasses" in $$props2)
      $$invalidate(2, triggerClasses = $$props2.triggerClasses);
    if ("labelClasses" in $$props2)
      $$invalidate(3, labelClasses = $$props2.labelClasses);
    if ("labelText" in $$props2)
      $$invalidate(4, labelText = $$props2.labelText);
    if ("triggerRef" in $$props2)
      $$invalidate(5, triggerRef = $$props2.triggerRef);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*isActive*/
    1) {
      $:
        if (isActive)
          document.addEventListener("click", close);
        else
          document.removeEventListener("click", close);
    }
  };
  return [
    isActive,
    isRight,
    triggerClasses,
    labelClasses,
    labelText,
    triggerRef,
    close,
    $$slots,
    $$scope,
    slots,
    button_binding,
    click_handler
  ];
}
var Dropdown = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance7, create_fragment7, safe_not_equal, {
      isActive: 0,
      isRight: 1,
      triggerClasses: 2,
      labelClasses: 3,
      labelText: 4
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Dropdown",
      options,
      id: create_fragment7.name
    });
  }
  get isActive() {
    throw new Error("<Dropdown>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set isActive(value) {
    throw new Error("<Dropdown>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get isRight() {
    throw new Error("<Dropdown>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set isRight(value) {
    throw new Error("<Dropdown>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get triggerClasses() {
    throw new Error("<Dropdown>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set triggerClasses(value) {
    throw new Error("<Dropdown>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get labelClasses() {
    throw new Error("<Dropdown>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set labelClasses(value) {
    throw new Error("<Dropdown>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get labelText() {
    throw new Error("<Dropdown>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set labelText(value) {
    throw new Error("<Dropdown>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var Dropdown_default = Dropdown;

// src/articles/social/SocialNav.svelte
var { Object: Object_12 } = globals;
var file8 = "src/articles/social/SocialNav.svelte";
function get_each_context5(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[19] = list[i];
  const constants_0 = (
    /*action*/
    child_ctx[19].count ? (
      /*action*/
      child_ctx[19].count(
        /*article*/
        child_ctx[2]
      )
    ) : 0
  );
  child_ctx[20] = constants_0;
  const constants_1 = (
    /*action*/
    child_ctx[19].disabled ? (
      /*action*/
      child_ctx[19].disabled(
        /*article*/
        child_ctx[2]
      )
    ) : false
  );
  child_ctx[21] = constants_1;
  const constants_2 = (
    /*action*/
    child_ctx[19].actionned(
      /*article*/
      child_ctx[2]
    )
  );
  child_ctx[22] = constants_2;
  const constants_3 = (
    /*hoveredActions*/
    child_ctx[7].has(
      /*action*/
      child_ctx[19].key
    )
  );
  child_ctx[23] = constants_3;
  return child_ctx;
}
function create_if_block_4(ctx) {
  let span;
  let t_value = (
    /*count*/
    ctx[20] + ""
  );
  let t;
  const block = {
    c: function create() {
      span = element("span");
      t = text(t_value);
      attr_dev(span, "class", "svelte-1esowk8");
      set_style(span, "color", !/*disabled*/
      ctx[21] && /*actionned*/
      (ctx[22] || /*isHovered*/
      ctx[23]) ? (
        /*action*/
        ctx[19].color
      ) : "inherit");
      add_location(span, file8, 86, 5, 2378);
    },
    m: function mount(target, anchor) {
      insert_dev(target, span, anchor);
      append_dev(span, t);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*article*/
      4 && t_value !== (t_value = /*count*/
      ctx2[20] + ""))
        set_data_dev(t, t_value);
      if (dirty & /*article, hoveredActions*/
      132) {
        set_style(span, "color", !/*disabled*/
        ctx2[21] && /*actionned*/
        (ctx2[22] || /*isHovered*/
        ctx2[23]) ? (
          /*action*/
          ctx2[19].color
        ) : "inherit");
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(span);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_4.name,
    type: "if",
    source: "(86:4) {#if count}",
    ctx
  });
  return block;
}
function create_each_block5(key_1, ctx) {
  let button;
  let span;
  let fa;
  let t;
  let button_title_value;
  let button_disabled_value;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: {
      icon: (
        /*action*/
        ctx[19].actionnedIcon && /*actionned*/
        ctx[22] ? (
          /*action*/
          ctx[19].actionnedIcon
        ) : (
          /*action*/
          ctx[19].icon
        )
      ),
      color: !/*disabled*/
      ctx[21] && /*actionned*/
      (ctx[22] || /*isHovered*/
      ctx[23]) ? (
        /*action*/
        ctx[19].color
      ) : void 0
    },
    $$inline: true
  });
  let if_block = (
    /*count*/
    ctx[20] && create_if_block_4(ctx)
  );
  function click_handler() {
    return (
      /*click_handler*/
      ctx[11](
        /*action*/
        ctx[19]
      )
    );
  }
  function mouseover_handler() {
    return (
      /*mouseover_handler*/
      ctx[12](
        /*action*/
        ctx[19]
      )
    );
  }
  function mouseout_handler() {
    return (
      /*mouseout_handler*/
      ctx[13](
        /*action*/
        ctx[19]
      )
    );
  }
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      button = element("button");
      span = element("span");
      create_component(fa.$$.fragment);
      t = space();
      if (if_block)
        if_block.c();
      attr_dev(span, "class", "icon svelte-1esowk8");
      add_location(span, file8, 79, 4, 2145);
      attr_dev(button, "class", "articleButton borderless-button svelte-1esowk8");
      attr_dev(button, "title", button_title_value = /*action*/
      ctx[19].name);
      button.disabled = button_disabled_value = /*disabled*/
      ctx[21] || /*actionned*/
      ctx[22] && !/*action*/
      ctx[19].togglable;
      toggle_class(
        button,
        "actionned",
        /*actionned*/
        ctx[22]
      );
      add_location(button, file8, 70, 3, 1807);
      this.first = button;
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      append_dev(button, span);
      mount_component(fa, span, null);
      append_dev(button, t);
      if (if_block)
        if_block.m(button, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen_dev(button, "click", click_handler, false, false, false, false),
          listen_dev(button, "mouseover", mouseover_handler, false, false, false, false),
          listen_dev(button, "mouseout", mouseout_handler, false, false, false, false)
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      const fa_changes = {};
      if (dirty & /*article*/
      4)
        fa_changes.icon = /*action*/
        ctx[19].actionnedIcon && /*actionned*/
        ctx[22] ? (
          /*action*/
          ctx[19].actionnedIcon
        ) : (
          /*action*/
          ctx[19].icon
        );
      if (dirty & /*article, hoveredActions*/
      132)
        fa_changes.color = !/*disabled*/
        ctx[21] && /*actionned*/
        (ctx[22] || /*isHovered*/
        ctx[23]) ? (
          /*action*/
          ctx[19].color
        ) : void 0;
      fa.$set(fa_changes);
      if (
        /*count*/
        ctx[20]
      ) {
        if (if_block) {
          if_block.p(ctx, dirty);
        } else {
          if_block = create_if_block_4(ctx);
          if_block.c();
          if_block.m(button, null);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
      if (!current || dirty & /*article*/
      4 && button_disabled_value !== (button_disabled_value = /*disabled*/
      ctx[21] || /*actionned*/
      ctx[22] && !/*action*/
      ctx[19].togglable)) {
        prop_dev(button, "disabled", button_disabled_value);
      }
      if (!current || dirty & /*actions, article*/
      260) {
        toggle_class(
          button,
          "actionned",
          /*actionned*/
          ctx[22]
        );
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      if (if_block)
        if_block.d();
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block5.name,
    type: "each",
    source: "(65:2) {#each actions as action (action.key)}",
    ctx
  });
  return block;
}
function create_if_block_32(ctx) {
  let button;
  let span;
  let fa;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: { icon: faExpandAlt },
    $$inline: true
  });
  const block = {
    c: function create() {
      button = element("button");
      span = element("span");
      create_component(fa.$$.fragment);
      attr_dev(span, "class", "icon svelte-1esowk8");
      add_location(span, file8, 105, 4, 2912);
      attr_dev(button, "class", "articleButton borderless-button svelte-1esowk8");
      attr_dev(button, "title", "Expand article as modal");
      add_location(button, file8, 100, 3, 2781);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      append_dev(button, span);
      mount_component(fa, span, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler_2*/
          ctx[15],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_32.name,
    type: "if",
    source: "(100:2) {#if !isQuoted && !modal}",
    ctx
  });
  return block;
}
function create_if_block_22(ctx) {
  let a;
  let t;
  let a_href_value;
  const block = {
    c: function create() {
      a = element("a");
      t = text("Repost's external Link");
      attr_dev(a, "class", "dropdown-item");
      attr_dev(a, "href", a_href_value = /*repost*/
      ctx[3].url);
      attr_dev(a, "target", "_blank");
      attr_dev(a, "rel", "noreferrer");
      add_location(a, file8, 131, 4, 3783);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a, anchor);
      append_dev(a, t);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*repost*/
      8 && a_href_value !== (a_href_value = /*repost*/
      ctx2[3].url)) {
        attr_dev(a, "href", a_href_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_22.name,
    type: "if",
    source: "(131:3) {#if repost}",
    ctx
  });
  return block;
}
function create_if_block_13(ctx) {
  let a0;
  let t1;
  let a1;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      a0 = element("a");
      a0.textContent = "Log Data";
      t1 = space();
      a1 = element("a");
      a1.textContent = "Log Json Data";
      attr_dev(a0, "class", "dropdown-item");
      add_location(a0, file8, 137, 4, 3981);
      attr_dev(a1, "class", "dropdown-item");
      add_location(a1, file8, 141, 4, 4105);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a0, anchor);
      insert_dev(target, t1, anchor);
      insert_dev(target, a1, anchor);
      if (!mounted) {
        dispose = [
          listen_dev(
            a0,
            "click",
            function() {
              if (is_function(
                /*onLogData*/
                ctx[5]
              ))
                ctx[5].apply(this, arguments);
            },
            false,
            false,
            false,
            false
          ),
          listen_dev(
            a1,
            "click",
            function() {
              if (is_function(
                /*onLogJSON*/
                ctx[6]
              ))
                ctx[6].apply(this, arguments);
            },
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a0);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(a1);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_13.name,
    type: "if",
    source: "(136:3) {#if !isQuoted}",
    ctx
  });
  return block;
}
function create_default_slot(ctx) {
  let a0;
  let t1;
  let a1;
  let t3;
  let a2;
  let t4_value = (
    /*timelineProps*/
    ctx[1].compact ? "Show expanded" : "Show compact"
  );
  let t4;
  let t5;
  let a3;
  let t6;
  let a3_href_value;
  let t7;
  let t8;
  let if_block1_anchor;
  let mounted;
  let dispose;
  let if_block0 = (
    /*repost*/
    ctx[3] && create_if_block_22(ctx)
  );
  let if_block1 = !/*isQuoted*/
  ctx[4] && create_if_block_13(ctx);
  const block = {
    c: function create() {
      a0 = element("a");
      a0.textContent = "Mark as read";
      t1 = space();
      a1 = element("a");
      a1.textContent = "Hide";
      t3 = space();
      a2 = element("a");
      t4 = text(t4_value);
      t5 = space();
      a3 = element("a");
      t6 = text("External Link");
      t7 = space();
      if (if_block0)
        if_block0.c();
      t8 = space();
      if (if_block1)
        if_block1.c();
      if_block1_anchor = empty();
      attr_dev(a0, "class", "dropdown-item");
      add_location(a0, file8, 116, 3, 3199);
      attr_dev(a1, "class", "dropdown-item");
      add_location(a1, file8, 120, 3, 3352);
      attr_dev(a2, "class", "dropdown-item");
      add_location(a2, file8, 124, 3, 3491);
      attr_dev(a3, "class", "dropdown-item");
      attr_dev(a3, "href", a3_href_value = /*article*/
      ctx[2].url);
      attr_dev(a3, "target", "_blank");
      attr_dev(a3, "rel", "noreferrer");
      add_location(a3, file8, 127, 3, 3657);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a0, anchor);
      insert_dev(target, t1, anchor);
      insert_dev(target, a1, anchor);
      insert_dev(target, t3, anchor);
      insert_dev(target, a2, anchor);
      append_dev(a2, t4);
      insert_dev(target, t5, anchor);
      insert_dev(target, a3, anchor);
      append_dev(a3, t6);
      insert_dev(target, t7, anchor);
      if (if_block0)
        if_block0.m(target, anchor);
      insert_dev(target, t8, anchor);
      if (if_block1)
        if_block1.m(target, anchor);
      insert_dev(target, if_block1_anchor, anchor);
      if (!mounted) {
        dispose = [
          listen_dev(
            a0,
            "click",
            /*click_handler_3*/
            ctx[16],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            a1,
            "click",
            /*click_handler_4*/
            ctx[17],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            a2,
            "click",
            /*click_handler_5*/
            ctx[18],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*timelineProps*/
      2 && t4_value !== (t4_value = /*timelineProps*/
      ctx2[1].compact ? "Show expanded" : "Show compact"))
        set_data_dev(t4, t4_value);
      if (dirty & /*article*/
      4 && a3_href_value !== (a3_href_value = /*article*/
      ctx2[2].url)) {
        attr_dev(a3, "href", a3_href_value);
      }
      if (
        /*repost*/
        ctx2[3]
      ) {
        if (if_block0) {
          if_block0.p(ctx2, dirty);
        } else {
          if_block0 = create_if_block_22(ctx2);
          if_block0.c();
          if_block0.m(t8.parentNode, t8);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      if (!/*isQuoted*/
      ctx2[4]) {
        if (if_block1) {
          if_block1.p(ctx2, dirty);
        } else {
          if_block1 = create_if_block_13(ctx2);
          if_block1.c();
          if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a0);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(a1);
      if (detaching)
        detach_dev(t3);
      if (detaching)
        detach_dev(a2);
      if (detaching)
        detach_dev(t5);
      if (detaching)
        detach_dev(a3);
      if (detaching)
        detach_dev(t7);
      if (if_block0)
        if_block0.d(detaching);
      if (detaching)
        detach_dev(t8);
      if (if_block1)
        if_block1.d(detaching);
      if (detaching)
        detach_dev(if_block1_anchor);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_default_slot.name,
    type: "slot",
    source: "(111:2) <Dropdown labelClasses='articleButton borderless-button'>",
    ctx
  });
  return block;
}
function create_triggerIcon_slot(ctx) {
  let span;
  let fa;
  let current;
  fa = new fa_default({
    props: { icon: faEllipsisH },
    $$inline: true
  });
  const block = {
    c: function create() {
      span = element("span");
      create_component(fa.$$.fragment);
      attr_dev(span, "slot", "triggerIcon");
      attr_dev(span, "class", "icon");
      add_location(span, file8, 111, 6, 3061);
    },
    m: function mount(target, anchor) {
      insert_dev(target, span, anchor);
      mount_component(fa, span, null);
      current = true;
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(span);
      destroy_component(fa);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_triggerIcon_slot.name,
    type: "slot",
    source: "(112:6) ",
    ctx
  });
  return block;
}
function create_if_block4(ctx) {
  let div;
  let button;
  let span;
  let fa;
  let current;
  fa = new fa_default({
    props: { icon: faSpinner },
    $$inline: true
  });
  const block = {
    c: function create() {
      div = element("div");
      button = element("button");
      span = element("span");
      create_component(fa.$$.fragment);
      attr_dev(span, "class", "icon");
      add_location(span, file8, 153, 4, 4372);
      attr_dev(
        button,
        "title",
        /*status*/
        ctx[10]
      );
      attr_dev(button, "class", "svelte-1esowk8");
      add_location(button, file8, 152, 3, 4344);
      attr_dev(div, "class", "level-right svelte-1esowk8");
      add_location(div, file8, 151, 2, 4315);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, button);
      append_dev(button, span);
      mount_component(fa, span, null);
      current = true;
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      destroy_component(fa);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block4.name,
    type: "if",
    source: "(151:1) {#if status !== null}",
    ctx
  });
  return block;
}
function create_fragment8(ctx) {
  let nav;
  let div;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let t0;
  let button;
  let span;
  let fa;
  let t1;
  let t2;
  let dropdown;
  let t3;
  let current;
  let mounted;
  let dispose;
  let each_value = (
    /*actions*/
    ctx[8]
  );
  validate_each_argument(each_value);
  const get_key = (ctx2) => (
    /*action*/
    ctx2[19].key
  );
  validate_each_keys(ctx, each_value, get_each_context5, get_key);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context5(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block5(key, child_ctx));
  }
  fa = new fa_default({
    props: {
      icon: (
        /*article*/
        ctx[2].markedAsRead ? faEye : faEyeSlash
      )
    },
    $$inline: true
  });
  let if_block0 = !/*isQuoted*/
  ctx[4] && !/*modal*/
  ctx[0] && create_if_block_32(ctx);
  dropdown = new Dropdown_default({
    props: {
      labelClasses: "articleButton borderless-button",
      $$slots: {
        triggerIcon: [create_triggerIcon_slot],
        default: [create_default_slot]
      },
      $$scope: { ctx }
    },
    $$inline: true
  });
  let if_block1 = (
    /*status*/
    ctx[10] !== null && create_if_block4(ctx)
  );
  const block = {
    c: function create() {
      nav = element("nav");
      div = element("div");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t0 = space();
      button = element("button");
      span = element("span");
      create_component(fa.$$.fragment);
      t1 = space();
      if (if_block0)
        if_block0.c();
      t2 = space();
      create_component(dropdown.$$.fragment);
      t3 = space();
      if (if_block1)
        if_block1.c();
      attr_dev(span, "class", "icon svelte-1esowk8");
      add_location(span, file8, 95, 3, 2648);
      attr_dev(button, "class", "articleButton borderless-button svelte-1esowk8");
      attr_dev(button, "title", "Mark as read");
      add_location(button, file8, 90, 2, 2513);
      attr_dev(div, "class", "svelte-1esowk8");
      add_location(div, file8, 63, 1, 1457);
      attr_dev(nav, "class", "svelte-1esowk8");
      add_location(nav, file8, 62, 0, 1450);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, nav, anchor);
      append_dev(nav, div);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div, null);
        }
      }
      append_dev(div, t0);
      append_dev(div, button);
      append_dev(button, span);
      mount_component(fa, span, null);
      append_dev(div, t1);
      if (if_block0)
        if_block0.m(div, null);
      append_dev(div, t2);
      mount_component(dropdown, div, null);
      append_dev(nav, t3);
      if (if_block1)
        if_block1.m(nav, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler_1*/
          ctx[14],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*actions, article, updateActionHover, hoveredActions, undefined*/
      900) {
        each_value = /*actions*/
        ctx2[8];
        validate_each_argument(each_value);
        group_outros();
        validate_each_keys(ctx2, each_value, get_each_context5, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, div, outro_and_destroy_block, create_each_block5, t0, get_each_context5);
        check_outros();
      }
      const fa_changes = {};
      if (dirty & /*article*/
      4)
        fa_changes.icon = /*article*/
        ctx2[2].markedAsRead ? faEye : faEyeSlash;
      fa.$set(fa_changes);
      if (!/*isQuoted*/
      ctx2[4] && !/*modal*/
      ctx2[0]) {
        if (if_block0) {
          if_block0.p(ctx2, dirty);
          if (dirty & /*isQuoted, modal*/
          17) {
            transition_in(if_block0, 1);
          }
        } else {
          if_block0 = create_if_block_32(ctx2);
          if_block0.c();
          transition_in(if_block0, 1);
          if_block0.m(div, t2);
        }
      } else if (if_block0) {
        group_outros();
        transition_out(if_block0, 1, 1, () => {
          if_block0 = null;
        });
        check_outros();
      }
      const dropdown_changes = {};
      if (dirty & /*$$scope, onLogJSON, onLogData, isQuoted, repost, article, timelineProps*/
      67108990) {
        dropdown_changes.$$scope = { dirty, ctx: ctx2 };
      }
      dropdown.$set(dropdown_changes);
      if (
        /*status*/
        ctx2[10] !== null
      )
        if_block1.p(ctx2, dirty);
    },
    i: function intro(local) {
      if (current)
        return;
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      transition_in(fa.$$.fragment, local);
      transition_in(if_block0);
      transition_in(dropdown.$$.fragment, local);
      transition_in(if_block1);
      current = true;
    },
    o: function outro(local) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      transition_out(fa.$$.fragment, local);
      transition_out(if_block0);
      transition_out(dropdown.$$.fragment, local);
      transition_out(if_block1);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(nav);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
      destroy_component(fa);
      if (if_block0)
        if_block0.d();
      destroy_component(dropdown);
      if (if_block1)
        if_block1.d();
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment8.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance8($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("SocialNav", slots, []);
  let { article } = $$props;
  let { repost = void 0 } = $$props;
  let { isQuoted = false } = $$props;
  let { modal } = $$props;
  let { timelineProps } = $$props;
  let { onLogData } = $$props;
  let { onLogJSON } = $$props;
  let actions = Object.values(getServices()[article.idPair.service].articleActions).filter((a) => a.icon !== void 0).sort((a, b) => a.index - b.index);
  let hoveredActions = /* @__PURE__ */ new Set();
  function updateActionHover(key, hovered) {
    if (hovered)
      hoveredActions.add(key);
    else
      hoveredActions.delete(key);
    $$invalidate(7, hoveredActions);
  }
  let status = null;
  $$self.$$.on_mount.push(function() {
    if (article === void 0 && !("article" in $$props || $$self.$$.bound[$$self.$$.props["article"]])) {
      console.warn("<SocialNav> was created without expected prop 'article'");
    }
    if (modal === void 0 && !("modal" in $$props || $$self.$$.bound[$$self.$$.props["modal"]])) {
      console.warn("<SocialNav> was created without expected prop 'modal'");
    }
    if (timelineProps === void 0 && !("timelineProps" in $$props || $$self.$$.bound[$$self.$$.props["timelineProps"]])) {
      console.warn("<SocialNav> was created without expected prop 'timelineProps'");
    }
    if (onLogData === void 0 && !("onLogData" in $$props || $$self.$$.bound[$$self.$$.props["onLogData"]])) {
      console.warn("<SocialNav> was created without expected prop 'onLogData'");
    }
    if (onLogJSON === void 0 && !("onLogJSON" in $$props || $$self.$$.bound[$$self.$$.props["onLogJSON"]])) {
      console.warn("<SocialNav> was created without expected prop 'onLogJSON'");
    }
  });
  const writable_props = [
    "article",
    "repost",
    "isQuoted",
    "modal",
    "timelineProps",
    "onLogData",
    "onLogJSON"
  ];
  Object_12.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<SocialNav> was created with unknown prop '${key}'`);
  });
  const click_handler = (action) => action.action(article.idPair);
  const mouseover_handler = (action) => updateActionHover(action.key, true);
  const mouseout_handler = (action) => updateActionHover(action.key, false);
  const click_handler_1 = () => toggleMarkAsRead(article.idPair);
  const click_handler_2 = () => $$invalidate(0, modal = true);
  const click_handler_3 = () => toggleMarkAsRead(article.idPair);
  const click_handler_4 = () => toggleHide(article.idPair);
  const click_handler_5 = () => $$invalidate(1, timelineProps.compact = !timelineProps.compact, timelineProps);
  $$self.$$set = ($$props2) => {
    if ("article" in $$props2)
      $$invalidate(2, article = $$props2.article);
    if ("repost" in $$props2)
      $$invalidate(3, repost = $$props2.repost);
    if ("isQuoted" in $$props2)
      $$invalidate(4, isQuoted = $$props2.isQuoted);
    if ("modal" in $$props2)
      $$invalidate(0, modal = $$props2.modal);
    if ("timelineProps" in $$props2)
      $$invalidate(1, timelineProps = $$props2.timelineProps);
    if ("onLogData" in $$props2)
      $$invalidate(5, onLogData = $$props2.onLogData);
    if ("onLogJSON" in $$props2)
      $$invalidate(6, onLogJSON = $$props2.onLogJSON);
  };
  $$self.$capture_state = () => ({
    Fa: fa_default,
    faEyeSlash,
    faEllipsisH,
    faExpandAlt,
    faEye,
    faSpinner,
    Dropdown: Dropdown_default,
    toggleMarkAsRead,
    toggleHide,
    Article,
    getServices,
    article,
    repost,
    isQuoted,
    modal,
    timelineProps,
    onLogData,
    onLogJSON,
    actions,
    hoveredActions,
    updateActionHover,
    status
  });
  $$self.$inject_state = ($$props2) => {
    if ("article" in $$props2)
      $$invalidate(2, article = $$props2.article);
    if ("repost" in $$props2)
      $$invalidate(3, repost = $$props2.repost);
    if ("isQuoted" in $$props2)
      $$invalidate(4, isQuoted = $$props2.isQuoted);
    if ("modal" in $$props2)
      $$invalidate(0, modal = $$props2.modal);
    if ("timelineProps" in $$props2)
      $$invalidate(1, timelineProps = $$props2.timelineProps);
    if ("onLogData" in $$props2)
      $$invalidate(5, onLogData = $$props2.onLogData);
    if ("onLogJSON" in $$props2)
      $$invalidate(6, onLogJSON = $$props2.onLogJSON);
    if ("actions" in $$props2)
      $$invalidate(8, actions = $$props2.actions);
    if ("hoveredActions" in $$props2)
      $$invalidate(7, hoveredActions = $$props2.hoveredActions);
    if ("status" in $$props2)
      $$invalidate(10, status = $$props2.status);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    modal,
    timelineProps,
    article,
    repost,
    isQuoted,
    onLogData,
    onLogJSON,
    hoveredActions,
    actions,
    updateActionHover,
    status,
    click_handler,
    mouseover_handler,
    mouseout_handler,
    click_handler_1,
    click_handler_2,
    click_handler_3,
    click_handler_4,
    click_handler_5
  ];
}
var SocialNav = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance8, create_fragment8, safe_not_equal, {
      article: 2,
      repost: 3,
      isQuoted: 4,
      modal: 0,
      timelineProps: 1,
      onLogData: 5,
      onLogJSON: 6
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "SocialNav",
      options,
      id: create_fragment8.name
    });
  }
  get article() {
    throw new Error("<SocialNav>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set article(value) {
    throw new Error("<SocialNav>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get repost() {
    throw new Error("<SocialNav>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set repost(value) {
    throw new Error("<SocialNav>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get isQuoted() {
    throw new Error("<SocialNav>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set isQuoted(value) {
    throw new Error("<SocialNav>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get modal() {
    throw new Error("<SocialNav>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set modal(value) {
    throw new Error("<SocialNav>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get timelineProps() {
    throw new Error("<SocialNav>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineProps(value) {
    throw new Error("<SocialNav>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get onLogData() {
    throw new Error("<SocialNav>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set onLogData(value) {
    throw new Error("<SocialNav>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get onLogJSON() {
    throw new Error("<SocialNav>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set onLogJSON(value) {
    throw new Error("<SocialNav>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var SocialNav_default = SocialNav;

// src/articles/social/Timestamp.svelte
var file9 = "src/articles/social/Timestamp.svelte";
function create_fragment9(ctx) {
  let span;
  let small;
  let t_value = shortTimestamp(
    /*date*/
    ctx[0]
  ) + "";
  let t;
  let small_title_value;
  const block = {
    c: function create() {
      span = element("span");
      small = element("small");
      t = text(t_value);
      attr_dev(small, "title", small_title_value = /*date*/
      ctx[0].toString());
      add_location(small, file9, 11, 1, 169);
      attr_dev(span, "class", "timestamp svelte-1oenx7i");
      add_location(span, file9, 10, 0, 143);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, span, anchor);
      append_dev(span, small);
      append_dev(small, t);
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*date*/
      1 && t_value !== (t_value = shortTimestamp(
        /*date*/
        ctx2[0]
      ) + ""))
        set_data_dev(t, t_value);
      if (dirty & /*date*/
      1 && small_title_value !== (small_title_value = /*date*/
      ctx2[0].toString())) {
        attr_dev(small, "title", small_title_value);
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(span);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment9.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance9($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("Timestamp", slots, []);
  let { date } = $$props;
  $$self.$$.on_mount.push(function() {
    if (date === void 0 && !("date" in $$props || $$self.$$.bound[$$self.$$.props["date"]])) {
      console.warn("<Timestamp> was created without expected prop 'date'");
    }
  });
  const writable_props = ["date"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<Timestamp> was created with unknown prop '${key}'`);
  });
  $$self.$$set = ($$props2) => {
    if ("date" in $$props2)
      $$invalidate(0, date = $$props2.date);
  };
  $$self.$capture_state = () => ({ shortTimestamp, date });
  $$self.$inject_state = ($$props2) => {
    if ("date" in $$props2)
      $$invalidate(0, date = $$props2.date);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [date];
}
var Timestamp = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance9, create_fragment9, safe_not_equal, { date: 0 });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Timestamp",
      options,
      id: create_fragment9.name
    });
  }
  get date() {
    throw new Error("<Timestamp>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set date(value) {
    throw new Error("<Timestamp>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var Timestamp_default = Timestamp;

// src/sorting/index.ts
var SortMethod = /* @__PURE__ */ ((SortMethod2) => {
  SortMethod2[SortMethod2["Id"] = 0] = "Id";
  SortMethod2[SortMethod2["Date"] = 1] = "Date";
  SortMethod2[SortMethod2["Likes"] = 2] = "Likes";
  SortMethod2[SortMethod2["Reposts"] = 3] = "Reposts";
  SortMethod2[SortMethod2["Custom"] = 4] = "Custom";
  return SortMethod2;
})(SortMethod || {});
var genericSortMethods = [
  0 /* Id */,
  1 /* Date */,
  2 /* Likes */,
  3 /* Reposts */
];
function compare(info) {
  return (a, b) => {
    switch (info.method) {
      case 0 /* Id */: {
        const aRoot = getRootArticle(a);
        const bRoot = getRootArticle(b);
        return aRoot.numberId > bRoot.numberId ? 1 : aRoot.numberId < bRoot.numberId ? -1 : 0;
      }
      case 1 /* Date */:
        return (getRootArticle(a).creationTime?.getTime() || 0) - (getRootArticle(b).creationTime?.getTime() || 0);
      case 2 /* Likes */:
        return getActualArticle(a).getLikeCount() - getActualArticle(b).getLikeCount();
      case 3 /* Reposts */:
        return getActualArticle(a).getRepostCount() - getActualArticle(b).getRepostCount();
      case 4 /* Custom */: {
        if (getRootArticle(a).idPair.service !== info?.customMethod?.service || getRootArticle(b).idPair.service !== info.customMethod.service)
          return 0;
        else
          return getServices()[info.customMethod.service]?.sortMethods[info.customMethod.method]?.compare(a, b) || 0;
      }
      case null:
        return 0;
    }
  };
}
function directionLabel(method, reversed) {
  switch (method) {
    case 1 /* Date */:
      return reversed ? "Reverse chronological" : "Chronological";
    default:
      return reversed ? "Descending" : "Ascending";
  }
}
function methodName(method) {
  switch (method) {
    case 0 /* Id */:
      return "Id";
    case 1 /* Date */:
      return "Date";
    case 2 /* Likes */:
      return "Likes";
    case 3 /* Reposts */:
      return "Reposts";
    case 4 /* Custom */:
      return "Custom";
  }
}

// src/filters/index.ts
function getFilterName(filterType, inverted) {
  if (inverted) {
    switch (filterType) {
      case "media":
        return "Without Media";
      case "animated":
        return "Not Animated";
      case "notMarkedAsRead":
        return "Marked as read";
      case "notHidden":
        return "Hidden";
      case "liked":
        return "Not liked";
      case "reposted":
        return "Not reposted";
      case "noRef":
        return "References other articles";
      case "repost":
        return "Not a repost";
      case "quote":
        return "Not a quote";
      case "selfRepost":
        return "Not a self repost";
      case "selfQuote":
        return "Not a self quote";
      case "interval":
        return "Not by interval";
    }
  } else {
    switch (filterType) {
      case "media":
        return "Has media";
      case "animated":
        return "Animated";
      case "notMarkedAsRead":
        return "Not marked as read";
      case "notHidden":
        return "Not hidden";
      case "liked":
        return "Liked";
      case "reposted":
        return "Reposted";
      case "noRef":
        return "Doesn't references other articles";
      case "repost":
        return "Repost";
      case "quote":
        return "Quote";
      case "selfRepost":
        return "Self repost";
      case "selfQuote":
        return "Self quote";
      case "interval":
        return "By interval";
    }
  }
}
var filterTypes = [
  "media",
  "animated",
  "notMarkedAsRead",
  "notHidden",
  "liked",
  "reposted",
  "noRef",
  "repost",
  "quote",
  "selfRepost",
  "selfQuote"
];
function defaultFilter(filterType, service) {
  if (service)
    return getServices()[service].defaultFilter(filterType);
  switch (filterType) {
    case "interval":
      return {
        type: filterType,
        interval: 3,
        offset: 0,
        includeOffset: false,
        service: null
      };
    default:
      return { type: filterType, service: null };
  }
}
var defaultFilterInstances = [
  {
    filter: { type: "notMarkedAsRead", service: null },
    enabled: true,
    inverted: false
  },
  {
    filter: { type: "notHidden", service: null },
    enabled: true,
    inverted: false
  }
];
function keepArticle(articleWithRefs, index, filter) {
  if (filter.service !== null)
    return getServices()[filter.service].keepArticle(articleWithRefs, index, filter);
  else
    return keepArticleGeneric(articleWithRefs, index, filter);
}
function keepArticleGeneric(articleWithRefs, index, filter) {
  switch (filter.type) {
    case "media":
      return articleWithRefToArray(articleWithRefs).some((a) => a.medias.length > 0);
    case "animated":
      return articleWithRefToArray(articleWithRefs).some((a) => a.medias.some(isAnimated));
    case "notMarkedAsRead":
      switch (articleWithRefs.type) {
        case "normal":
          return !articleWithRefs.article.markedAsRead;
        case "repost":
          return !articleWithRefs.article.markedAsRead && keepArticleGeneric(articleWithRefs.reposted, index, filter);
      }
      throw new Error("Invalid article type");
    case "notHidden":
      switch (articleWithRefs.type) {
        case "normal":
          return !articleWithRefs.article.hidden;
        case "repost":
          return !articleWithRefs.article.hidden && keepArticleGeneric(articleWithRefs.reposted, index, filter);
      }
      throw new Error("Invalid article type");
    case "liked":
      return getActualArticle(articleWithRefs).getLiked();
    case "reposted":
      return getActualArticle(articleWithRefs).getReposted();
    case "noRef":
      return articleWithRefs.type === "normal";
    case "repost":
      if (articleWithRefs.type === "repost") {
        if (filter.byUsername) {
          return articleWithRefs.article.author?.username === filter.byUsername;
        } else
          return true;
      }
      return false;
    case "quote":
      if (articleWithRefs.type === "quote") {
        if (filter.byUsername)
          return articleWithRefs.article.author?.username === filter.byUsername;
        else
          return true;
      }
      return false;
    case "selfRepost":
      if (articleWithRefs.type === "repost")
        return articleWithRefs.article.author?.username === articleWithRefs.reposted.article.author?.username;
      return false;
    case "selfQuote":
      if (articleWithRefs.type === "quote")
        return articleWithRefs.article.author?.username === articleWithRefs.quoted.article.author?.username;
      return false;
    case "interval":
      if (index < filter.offset)
        return filter.includeOffset;
      else
        return (index - filter.offset) % filter.interval === filter.interval - 1;
  }
}
function isAnimated(media) {
  switch (media.mediaType) {
    case 1 /* Video */:
    case 2 /* VideoGif */:
    case 3 /* Gif */:
      return true;
    case 0 /* Image */:
      return false;
  }
}
function useFilters(articlesWithRefs, filters) {
  return articlesWithRefs.filter((articleWithRefs, i) => filters.every((f) => !f.enabled || keepArticle(articleWithRefs, i, f.filter) !== f.inverted));
}

// src/services/endpoints.ts
var endpoints = {};
var timelineEndpoints = writable([]);
var timelineEndpointsValue;
timelineEndpoints.subscribe((value) => timelineEndpointsValue = value);
var Endpoint = class {
  constructor(refreshTypes = /* @__PURE__ */ new Set([
    RefreshType.RefreshStart,
    RefreshType.Refresh
  ])) {
    this.refreshTypes = refreshTypes;
    this.autoRefreshId = null;
  }
  articleIdPairs = [];
  rateLimitInfo = null;
  autoRefreshId;
  autoRefreshInterval = 9e4;
  isRateLimited() {
    if (this.rateLimitInfo === null)
      return false;
    else
      return this.rateLimitInfo.remaining <= 0 && this.rateLimitInfo.reset > Date.now();
  }
};
__publicField(Endpoint, "constructorInfo");
var RefreshType = /* @__PURE__ */ ((RefreshType2) => {
  RefreshType2[RefreshType2["RefreshStart"] = 0] = "RefreshStart";
  RefreshType2[RefreshType2["Refresh"] = 1] = "Refresh";
  RefreshType2[RefreshType2["LoadTop"] = 2] = "LoadTop";
  RefreshType2[RefreshType2["LoadBottom"] = 3] = "LoadBottom";
  return RefreshType2;
})(RefreshType || {});
var everyRefreshType = /* @__PURE__ */ new Set([
  0 /* RefreshStart */,
  1 /* Refresh */,
  3 /* LoadBottom */,
  2 /* LoadTop */
]);
function addEndpoint(endpoint) {
  if (Object.hasOwn(endpoints, endpoint.name))
    console.warn(`Endpoint ${endpoint.name} already exists`);
  else
    endpoints[endpoint.name] = writable(endpoint);
}
async function refreshEndpointName(endpointName, refreshType, autoRefreshing = false) {
  const endpoint = get_store_value(endpoints[endpointName]);
  if (!endpoint.refreshTypes.has(refreshType))
    return;
  const articles = await refreshEndpoint(endpoint, refreshType, autoRefreshing);
  const matchingTimelineEndpoints = timelineEndpointsValue.map((te) => ({
    endpoint: te.endpoints.find((es) => (es.name ?? es.endpoint.name) === endpointName && es.refreshTypes.has(refreshType)),
    addArticles: te.addArticles
  })).filter((te) => te.endpoint !== void 0);
  for (const timelineEndpoint of matchingTimelineEndpoints) {
    timelineEndpoint.addArticles(
      useFilters(articles, timelineEndpoint.endpoint.filters).map((a) => getRootArticle(a).idPair)
    );
  }
}
async function refreshEndpoint(endpoint, refreshType, autoRefreshing = false) {
  if (!endpoint.refreshTypes.has(refreshType))
    throw new Error(`Endpoint ${endpoint.name} doesn't have refresh type ${refreshType}`);
  if (endpoint.isRateLimited()) {
    const secondsLeft = Math.ceil((endpoint.rateLimitInfo.reset * 1e3 - Date.now()) / 1e3);
    console.log(`${endpoint.name} is rate limited, and resets in ${secondsLeft} seconds.`, endpoint.rateLimitInfo);
    return [];
  }
  if (!autoRefreshing && endpoints[endpoint.name] !== void 0 && endpoint.autoRefreshId !== null) {
    clearInterval(endpoint.autoRefreshId);
    endpoint.autoRefreshId = null;
    startAutoRefreshEndpoint(endpoint);
  }
  const articles = await endpoint.refresh(refreshType);
  if (!articles.length)
    return [];
  endpoint.articleIdPairs.push(
    ...articles.map((a) => getRootArticle(a).idPair).filter(
      (idPair) => !endpoint.articleIdPairs.some(
        (pair) => pair.service === idPair.service && pair.id === idPair.id
      )
    )
  );
  addArticles(getServices()[endpoint.service], false, ...articles);
  if (endpoints[endpoint.name] !== void 0)
    endpoints[endpoint.name].set(endpoint);
  return articles;
}
function startAutoRefresh(endpointName) {
  endpoints[endpointName].update((e) => {
    startAutoRefreshEndpoint(e);
    return e;
  });
}
function startAutoRefreshEndpoint(endpoint) {
  if (endpoint.autoRefreshId === null) {
    endpoint.autoRefreshId = setInterval(() => {
      console.debug("Refreshing " + endpoint.name);
      refreshEndpointName(endpoint.name, 1 /* Refresh */, true).then();
    }, endpoint.autoRefreshInterval);
  }
}
function stopAutoRefresh(endpointName) {
  endpoints[endpointName].update((e) => {
    clearInterval(e.autoRefreshId);
    e.autoRefreshId = null;
    return e;
  });
}

// src/timelines/index.ts
function defaultTimeline(articles = []) {
  return {
    title: "Timeline",
    endpoints: [],
    addedIdPairs: writable([...articles]),
    articles: writable(articles),
    section: { useSection: false, count: 100 },
    container: ColumnContainer_default,
    articleView: SocialArticleView_default,
    columnCount: 1,
    rtl: false,
    width: 1,
    filters: defaultFilterInstances,
    sortInfo: {
      method: 1 /* Date */,
      customMethod: null,
      reversed: true
    },
    animatedAsGifs: false,
    scrollSpeed: 3,
    hideText: false,
    compact: false,
    shouldLoadMedia: true,
    hideFilteredOutArticles: true,
    mergeReposts: true,
    showArticleCount: false,
    maxMediaCount: 4
  };
}
function newUserTimeline(serviceName, author) {
  const endpointConstructor = getServices()[serviceName].userEndpoint;
  if (endpointConstructor === void 0)
    return void 0;
  return {
    ...defaultTimeline(),
    title: author.name,
    endpoints: [{
      endpoint: endpointConstructor(author),
      refreshTypes: everyRefreshType,
      filters: []
    }],
    filters: [
      ...defaultFilterInstances,
      {
        filter: { type: "media", service: null },
        enabled: true,
        inverted: false
      },
      {
        filter: { type: "noRef", service: null },
        enabled: true,
        inverted: false
      }
    ],
    container: MasonryContainer_default,
    columnCount: 3
  };
}

// src/articles/social/SocialArticleView.svelte
var file10 = "src/articles/social/SocialArticleView.svelte";
function get_if_ctx(ctx) {
  const child_ctx = ctx.slice();
  const constants_0 = (
    /*articleProps*/
    child_ctx[3].quoted.article
  );
  child_ctx[19] = constants_0;
  return child_ctx;
}
function create_if_block_11(ctx) {
  let a;
  let a_href_value;
  let mounted;
  let dispose;
  function select_block_type(ctx2, dirty) {
    if (
      /*articleProps*/
      ctx2[3].reposts.length > 1
    )
      return create_if_block_122;
    return create_else_block_2;
  }
  let current_block_type = select_block_type(ctx, -1);
  let if_block = current_block_type(ctx);
  const block = {
    c: function create() {
      a = element("a");
      if_block.c();
      attr_dev(a, "href", a_href_value = /*rootArticle*/
      ctx[4].author.url);
      attr_dev(a, "target", "_blank");
      attr_dev(a, "rel", "noreferrer");
      attr_dev(a, "class", "svelte-40ngim");
      add_location(a, file10, 154, 3, 2916);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a, anchor);
      if_block.m(a, null);
      if (!mounted) {
        dispose = listen_dev(a, "click", prevent_default(
          /*click_handler*/
          ctx[12]
        ), false, true, false, false);
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (current_block_type === (current_block_type = select_block_type(ctx2, dirty)) && if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block.d(1);
        if_block = current_block_type(ctx2);
        if (if_block) {
          if_block.c();
          if_block.m(a, null);
        }
      }
      if (dirty & /*rootArticle*/
      16 && a_href_value !== (a_href_value = /*rootArticle*/
      ctx2[4].author.url)) {
        attr_dev(a, "href", a_href_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a);
      if_block.d();
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_11.name,
    type: "if",
    source: "(154:2) {#if isArticleRepost && rootArticle.author}",
    ctx
  });
  return block;
}
function create_else_block_2(ctx) {
  let t0_value = (
    /*rootArticle*/
    ctx[4].author.name + ""
  );
  let t0;
  let t1;
  let t2_value = shortTimestamp(
    /*rootArticle*/
    ctx[4].creationTime
  ) + "";
  let t2;
  const block = {
    c: function create() {
      t0 = text(t0_value);
      t1 = text(" reposted - ");
      t2 = text(t2_value);
    },
    m: function mount(target, anchor) {
      insert_dev(target, t0, anchor);
      insert_dev(target, t1, anchor);
      insert_dev(target, t2, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*rootArticle*/
      16 && t0_value !== (t0_value = /*rootArticle*/
      ctx2[4].author.name + ""))
        set_data_dev(t0, t0_value);
      if (dirty & /*rootArticle*/
      16 && t2_value !== (t2_value = shortTimestamp(
        /*rootArticle*/
        ctx2[4].creationTime
      ) + ""))
        set_data_dev(t2, t2_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t0);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(t2);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block_2.name,
    type: "else",
    source: "(158:4) {:else}",
    ctx
  });
  return block;
}
function create_if_block_122(ctx) {
  let t0_value = (
    /*articleProps*/
    ctx[3].reposts.map(func).join(", ") + ""
  );
  let t0;
  let t1;
  let t2_value = shortTimestamp(
    /*rootArticle*/
    ctx[4].creationTime
  ) + "";
  let t2;
  const block = {
    c: function create() {
      t0 = text(t0_value);
      t1 = text(" reposted - ");
      t2 = text(t2_value);
    },
    m: function mount(target, anchor) {
      insert_dev(target, t0, anchor);
      insert_dev(target, t1, anchor);
      insert_dev(target, t2, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*articleProps*/
      8 && t0_value !== (t0_value = /*articleProps*/
      ctx2[3].reposts.map(func).join(", ") + ""))
        set_data_dev(t0, t0_value);
      if (dirty & /*rootArticle*/
      16 && t2_value !== (t2_value = shortTimestamp(
        /*rootArticle*/
        ctx2[4].creationTime
      ) + ""))
        set_data_dev(t2, t2_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t0);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(t2);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_122.name,
    type: "if",
    source: "(156:4) {#if articleProps.reposts.length > 1}",
    ctx
  });
  return block;
}
function create_if_block_9(ctx) {
  let figure;
  function select_block_type_1(ctx2, dirty) {
    if (
      /*isArticleRepost*/
      ctx2[10]
    )
      return create_if_block_10;
    return create_else_block_1;
  }
  let current_block_type = select_block_type_1(ctx, -1);
  let if_block = current_block_type(ctx);
  const block = {
    c: function create() {
      figure = element("figure");
      if_block.c();
      attr_dev(figure, "class", "avatar svelte-40ngim");
      toggle_class(
        figure,
        "sharedAvatar",
        /*isArticleRepost*/
        ctx[10]
      );
      add_location(figure, file10, 166, 3, 3437);
    },
    m: function mount(target, anchor) {
      insert_dev(target, figure, anchor);
      if_block.m(figure, null);
    },
    p: function update3(ctx2, dirty) {
      if_block.p(ctx2, dirty);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(figure);
      if_block.d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_9.name,
    type: "if",
    source: "(166:2) {#if actualArticle.author?.avatarUrl}",
    ctx
  });
  return block;
}
function create_else_block_1(ctx) {
  let img;
  let img_src_value;
  let img_alt_value;
  const block = {
    c: function create() {
      img = element("img");
      if (!src_url_equal(img.src, img_src_value = /*actualArticle*/
      ctx[5].author.avatarUrl))
        attr_dev(img, "src", img_src_value);
      attr_dev(img, "alt", img_alt_value = `${/*actualArticle*/
      ctx[5].author.username}'s avatar`);
      attr_dev(img, "class", "svelte-40ngim");
      add_location(img, file10, 171, 5, 3735);
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*actualArticle*/
      32 && !src_url_equal(img.src, img_src_value = /*actualArticle*/
      ctx2[5].author.avatarUrl)) {
        attr_dev(img, "src", img_src_value);
      }
      if (dirty & /*actualArticle*/
      32 && img_alt_value !== (img_alt_value = `${/*actualArticle*/
      ctx2[5].author.username}'s avatar`)) {
        attr_dev(img, "alt", img_alt_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(img);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block_1.name,
    type: "else",
    source: "(171:4) {:else}",
    ctx
  });
  return block;
}
function create_if_block_10(ctx) {
  let img0;
  let img0_src_value;
  let img0_alt_value;
  let t;
  let img1;
  let img1_src_value;
  let img1_alt_value;
  const block = {
    c: function create() {
      img0 = element("img");
      t = space();
      img1 = element("img");
      if (!src_url_equal(img0.src, img0_src_value = /*actualArticle*/
      ctx[5].author.avatarUrl))
        attr_dev(img0, "src", img0_src_value);
      attr_dev(img0, "alt", img0_alt_value = `${/*actualArticle*/
      ctx[5].author.username}'s avatar`);
      attr_dev(img0, "class", "svelte-40ngim");
      add_location(img0, file10, 168, 5, 3529);
      if (!src_url_equal(img1.src, img1_src_value = /*rootArticle*/
      ctx[4].author.avatarUrl))
        attr_dev(img1, "src", img1_src_value);
      attr_dev(img1, "alt", img1_alt_value = `${/*rootArticle*/
      ctx[4].author.username}'s avatar`);
      attr_dev(img1, "class", "svelte-40ngim");
      add_location(img1, file10, 169, 5, 3628);
    },
    m: function mount(target, anchor) {
      insert_dev(target, img0, anchor);
      insert_dev(target, t, anchor);
      insert_dev(target, img1, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*actualArticle*/
      32 && !src_url_equal(img0.src, img0_src_value = /*actualArticle*/
      ctx2[5].author.avatarUrl)) {
        attr_dev(img0, "src", img0_src_value);
      }
      if (dirty & /*actualArticle*/
      32 && img0_alt_value !== (img0_alt_value = `${/*actualArticle*/
      ctx2[5].author.username}'s avatar`)) {
        attr_dev(img0, "alt", img0_alt_value);
      }
      if (dirty & /*rootArticle*/
      16 && !src_url_equal(img1.src, img1_src_value = /*rootArticle*/
      ctx2[4].author.avatarUrl)) {
        attr_dev(img1, "src", img1_src_value);
      }
      if (dirty & /*rootArticle*/
      16 && img1_alt_value !== (img1_alt_value = `${/*rootArticle*/
      ctx2[4].author.username}'s avatar`)) {
        attr_dev(img1, "alt", img1_alt_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(img0);
      if (detaching)
        detach_dev(t);
      if (detaching)
        detach_dev(img1);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_10.name,
    type: "if",
    source: "(168:4) {#if isArticleRepost}",
    ctx
  });
  return block;
}
function create_if_block_8(ctx) {
  let timestamp;
  let current;
  timestamp = new Timestamp_default({
    props: {
      date: (
        /*actualArticle*/
        ctx[5].creationTime
      )
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      create_component(timestamp.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(timestamp, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const timestamp_changes = {};
      if (dirty & /*actualArticle*/
      32)
        timestamp_changes.date = /*actualArticle*/
        ctx2[5].creationTime;
      timestamp.$set(timestamp_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(timestamp.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(timestamp.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(timestamp, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_8.name,
    type: "if",
    source: "(189:5) {#if actualArticle.creationTime !== undefined}",
    ctx
  });
  return block;
}
function create_if_block_5(ctx) {
  let p;
  function select_block_type_2(ctx2, dirty) {
    if (
      /*actualArticle*/
      ctx2[5].textHtml
    )
      return create_if_block_6;
    if (
      /*actualArticle*/
      ctx2[5].text
    )
      return create_if_block_7;
  }
  let current_block_type = select_block_type_2(ctx, -1);
  let if_block = current_block_type && current_block_type(ctx);
  const block = {
    c: function create() {
      p = element("p");
      if (if_block)
        if_block.c();
      attr_dev(p, "class", "articleParagraph svelte-40ngim");
      add_location(p, file10, 193, 5, 4436);
    },
    m: function mount(target, anchor) {
      insert_dev(target, p, anchor);
      if (if_block)
        if_block.m(p, null);
    },
    p: function update3(ctx2, dirty) {
      if (current_block_type === (current_block_type = select_block_type_2(ctx2, dirty)) && if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if (if_block)
          if_block.d(1);
        if_block = current_block_type && current_block_type(ctx2);
        if (if_block) {
          if_block.c();
          if_block.m(p, null);
        }
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(p);
      if (if_block) {
        if_block.d();
      }
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_5.name,
    type: "if",
    source: "(193:4) {#if !timelineProps.hideText && !minimized}",
    ctx
  });
  return block;
}
function create_if_block_7(ctx) {
  let t_value = (
    /*actualArticle*/
    ctx[5].text + ""
  );
  let t;
  const block = {
    c: function create() {
      t = text(t_value);
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*actualArticle*/
      32 && t_value !== (t_value = /*actualArticle*/
      ctx2[5].text + ""))
        set_data_dev(t, t_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_7.name,
    type: "if",
    source: "(197:35) ",
    ctx
  });
  return block;
}
function create_if_block_6(ctx) {
  let html_tag;
  let raw_value = (
    /*actualArticle*/
    ctx[5].textHtml + ""
  );
  let html_anchor;
  const block = {
    c: function create() {
      html_tag = new HtmlTag(false);
      html_anchor = empty();
      html_tag.a = html_anchor;
    },
    m: function mount(target, anchor) {
      html_tag.m(raw_value, target, anchor);
      insert_dev(target, html_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*actualArticle*/
      32 && raw_value !== (raw_value = /*actualArticle*/
      ctx2[5].textHtml + ""))
        html_tag.p(raw_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(html_anchor);
      if (detaching)
        html_tag.d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_6.name,
    type: "if",
    source: "(195:6) {#if actualArticle.textHtml}",
    ctx
  });
  return block;
}
function create_if_block_14(ctx) {
  let div1;
  let div0;
  let a;
  let strong;
  let t0_value = (
    /*quoted*/
    ctx[19].author.name + ""
  );
  let t0;
  let t1;
  let small;
  let t2_value = `@${/*quoted*/
  ctx[19].author.username}`;
  let t2;
  let a_href_value;
  let t3;
  let timestamp;
  let t4;
  let t5;
  let socialnav;
  let current;
  timestamp = new Timestamp_default({
    props: { date: (
      /*quoted*/
      ctx[19].creationTime
    ) },
    $$inline: true
  });
  let if_block = !/*minimized*/
  (ctx[9] || /*articleProps*/
  ctx[3].quoted.filteredOut) && create_if_block_23(ctx);
  socialnav = new SocialNav_default({
    props: {
      article: (
        /*quoted*/
        ctx[19]
      ),
      isQuoted: true,
      timelineProps: (
        /*timelineProps*/
        ctx[2]
      ),
      modal: (
        /*modal*/
        ctx[0]
      ),
      onLogData: (
        /*onLogData*/
        ctx[7]
      ),
      onLogJSON: (
        /*onLogJSON*/
        ctx[8]
      )
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      div1 = element("div");
      div0 = element("div");
      a = element("a");
      strong = element("strong");
      t0 = text(t0_value);
      t1 = space();
      small = element("small");
      t2 = text(t2_value);
      t3 = space();
      create_component(timestamp.$$.fragment);
      t4 = space();
      if (if_block)
        if_block.c();
      t5 = space();
      create_component(socialnav.$$.fragment);
      attr_dev(strong, "class", "svelte-40ngim");
      add_location(strong, file10, 207, 7, 4884);
      attr_dev(small, "class", "svelte-40ngim");
      add_location(small, file10, 208, 7, 4931);
      attr_dev(a, "class", "names svelte-40ngim");
      attr_dev(a, "href", a_href_value = /*quoted*/
      ctx[19].author.url);
      attr_dev(a, "target", "_blank");
      attr_dev(a, "rel", "noreferrer");
      add_location(a, file10, 206, 6, 4801);
      attr_dev(div0, "class", "articleHeader svelte-40ngim");
      add_location(div0, file10, 205, 5, 4767);
      attr_dev(div1, "class", "quotedPost svelte-40ngim");
      add_location(div1, file10, 204, 4, 4737);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div1, anchor);
      append_dev(div1, div0);
      append_dev(div0, a);
      append_dev(a, strong);
      append_dev(strong, t0);
      append_dev(a, t1);
      append_dev(a, small);
      append_dev(small, t2);
      append_dev(div0, t3);
      mount_component(timestamp, div0, null);
      append_dev(div1, t4);
      if (if_block)
        if_block.m(div1, null);
      append_dev(div1, t5);
      mount_component(socialnav, div1, null);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      if ((!current || dirty & /*articleProps*/
      8) && t0_value !== (t0_value = /*quoted*/
      ctx2[19].author.name + ""))
        set_data_dev(t0, t0_value);
      if ((!current || dirty & /*articleProps*/
      8) && t2_value !== (t2_value = `@${/*quoted*/
      ctx2[19].author.username}`))
        set_data_dev(t2, t2_value);
      if (!current || dirty & /*articleProps*/
      8 && a_href_value !== (a_href_value = /*quoted*/
      ctx2[19].author.url)) {
        attr_dev(a, "href", a_href_value);
      }
      const timestamp_changes = {};
      if (dirty & /*articleProps*/
      8)
        timestamp_changes.date = /*quoted*/
        ctx2[19].creationTime;
      timestamp.$set(timestamp_changes);
      if (!/*minimized*/
      (ctx2[9] || /*articleProps*/
      ctx2[3].quoted.filteredOut)) {
        if (if_block) {
          if_block.p(ctx2, dirty);
          if (dirty & /*articleProps*/
          8) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block_23(ctx2);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(div1, t5);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
      const socialnav_changes = {};
      if (dirty & /*articleProps*/
      8)
        socialnav_changes.article = /*quoted*/
        ctx2[19];
      if (dirty & /*timelineProps*/
      4)
        socialnav_changes.timelineProps = /*timelineProps*/
        ctx2[2];
      if (dirty & /*modal*/
      1)
        socialnav_changes.modal = /*modal*/
        ctx2[0];
      if (dirty & /*onLogData*/
      128)
        socialnav_changes.onLogData = /*onLogData*/
        ctx2[7];
      if (dirty & /*onLogJSON*/
      256)
        socialnav_changes.onLogJSON = /*onLogJSON*/
        ctx2[8];
      socialnav.$set(socialnav_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(timestamp.$$.fragment, local);
      transition_in(if_block);
      transition_in(socialnav.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(timestamp.$$.fragment, local);
      transition_out(if_block);
      transition_out(socialnav.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div1);
      destroy_component(timestamp);
      if (if_block)
        if_block.d();
      destroy_component(socialnav);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_14.name,
    type: "if",
    source: "(203:3) {#if articleProps.type === 'quote'}",
    ctx
  });
  return block;
}
function create_if_block_23(ctx) {
  let t;
  let socialmedia;
  let updating_showAllMedia;
  let current;
  let if_block = !/*timelineProps*/
  ctx[2].hideText && create_if_block_33(ctx);
  function socialmedia_showAllMedia_binding(value) {
    ctx[15](value);
  }
  let socialmedia_props = {
    article: (
      /*quoted*/
      ctx[19]
    ),
    timelineProps: (
      /*timelineProps*/
      ctx[2]
    ),
    onMediaClick: (
      /*func_1*/
      ctx[14]
    )
  };
  if (
    /*showAllMedia*/
    ctx[1] !== void 0
  ) {
    socialmedia_props.showAllMedia = /*showAllMedia*/
    ctx[1];
  }
  socialmedia = new SocialMedia_default({ props: socialmedia_props, $$inline: true });
  binding_callbacks.push(() => bind(socialmedia, "showAllMedia", socialmedia_showAllMedia_binding));
  const block = {
    c: function create() {
      if (if_block)
        if_block.c();
      t = space();
      create_component(socialmedia.$$.fragment);
    },
    m: function mount(target, anchor) {
      if (if_block)
        if_block.m(target, anchor);
      insert_dev(target, t, anchor);
      mount_component(socialmedia, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      if (!/*timelineProps*/
      ctx2[2].hideText) {
        if (if_block) {
          if_block.p(ctx2, dirty);
        } else {
          if_block = create_if_block_33(ctx2);
          if_block.c();
          if_block.m(t.parentNode, t);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
      const socialmedia_changes = {};
      if (dirty & /*articleProps*/
      8)
        socialmedia_changes.article = /*quoted*/
        ctx2[19];
      if (dirty & /*timelineProps*/
      4)
        socialmedia_changes.timelineProps = /*timelineProps*/
        ctx2[2];
      if (dirty & /*onMediaClick, actualArticle*/
      96)
        socialmedia_changes.onMediaClick = /*func_1*/
        ctx2[14];
      if (!updating_showAllMedia && dirty & /*showAllMedia*/
      2) {
        updating_showAllMedia = true;
        socialmedia_changes.showAllMedia = /*showAllMedia*/
        ctx2[1];
        add_flush_callback(() => updating_showAllMedia = false);
      }
      socialmedia.$set(socialmedia_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(socialmedia.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(socialmedia.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (if_block)
        if_block.d(detaching);
      if (detaching)
        detach_dev(t);
      destroy_component(socialmedia, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_23.name,
    type: "if",
    source: "(213:5) {#if !(minimized || articleProps.quoted.filteredOut)}",
    ctx
  });
  return block;
}
function create_if_block_33(ctx) {
  let p;
  function select_block_type_3(ctx2, dirty) {
    if (
      /*quoted*/
      ctx2[19].textHtml
    )
      return create_if_block_42;
    return create_else_block3;
  }
  let current_block_type = select_block_type_3(ctx, -1);
  let if_block = current_block_type(ctx);
  const block = {
    c: function create() {
      p = element("p");
      if_block.c();
      attr_dev(p, "class", "refArticleParagraph svelte-40ngim");
      add_location(p, file10, 214, 7, 5150);
    },
    m: function mount(target, anchor) {
      insert_dev(target, p, anchor);
      if_block.m(p, null);
    },
    p: function update3(ctx2, dirty) {
      if (current_block_type === (current_block_type = select_block_type_3(ctx2, dirty)) && if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block.d(1);
        if_block = current_block_type(ctx2);
        if (if_block) {
          if_block.c();
          if_block.m(p, null);
        }
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(p);
      if_block.d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_33.name,
    type: "if",
    source: "(214:6) {#if !timelineProps.hideText}",
    ctx
  });
  return block;
}
function create_else_block3(ctx) {
  let t_value = (
    /*quoted*/
    ctx[19].text + ""
  );
  let t;
  const block = {
    c: function create() {
      t = text(t_value);
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*articleProps*/
      8 && t_value !== (t_value = /*quoted*/
      ctx2[19].text + ""))
        set_data_dev(t, t_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block3.name,
    type: "else",
    source: "(218:8) {:else}",
    ctx
  });
  return block;
}
function create_if_block_42(ctx) {
  let html_tag;
  let raw_value = (
    /*quoted*/
    ctx[19].textHtml + ""
  );
  let html_anchor;
  const block = {
    c: function create() {
      html_tag = new HtmlTag(false);
      html_anchor = empty();
      html_tag.a = html_anchor;
    },
    m: function mount(target, anchor) {
      html_tag.m(raw_value, target, anchor);
      insert_dev(target, html_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*articleProps*/
      8 && raw_value !== (raw_value = /*quoted*/
      ctx2[19].textHtml + ""))
        html_tag.p(raw_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(html_anchor);
      if (detaching)
        html_tag.d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_42.name,
    type: "if",
    source: "(216:8) {#if quoted.textHtml}",
    ctx
  });
  return block;
}
function create_if_block5(ctx) {
  let socialmedia;
  let updating_showAllMedia;
  let current;
  function socialmedia_showAllMedia_binding_1(value) {
    ctx[18](value);
  }
  let socialmedia_props = {
    article: (
      /*actualArticle*/
      ctx[5]
    ),
    timelineProps: (
      /*timelineProps*/
      ctx[2]
    ),
    onMediaClick: (
      /*func_2*/
      ctx[17]
    )
  };
  if (
    /*showAllMedia*/
    ctx[1] !== void 0
  ) {
    socialmedia_props.showAllMedia = /*showAllMedia*/
    ctx[1];
  }
  socialmedia = new SocialMedia_default({ props: socialmedia_props, $$inline: true });
  binding_callbacks.push(() => bind(socialmedia, "showAllMedia", socialmedia_showAllMedia_binding_1));
  const block = {
    c: function create() {
      create_component(socialmedia.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(socialmedia, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const socialmedia_changes = {};
      if (dirty & /*actualArticle*/
      32)
        socialmedia_changes.article = /*actualArticle*/
        ctx2[5];
      if (dirty & /*timelineProps*/
      4)
        socialmedia_changes.timelineProps = /*timelineProps*/
        ctx2[2];
      if (dirty & /*onMediaClick, actualArticle*/
      96)
        socialmedia_changes.onMediaClick = /*func_2*/
        ctx2[17];
      if (!updating_showAllMedia && dirty & /*showAllMedia*/
      2) {
        updating_showAllMedia = true;
        socialmedia_changes.showAllMedia = /*showAllMedia*/
        ctx2[1];
        add_flush_callback(() => updating_showAllMedia = false);
      }
      socialmedia.$set(socialmedia_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(socialmedia.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(socialmedia.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(socialmedia, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block5.name,
    type: "if",
    source: "(250:1) {#if actualArticle.medias.length && !minimized}",
    ctx
  });
  return block;
}
function create_fragment10(ctx) {
  let div5;
  let div0;
  let t0;
  let div4;
  let t1;
  let div3;
  let div2;
  let div1;
  let a;
  let strong;
  let t2_value = (
    /*actualArticle*/
    ctx[5].author?.name + ""
  );
  let t2;
  let t3;
  let small;
  let t4;
  let t5_value = (
    /*actualArticle*/
    ctx[5].author?.username + ""
  );
  let t5;
  let a_href_value;
  let t6;
  let t7;
  let t8;
  let t9;
  let socialnav;
  let updating_modal;
  let t10;
  let current;
  let mounted;
  let dispose;
  let if_block0 = (
    /*isArticleRepost*/
    ctx[10] && /*rootArticle*/
    ctx[4].author && create_if_block_11(ctx)
  );
  let if_block1 = (
    /*actualArticle*/
    ctx[5].author?.avatarUrl && create_if_block_9(ctx)
  );
  let if_block2 = (
    /*actualArticle*/
    ctx[5].creationTime !== void 0 && create_if_block_8(ctx)
  );
  let if_block3 = !/*timelineProps*/
  ctx[2].hideText && !/*minimized*/
  ctx[9] && create_if_block_5(ctx);
  let if_block4 = (
    /*articleProps*/
    ctx[3].type === "quote" && create_if_block_14(get_if_ctx(ctx))
  );
  function socialnav_modal_binding(value) {
    ctx[16](value);
  }
  let socialnav_props = {
    article: (
      /*actualArticle*/
      ctx[5]
    ),
    timelineProps: (
      /*timelineProps*/
      ctx[2]
    ),
    repost: (
      /*isArticleRepost*/
      ctx[10] ? (
        /*rootArticle*/
        ctx[4]
      ) : void 0
    ),
    onLogData: (
      /*onLogData*/
      ctx[7]
    ),
    onLogJSON: (
      /*onLogJSON*/
      ctx[8]
    )
  };
  if (
    /*modal*/
    ctx[0] !== void 0
  ) {
    socialnav_props.modal = /*modal*/
    ctx[0];
  }
  socialnav = new SocialNav_default({ props: socialnav_props, $$inline: true });
  binding_callbacks.push(() => bind(socialnav, "modal", socialnav_modal_binding));
  let if_block5 = (
    /*actualArticle*/
    ctx[5].medias.length && !/*minimized*/
    ctx[9] && create_if_block5(ctx)
  );
  const block = {
    c: function create() {
      div5 = element("div");
      div0 = element("div");
      if (if_block0)
        if_block0.c();
      t0 = space();
      div4 = element("div");
      if (if_block1)
        if_block1.c();
      t1 = space();
      div3 = element("div");
      div2 = element("div");
      div1 = element("div");
      a = element("a");
      strong = element("strong");
      t2 = text(t2_value);
      t3 = space();
      small = element("small");
      t4 = text("@");
      t5 = text(t5_value);
      t6 = space();
      if (if_block2)
        if_block2.c();
      t7 = space();
      if (if_block3)
        if_block3.c();
      t8 = space();
      if (if_block4)
        if_block4.c();
      t9 = space();
      create_component(socialnav.$$.fragment);
      t10 = space();
      if (if_block5)
        if_block5.c();
      attr_dev(div0, "class", "repostLabel svelte-40ngim");
      add_location(div0, file10, 152, 1, 2841);
      attr_dev(strong, "class", "svelte-40ngim");
      add_location(strong, file10, 185, 6, 4141);
      attr_dev(small, "class", "svelte-40ngim");
      add_location(small, file10, 186, 6, 4195);
      attr_dev(a, "class", "names svelte-40ngim");
      attr_dev(a, "href", a_href_value = /*actualArticle*/
      ctx[5].author?.url);
      attr_dev(a, "target", "_blank");
      attr_dev(a, "rel", "noreferrer");
      add_location(a, file10, 178, 5, 3952);
      attr_dev(div1, "class", "articleHeader svelte-40ngim");
      add_location(div1, file10, 177, 4, 3919);
      attr_dev(div2, "class", "content");
      add_location(div2, file10, 176, 3, 3893);
      attr_dev(div3, "class", "media-content svelte-40ngim");
      add_location(div3, file10, 175, 2, 3862);
      attr_dev(div4, "class", "media svelte-40ngim");
      add_location(div4, file10, 164, 1, 3374);
      attr_dev(div5, "class", "socialArticle svelte-40ngim");
      add_location(div5, file10, 151, 0, 2812);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div5, anchor);
      append_dev(div5, div0);
      if (if_block0)
        if_block0.m(div0, null);
      append_dev(div5, t0);
      append_dev(div5, div4);
      if (if_block1)
        if_block1.m(div4, null);
      append_dev(div4, t1);
      append_dev(div4, div3);
      append_dev(div3, div2);
      append_dev(div2, div1);
      append_dev(div1, a);
      append_dev(a, strong);
      append_dev(strong, t2);
      append_dev(a, t3);
      append_dev(a, small);
      append_dev(small, t4);
      append_dev(small, t5);
      append_dev(div1, t6);
      if (if_block2)
        if_block2.m(div1, null);
      append_dev(div2, t7);
      if (if_block3)
        if_block3.m(div2, null);
      append_dev(div3, t8);
      if (if_block4)
        if_block4.m(div3, null);
      append_dev(div3, t9);
      mount_component(socialnav, div3, null);
      append_dev(div5, t10);
      if (if_block5)
        if_block5.m(div5, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(a, "click", prevent_default(
          /*click_handler_1*/
          ctx[13]
        ), false, true, false, false);
        mounted = true;
      }
    },
    p: function update3(ctx2, [dirty]) {
      if (
        /*isArticleRepost*/
        ctx2[10] && /*rootArticle*/
        ctx2[4].author
      ) {
        if (if_block0) {
          if_block0.p(ctx2, dirty);
        } else {
          if_block0 = create_if_block_11(ctx2);
          if_block0.c();
          if_block0.m(div0, null);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      if (
        /*actualArticle*/
        ctx2[5].author?.avatarUrl
      ) {
        if (if_block1) {
          if_block1.p(ctx2, dirty);
        } else {
          if_block1 = create_if_block_9(ctx2);
          if_block1.c();
          if_block1.m(div4, t1);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
      if ((!current || dirty & /*actualArticle*/
      32) && t2_value !== (t2_value = /*actualArticle*/
      ctx2[5].author?.name + ""))
        set_data_dev(t2, t2_value);
      if ((!current || dirty & /*actualArticle*/
      32) && t5_value !== (t5_value = /*actualArticle*/
      ctx2[5].author?.username + ""))
        set_data_dev(t5, t5_value);
      if (!current || dirty & /*actualArticle*/
      32 && a_href_value !== (a_href_value = /*actualArticle*/
      ctx2[5].author?.url)) {
        attr_dev(a, "href", a_href_value);
      }
      if (
        /*actualArticle*/
        ctx2[5].creationTime !== void 0
      ) {
        if (if_block2) {
          if_block2.p(ctx2, dirty);
          if (dirty & /*actualArticle*/
          32) {
            transition_in(if_block2, 1);
          }
        } else {
          if_block2 = create_if_block_8(ctx2);
          if_block2.c();
          transition_in(if_block2, 1);
          if_block2.m(div1, null);
        }
      } else if (if_block2) {
        group_outros();
        transition_out(if_block2, 1, 1, () => {
          if_block2 = null;
        });
        check_outros();
      }
      if (!/*timelineProps*/
      ctx2[2].hideText && !/*minimized*/
      ctx2[9]) {
        if (if_block3) {
          if_block3.p(ctx2, dirty);
        } else {
          if_block3 = create_if_block_5(ctx2);
          if_block3.c();
          if_block3.m(div2, null);
        }
      } else if (if_block3) {
        if_block3.d(1);
        if_block3 = null;
      }
      if (
        /*articleProps*/
        ctx2[3].type === "quote"
      ) {
        if (if_block4) {
          if_block4.p(get_if_ctx(ctx2), dirty);
          if (dirty & /*articleProps*/
          8) {
            transition_in(if_block4, 1);
          }
        } else {
          if_block4 = create_if_block_14(get_if_ctx(ctx2));
          if_block4.c();
          transition_in(if_block4, 1);
          if_block4.m(div3, t9);
        }
      } else if (if_block4) {
        group_outros();
        transition_out(if_block4, 1, 1, () => {
          if_block4 = null;
        });
        check_outros();
      }
      const socialnav_changes = {};
      if (dirty & /*actualArticle*/
      32)
        socialnav_changes.article = /*actualArticle*/
        ctx2[5];
      if (dirty & /*timelineProps*/
      4)
        socialnav_changes.timelineProps = /*timelineProps*/
        ctx2[2];
      if (dirty & /*rootArticle*/
      16)
        socialnav_changes.repost = /*isArticleRepost*/
        ctx2[10] ? (
          /*rootArticle*/
          ctx2[4]
        ) : void 0;
      if (dirty & /*onLogData*/
      128)
        socialnav_changes.onLogData = /*onLogData*/
        ctx2[7];
      if (dirty & /*onLogJSON*/
      256)
        socialnav_changes.onLogJSON = /*onLogJSON*/
        ctx2[8];
      if (!updating_modal && dirty & /*modal*/
      1) {
        updating_modal = true;
        socialnav_changes.modal = /*modal*/
        ctx2[0];
        add_flush_callback(() => updating_modal = false);
      }
      socialnav.$set(socialnav_changes);
      if (
        /*actualArticle*/
        ctx2[5].medias.length && !/*minimized*/
        ctx2[9]
      ) {
        if (if_block5) {
          if_block5.p(ctx2, dirty);
          if (dirty & /*actualArticle*/
          32) {
            transition_in(if_block5, 1);
          }
        } else {
          if_block5 = create_if_block5(ctx2);
          if_block5.c();
          transition_in(if_block5, 1);
          if_block5.m(div5, null);
        }
      } else if (if_block5) {
        group_outros();
        transition_out(if_block5, 1, 1, () => {
          if_block5 = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block2);
      transition_in(if_block4);
      transition_in(socialnav.$$.fragment, local);
      transition_in(if_block5);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block2);
      transition_out(if_block4);
      transition_out(socialnav.$$.fragment, local);
      transition_out(if_block5);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div5);
      if (if_block0)
        if_block0.d();
      if (if_block1)
        if_block1.d();
      if (if_block2)
        if_block2.d();
      if (if_block3)
        if_block3.d();
      if (if_block4)
        if_block4.d();
      destroy_component(socialnav);
      if (if_block5)
        if_block5.d();
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment10.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
var func = (r) => r.author.name;
function instance10($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("SocialArticleView", slots, []);
  let { timelineProps } = $$props;
  let { articleProps } = $$props;
  let { modal } = $$props;
  modal;
  let { showAllMedia } = $$props;
  let { rootArticle } = $$props;
  let { actualArticle } = $$props;
  let { onMediaClick } = $$props;
  let { onLogData } = $$props;
  let { onLogJSON } = $$props;
  let minimized = false;
  const isArticleRepost = articleProps.type === "reposts";
  function onUsernameClick(clickedArticle) {
    if (!clickedArticle.author)
      return;
    const data = newUserTimeline(clickedArticle.idPair.service, clickedArticle.author);
    if (!data)
      return;
    timelineProps.setModalTimeline(data);
  }
  $$self.$$.on_mount.push(function() {
    if (timelineProps === void 0 && !("timelineProps" in $$props || $$self.$$.bound[$$self.$$.props["timelineProps"]])) {
      console.warn("<SocialArticleView> was created without expected prop 'timelineProps'");
    }
    if (articleProps === void 0 && !("articleProps" in $$props || $$self.$$.bound[$$self.$$.props["articleProps"]])) {
      console.warn("<SocialArticleView> was created without expected prop 'articleProps'");
    }
    if (modal === void 0 && !("modal" in $$props || $$self.$$.bound[$$self.$$.props["modal"]])) {
      console.warn("<SocialArticleView> was created without expected prop 'modal'");
    }
    if (showAllMedia === void 0 && !("showAllMedia" in $$props || $$self.$$.bound[$$self.$$.props["showAllMedia"]])) {
      console.warn("<SocialArticleView> was created without expected prop 'showAllMedia'");
    }
    if (rootArticle === void 0 && !("rootArticle" in $$props || $$self.$$.bound[$$self.$$.props["rootArticle"]])) {
      console.warn("<SocialArticleView> was created without expected prop 'rootArticle'");
    }
    if (actualArticle === void 0 && !("actualArticle" in $$props || $$self.$$.bound[$$self.$$.props["actualArticle"]])) {
      console.warn("<SocialArticleView> was created without expected prop 'actualArticle'");
    }
    if (onMediaClick === void 0 && !("onMediaClick" in $$props || $$self.$$.bound[$$self.$$.props["onMediaClick"]])) {
      console.warn("<SocialArticleView> was created without expected prop 'onMediaClick'");
    }
    if (onLogData === void 0 && !("onLogData" in $$props || $$self.$$.bound[$$self.$$.props["onLogData"]])) {
      console.warn("<SocialArticleView> was created without expected prop 'onLogData'");
    }
    if (onLogJSON === void 0 && !("onLogJSON" in $$props || $$self.$$.bound[$$self.$$.props["onLogJSON"]])) {
      console.warn("<SocialArticleView> was created without expected prop 'onLogJSON'");
    }
  });
  const writable_props = [
    "timelineProps",
    "articleProps",
    "modal",
    "showAllMedia",
    "rootArticle",
    "actualArticle",
    "onMediaClick",
    "onLogData",
    "onLogJSON"
  ];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<SocialArticleView> was created with unknown prop '${key}'`);
  });
  const click_handler = () => onUsernameClick(rootArticle);
  const click_handler_1 = () => onUsernameClick(actualArticle);
  const func_1 = (index) => onMediaClick(actualArticle.idPair, index);
  function socialmedia_showAllMedia_binding(value) {
    showAllMedia = value;
    $$invalidate(1, showAllMedia);
  }
  function socialnav_modal_binding(value) {
    modal = value;
    $$invalidate(0, modal);
  }
  const func_2 = (index) => onMediaClick(actualArticle.idPair, index);
  function socialmedia_showAllMedia_binding_1(value) {
    showAllMedia = value;
    $$invalidate(1, showAllMedia);
  }
  $$self.$$set = ($$props2) => {
    if ("timelineProps" in $$props2)
      $$invalidate(2, timelineProps = $$props2.timelineProps);
    if ("articleProps" in $$props2)
      $$invalidate(3, articleProps = $$props2.articleProps);
    if ("modal" in $$props2)
      $$invalidate(0, modal = $$props2.modal);
    if ("showAllMedia" in $$props2)
      $$invalidate(1, showAllMedia = $$props2.showAllMedia);
    if ("rootArticle" in $$props2)
      $$invalidate(4, rootArticle = $$props2.rootArticle);
    if ("actualArticle" in $$props2)
      $$invalidate(5, actualArticle = $$props2.actualArticle);
    if ("onMediaClick" in $$props2)
      $$invalidate(6, onMediaClick = $$props2.onMediaClick);
    if ("onLogData" in $$props2)
      $$invalidate(7, onLogData = $$props2.onLogData);
    if ("onLogJSON" in $$props2)
      $$invalidate(8, onLogJSON = $$props2.onLogJSON);
  };
  $$self.$capture_state = () => ({
    Article,
    shortTimestamp,
    SocialMedia: SocialMedia_default,
    SocialNav: SocialNav_default,
    Timestamp: Timestamp_default,
    newUserTimeline,
    timelineProps,
    articleProps,
    modal,
    showAllMedia,
    rootArticle,
    actualArticle,
    onMediaClick,
    onLogData,
    onLogJSON,
    minimized,
    isArticleRepost,
    onUsernameClick
  });
  $$self.$inject_state = ($$props2) => {
    if ("timelineProps" in $$props2)
      $$invalidate(2, timelineProps = $$props2.timelineProps);
    if ("articleProps" in $$props2)
      $$invalidate(3, articleProps = $$props2.articleProps);
    if ("modal" in $$props2)
      $$invalidate(0, modal = $$props2.modal);
    if ("showAllMedia" in $$props2)
      $$invalidate(1, showAllMedia = $$props2.showAllMedia);
    if ("rootArticle" in $$props2)
      $$invalidate(4, rootArticle = $$props2.rootArticle);
    if ("actualArticle" in $$props2)
      $$invalidate(5, actualArticle = $$props2.actualArticle);
    if ("onMediaClick" in $$props2)
      $$invalidate(6, onMediaClick = $$props2.onMediaClick);
    if ("onLogData" in $$props2)
      $$invalidate(7, onLogData = $$props2.onLogData);
    if ("onLogJSON" in $$props2)
      $$invalidate(8, onLogJSON = $$props2.onLogJSON);
    if ("minimized" in $$props2)
      $$invalidate(9, minimized = $$props2.minimized);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    modal,
    showAllMedia,
    timelineProps,
    articleProps,
    rootArticle,
    actualArticle,
    onMediaClick,
    onLogData,
    onLogJSON,
    minimized,
    isArticleRepost,
    onUsernameClick,
    click_handler,
    click_handler_1,
    func_1,
    socialmedia_showAllMedia_binding,
    socialnav_modal_binding,
    func_2,
    socialmedia_showAllMedia_binding_1
  ];
}
var SocialArticleView = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance10, create_fragment10, safe_not_equal, {
      timelineProps: 2,
      articleProps: 3,
      modal: 0,
      showAllMedia: 1,
      rootArticle: 4,
      actualArticle: 5,
      onMediaClick: 6,
      onLogData: 7,
      onLogJSON: 8
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "SocialArticleView",
      options,
      id: create_fragment10.name
    });
  }
  get timelineProps() {
    throw new Error("<SocialArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineProps(value) {
    throw new Error("<SocialArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get articleProps() {
    throw new Error("<SocialArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set articleProps(value) {
    throw new Error("<SocialArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get modal() {
    throw new Error("<SocialArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set modal(value) {
    throw new Error("<SocialArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get showAllMedia() {
    throw new Error("<SocialArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set showAllMedia(value) {
    throw new Error("<SocialArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get rootArticle() {
    throw new Error("<SocialArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set rootArticle(value) {
    throw new Error("<SocialArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get actualArticle() {
    throw new Error("<SocialArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set actualArticle(value) {
    throw new Error("<SocialArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get onMediaClick() {
    throw new Error("<SocialArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set onMediaClick(value) {
    throw new Error("<SocialArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get onLogData() {
    throw new Error("<SocialArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set onLogData(value) {
    throw new Error("<SocialArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get onLogJSON() {
    throw new Error("<SocialArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set onLogJSON(value) {
    throw new Error("<SocialArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var SocialArticleView_default = SocialArticleView;

// src/bufferedMediaLoading.ts
function hash(idPair, mediaIndex) {
  return JSON.stringify({ ...idPair, mediaIndex });
}
var maxLoading = 5;
var LoadingState = /* @__PURE__ */ ((LoadingState2) => {
  LoadingState2[LoadingState2["NotLoaded"] = 0] = "NotLoaded";
  LoadingState2[LoadingState2["Loading"] = 1] = "Loading";
  LoadingState2[LoadingState2["Loaded"] = 2] = "Loaded";
  return LoadingState2;
})(LoadingState || {});
var loadingStore = (() => {
  const { subscribe: subscribe3, update: update3 } = writable({
    loadings: /* @__PURE__ */ new Set(),
    queue: []
  });
  let localLoadings = /* @__PURE__ */ new Set();
  let localQueue = [];
  return {
    subscribe: subscribe3,
    requestLoad(idPair, mediaIndex) {
      if (localLoadings.size >= maxLoading) {
        update3((store) => {
          const idPairStr = hash(idPair, mediaIndex);
          if (!store.queue.includes(idPairStr))
            store.queue.push(idPairStr);
          localQueue = store.queue;
          return store;
        });
        return 0 /* NotLoaded */;
      }
      update3((store) => {
        store.loadings.add(hash(idPair, mediaIndex));
        localLoadings = store.loadings;
        return store;
      });
      return 1 /* Loading */;
    },
    getLoadingState(idPair, mediaIndex, request = false) {
      const idPairStr = hash(idPair, mediaIndex);
      if (localLoadings.has(idPairStr))
        return 1 /* Loading */;
      if (localQueue.includes(idPairStr))
        return 0 /* NotLoaded */;
      const loaded = get_store_value(getWritable(idPair)).medias[mediaIndex].loaded;
      if (loaded === void 0 || loaded)
        return 2 /* Loaded */;
      else if (request) {
        return this.requestLoad(idPair, mediaIndex);
      } else
        return 0 /* NotLoaded */;
    },
    mediaLoaded(idPair, mediaIndex) {
      update3((store) => {
        getWritable(idPair).update((a) => {
          a.medias[mediaIndex].loaded = true;
          return a;
        });
        const idPairStr = hash(idPair, mediaIndex);
        store.loadings.delete(idPairStr);
        const index = store.queue.findIndex((str) => str === idPairStr);
        if (index != -1)
          store.queue.splice(index, 1);
        if (store.queue.length)
          store.loadings.add(store.queue.shift());
        localLoadings = store.loadings;
        localQueue = store.queue;
        return store;
      });
    },
    forceLoading(article, mediaIndex) {
      if (article.medias[mediaIndex].loaded === void 0 || article.medias[mediaIndex].loaded)
        return;
      update3((store) => {
        const idPairStr = hash(article.idPair, mediaIndex);
        store.loadings.add(idPairStr);
        const index = store.queue.findIndex((str) => str === idPairStr);
        if (index != -1)
          store.queue.splice(index, 1);
        localLoadings = store.loadings;
        localQueue = store.queue;
        return store;
      });
    },
    remove(idPair, mediaIndex) {
      update3((store) => {
        const idPairStr = hash(idPair, mediaIndex);
        store.loadings.delete(idPairStr);
        const index = store.queue.findIndex((str) => str === idPairStr);
        if (index != -1)
          store.queue.splice(index, 1);
        localLoadings = store.loadings;
        localQueue = store.queue;
        return store;
      });
    },
    clearLoadings() {
      update3((store) => {
        store.loadings.clear();
        while (store.loadings.size < maxLoading && store.queue.length)
          store.loadings.add(store.queue.shift());
        localLoadings = store.loadings;
        localQueue = store.queue;
        return store;
      });
    },
    clearQueue() {
      update3((store) => {
        store.queue = [];
        localQueue = store.queue;
        return store;
      });
    }
  };
})();

// src/articles/gallery/GalleryThumbnail.svelte
var file11 = "src/articles/gallery/GalleryThumbnail.svelte";
function create_else_block_12(ctx) {
  let div;
  const block = {
    c: function create() {
      div = element("div");
      attr_dev(div, "class", "imgPlaceHolder svelte-1vo5g6t");
      set_style(div, "aspect-ratio", 1 / /*media*/
      ctx[2].ratio);
      add_location(div, file11, 51, 1, 1236);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*media*/
      4) {
        set_style(div, "aspect-ratio", 1 / /*media*/
        ctx2[2].ratio);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block_12.name,
    type: "else",
    source: "(51:0) {:else}",
    ctx
  });
  return block;
}
function create_if_block6(ctx) {
  let if_block_anchor;
  function select_block_type_1(ctx2, dirty) {
    if (
      /*cropped*/
      ctx2[4]
    )
      return create_if_block_15;
    return create_else_block4;
  }
  let current_block_type = select_block_type_1(ctx, -1);
  let if_block = current_block_type(ctx);
  const block = {
    c: function create() {
      if_block.c();
      if_block_anchor = empty();
    },
    m: function mount(target, anchor) {
      if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if_block.p(ctx2, dirty);
    },
    d: function destroy(detaching) {
      if_block.d(detaching);
      if (detaching)
        detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block6.name,
    type: "if",
    source: "(29:0) {#if hasThumbnail}",
    ctx
  });
  return block;
}
function create_else_block4(ctx) {
  let img;
  let img_alt_value;
  let img_src_value;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      img = element("img");
      attr_dev(img, "alt", img_alt_value = `${/*actualArticle*/
      ctx[0].idPair.id}/${/*mediaIndex*/
      ctx[1]} thumbnail`);
      attr_dev(img, "class", "articleThumb articleMedia svelte-1vo5g6t");
      if (!src_url_equal(img.src, img_src_value = /*media*/
      ctx[2].thumbnail.src))
        attr_dev(img, "src", img_src_value);
      add_location(img, file11, 43, 2, 1015);
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor);
      if (!mounted) {
        dispose = listen_dev(
          img,
          "click",
          /*click_handler_1*/
          ctx[7],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*actualArticle, mediaIndex*/
      3 && img_alt_value !== (img_alt_value = `${/*actualArticle*/
      ctx2[0].idPair.id}/${/*mediaIndex*/
      ctx2[1]} thumbnail`)) {
        attr_dev(img, "alt", img_alt_value);
      }
      if (dirty & /*media*/
      4 && !src_url_equal(img.src, img_src_value = /*media*/
      ctx2[2].thumbnail.src)) {
        attr_dev(img, "src", img_src_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(img);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block4.name,
    type: "else",
    source: "(43:1) {:else}",
    ctx
  });
  return block;
}
function create_if_block_15(ctx) {
  let div;
  let img;
  let img_alt_value;
  let img_src_value;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      div = element("div");
      img = element("img");
      attr_dev(img, "alt", img_alt_value = `${/*actualArticle*/
      ctx[0].idPair.id}/${/*mediaIndex*/
      ctx[1]} thumbnail`);
      attr_dev(img, "class", "articleThumb articleMedia svelte-1vo5g6t");
      if (!src_url_equal(img.src, img_src_value = /*media*/
      ctx[2].thumbnail.src))
        attr_dev(img, "src", img_src_value);
      set_style(img, "object-fit", "cover");
      set_style(img, "object-position", `${/*media*/
      ctx[2].thumbnail.offsetX ?? 0} ${/*media*/
      ctx[2].thumbnail.offsetY ?? 0}`);
      set_style(img, "aspect-ratio", `1 / ${/*media*/
      ctx[2].thumbnail.ratio}`);
      set_style(img, "width", "100%");
      add_location(img, file11, 31, 3, 579);
      attr_dev(div, "class", "articleMediaCrop svelte-1vo5g6t");
      set_style(div, "aspect-ratio", `${/*media*/
      ctx[2].thumbnail.cropRatio}`);
      add_location(div, file11, 30, 2, 493);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, img);
      if (!mounted) {
        dispose = listen_dev(
          img,
          "click",
          /*click_handler*/
          ctx[6],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*actualArticle, mediaIndex*/
      3 && img_alt_value !== (img_alt_value = `${/*actualArticle*/
      ctx2[0].idPair.id}/${/*mediaIndex*/
      ctx2[1]} thumbnail`)) {
        attr_dev(img, "alt", img_alt_value);
      }
      if (dirty & /*media*/
      4 && !src_url_equal(img.src, img_src_value = /*media*/
      ctx2[2].thumbnail.src)) {
        attr_dev(img, "src", img_src_value);
      }
      if (dirty & /*media*/
      4) {
        set_style(img, "object-position", `${/*media*/
        ctx2[2].thumbnail.offsetX ?? 0} ${/*media*/
        ctx2[2].thumbnail.offsetY ?? 0}`);
      }
      if (dirty & /*media*/
      4) {
        set_style(img, "aspect-ratio", `1 / ${/*media*/
        ctx2[2].thumbnail.ratio}`);
      }
      if (dirty & /*media*/
      4) {
        set_style(div, "aspect-ratio", `${/*media*/
        ctx2[2].thumbnail.cropRatio}`);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_15.name,
    type: "if",
    source: "(30:1) {#if cropped}",
    ctx
  });
  return block;
}
function create_fragment11(ctx) {
  let if_block_anchor;
  function select_block_type(ctx2, dirty) {
    if (
      /*hasThumbnail*/
      ctx2[5]
    )
      return create_if_block6;
    return create_else_block_12;
  }
  let current_block_type = select_block_type(ctx, -1);
  let if_block = current_block_type(ctx);
  const block = {
    c: function create() {
      if_block.c();
      if_block_anchor = empty();
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
    },
    p: function update3(ctx2, [dirty]) {
      if_block.p(ctx2, dirty);
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if_block.d(detaching);
      if (detaching)
        detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment11.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance11($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("GalleryThumbnail", slots, []);
  let { actualArticle } = $$props;
  let { mediaIndex } = $$props;
  let { media } = $$props;
  let { onMediaClick } = $$props;
  const cropped = !!(media.thumbnail?.offsetX || media.thumbnail?.offsetY);
  const hasThumbnail = !!media.thumbnail;
  $$self.$$.on_mount.push(function() {
    if (actualArticle === void 0 && !("actualArticle" in $$props || $$self.$$.bound[$$self.$$.props["actualArticle"]])) {
      console.warn("<GalleryThumbnail> was created without expected prop 'actualArticle'");
    }
    if (mediaIndex === void 0 && !("mediaIndex" in $$props || $$self.$$.bound[$$self.$$.props["mediaIndex"]])) {
      console.warn("<GalleryThumbnail> was created without expected prop 'mediaIndex'");
    }
    if (media === void 0 && !("media" in $$props || $$self.$$.bound[$$self.$$.props["media"]])) {
      console.warn("<GalleryThumbnail> was created without expected prop 'media'");
    }
    if (onMediaClick === void 0 && !("onMediaClick" in $$props || $$self.$$.bound[$$self.$$.props["onMediaClick"]])) {
      console.warn("<GalleryThumbnail> was created without expected prop 'onMediaClick'");
    }
  });
  const writable_props = ["actualArticle", "mediaIndex", "media", "onMediaClick"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<GalleryThumbnail> was created with unknown prop '${key}'`);
  });
  const click_handler = () => onMediaClick(actualArticle.idPair, mediaIndex);
  const click_handler_1 = () => onMediaClick(actualArticle.idPair, mediaIndex);
  $$self.$$set = ($$props2) => {
    if ("actualArticle" in $$props2)
      $$invalidate(0, actualArticle = $$props2.actualArticle);
    if ("mediaIndex" in $$props2)
      $$invalidate(1, mediaIndex = $$props2.mediaIndex);
    if ("media" in $$props2)
      $$invalidate(2, media = $$props2.media);
    if ("onMediaClick" in $$props2)
      $$invalidate(3, onMediaClick = $$props2.onMediaClick);
  };
  $$self.$capture_state = () => ({
    Article,
    actualArticle,
    mediaIndex,
    media,
    onMediaClick,
    cropped,
    hasThumbnail
  });
  $$self.$inject_state = ($$props2) => {
    if ("actualArticle" in $$props2)
      $$invalidate(0, actualArticle = $$props2.actualArticle);
    if ("mediaIndex" in $$props2)
      $$invalidate(1, mediaIndex = $$props2.mediaIndex);
    if ("media" in $$props2)
      $$invalidate(2, media = $$props2.media);
    if ("onMediaClick" in $$props2)
      $$invalidate(3, onMediaClick = $$props2.onMediaClick);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    actualArticle,
    mediaIndex,
    media,
    onMediaClick,
    cropped,
    hasThumbnail,
    click_handler,
    click_handler_1
  ];
}
var GalleryThumbnail = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance11, create_fragment11, safe_not_equal, {
      actualArticle: 0,
      mediaIndex: 1,
      media: 2,
      onMediaClick: 3
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "GalleryThumbnail",
      options,
      id: create_fragment11.name
    });
  }
  get actualArticle() {
    throw new Error("<GalleryThumbnail>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set actualArticle(value) {
    throw new Error("<GalleryThumbnail>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get mediaIndex() {
    throw new Error("<GalleryThumbnail>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set mediaIndex(value) {
    throw new Error("<GalleryThumbnail>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get media() {
    throw new Error("<GalleryThumbnail>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set media(value) {
    throw new Error("<GalleryThumbnail>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get onMediaClick() {
    throw new Error("<GalleryThumbnail>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set onMediaClick(value) {
    throw new Error("<GalleryThumbnail>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var GalleryThumbnail_default = GalleryThumbnail;

// src/articles/gallery/GalleryImage.svelte
var file12 = "src/articles/gallery/GalleryImage.svelte";
function create_else_block5(ctx) {
  let img;
  let img_alt_value;
  let img_src_value;
  let t;
  let if_block_anchor;
  let current;
  let mounted;
  let dispose;
  let if_block = (
    /*isLoading*/
    ctx[5] && create_if_block_24(ctx)
  );
  const block = {
    c: function create() {
      img = element("img");
      t = space();
      if (if_block)
        if_block.c();
      if_block_anchor = empty();
      attr_dev(img, "alt", img_alt_value = `${/*actualArticle*/
      ctx[1].idPair.id}/${/*mediaIndex*/
      ctx[2]}`);
      attr_dev(img, "class", "articleMedia svelte-1snbq1g");
      if (!src_url_equal(img.src, img_src_value = /*media*/
      ctx[3].src))
        attr_dev(img, "src", img_src_value);
      toggle_class(
        img,
        "articleMediaLoading",
        /*isLoading*/
        ctx[5]
      );
      add_location(img, file12, 53, 1, 1269);
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor);
      ctx[12](img);
      insert_dev(target, t, anchor);
      if (if_block)
        if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
      if (!mounted) {
        dispose = [
          listen_dev(
            img,
            "click",
            /*click_handler_1*/
            ctx[10],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            img,
            "load",
            /*load_handler_1*/
            ctx[11],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (!current || dirty & /*actualArticle, mediaIndex*/
      6 && img_alt_value !== (img_alt_value = `${/*actualArticle*/
      ctx2[1].idPair.id}/${/*mediaIndex*/
      ctx2[2]}`)) {
        attr_dev(img, "alt", img_alt_value);
      }
      if (!current || dirty & /*media*/
      8 && !src_url_equal(img.src, img_src_value = /*media*/
      ctx2[3].src)) {
        attr_dev(img, "src", img_src_value);
      }
      if (!current || dirty & /*isLoading*/
      32) {
        toggle_class(
          img,
          "articleMediaLoading",
          /*isLoading*/
          ctx2[5]
        );
      }
      if (
        /*isLoading*/
        ctx2[5]
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
          if (dirty & /*isLoading*/
          32) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block_24(ctx2);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(img);
      ctx[12](null);
      if (detaching)
        detach_dev(t);
      if (if_block)
        if_block.d(detaching);
      if (detaching)
        detach_dev(if_block_anchor);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block5.name,
    type: "else",
    source: "(53:0) {:else}",
    ctx
  });
  return block;
}
function create_if_block7(ctx) {
  let div;
  let img;
  let img_alt_value;
  let img_src_value;
  let t;
  let current;
  let mounted;
  let dispose;
  let if_block = (
    /*isLoading*/
    ctx[5] && create_if_block_16(ctx)
  );
  const block = {
    c: function create() {
      div = element("div");
      img = element("img");
      t = space();
      if (if_block)
        if_block.c();
      attr_dev(img, "alt", img_alt_value = `${/*actualArticle*/
      ctx[1].idPair.id}/${/*mediaIndex*/
      ctx[2]}`);
      attr_dev(img, "class", "articleMedia svelte-1snbq1g");
      if (!src_url_equal(img.src, img_src_value = /*media*/
      ctx[3].src))
        attr_dev(img, "src", img_src_value);
      toggle_class(
        img,
        "articleMediaLoading",
        /*isLoading*/
        ctx[5]
      );
      set_style(img, "object-fit", "cover");
      set_style(img, "object-position", `${/*media*/
      ctx[3].offsetX ?? 0} ${/*media*/
      ctx[3].offsetY ?? 0}`);
      set_style(img, "aspect-ratio", `1 / ${/*media*/
      ctx[3].ratio}`);
      set_style(img, "width", "100%");
      add_location(img, file12, 30, 2, 614);
      attr_dev(div, "class", "articleMediaCrop svelte-1snbq1g");
      set_style(div, "aspect-ratio", `${/*media*/
      ctx[3].cropRatio}`);
      add_location(div, file12, 29, 1, 539);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, img);
      ctx[9](img);
      append_dev(div, t);
      if (if_block)
        if_block.m(div, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen_dev(
            img,
            "click",
            /*click_handler*/
            ctx[7],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            img,
            "load",
            /*load_handler*/
            ctx[8],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (!current || dirty & /*actualArticle, mediaIndex*/
      6 && img_alt_value !== (img_alt_value = `${/*actualArticle*/
      ctx2[1].idPair.id}/${/*mediaIndex*/
      ctx2[2]}`)) {
        attr_dev(img, "alt", img_alt_value);
      }
      if (!current || dirty & /*media*/
      8 && !src_url_equal(img.src, img_src_value = /*media*/
      ctx2[3].src)) {
        attr_dev(img, "src", img_src_value);
      }
      if (!current || dirty & /*isLoading*/
      32) {
        toggle_class(
          img,
          "articleMediaLoading",
          /*isLoading*/
          ctx2[5]
        );
      }
      if (dirty & /*media*/
      8) {
        set_style(img, "object-position", `${/*media*/
        ctx2[3].offsetX ?? 0} ${/*media*/
        ctx2[3].offsetY ?? 0}`);
      }
      if (dirty & /*media*/
      8) {
        set_style(img, "aspect-ratio", `1 / ${/*media*/
        ctx2[3].ratio}`);
      }
      if (
        /*isLoading*/
        ctx2[5]
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
          if (dirty & /*isLoading*/
          32) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block_16(ctx2);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(div, null);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
      if (dirty & /*media*/
      8) {
        set_style(div, "aspect-ratio", `${/*media*/
        ctx2[3].cropRatio}`);
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      ctx[9](null);
      if (if_block)
        if_block.d();
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block7.name,
    type: "if",
    source: "(29:0) {#if cropped}",
    ctx
  });
  return block;
}
function create_if_block_24(ctx) {
  let gallerythumbnail;
  let current;
  gallerythumbnail = new GalleryThumbnail_default({
    props: {
      actualArticle: (
        /*actualArticle*/
        ctx[1]
      ),
      mediaIndex: (
        /*mediaIndex*/
        ctx[2]
      ),
      media: (
        /*media*/
        ctx[3]
      ),
      onMediaClick: (
        /*onMediaClick*/
        ctx[4]
      )
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      create_component(gallerythumbnail.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(gallerythumbnail, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const gallerythumbnail_changes = {};
      if (dirty & /*actualArticle*/
      2)
        gallerythumbnail_changes.actualArticle = /*actualArticle*/
        ctx2[1];
      if (dirty & /*mediaIndex*/
      4)
        gallerythumbnail_changes.mediaIndex = /*mediaIndex*/
        ctx2[2];
      if (dirty & /*media*/
      8)
        gallerythumbnail_changes.media = /*media*/
        ctx2[3];
      if (dirty & /*onMediaClick*/
      16)
        gallerythumbnail_changes.onMediaClick = /*onMediaClick*/
        ctx2[4];
      gallerythumbnail.$set(gallerythumbnail_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(gallerythumbnail.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(gallerythumbnail.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(gallerythumbnail, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_24.name,
    type: "if",
    source: "(63:1) {#if isLoading}",
    ctx
  });
  return block;
}
function create_if_block_16(ctx) {
  let gallerythumbnail;
  let current;
  gallerythumbnail = new GalleryThumbnail_default({
    props: {
      actualArticle: (
        /*actualArticle*/
        ctx[1]
      ),
      mediaIndex: (
        /*mediaIndex*/
        ctx[2]
      ),
      media: (
        /*media*/
        ctx[3]
      ),
      onMediaClick: (
        /*onMediaClick*/
        ctx[4]
      )
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      create_component(gallerythumbnail.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(gallerythumbnail, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const gallerythumbnail_changes = {};
      if (dirty & /*actualArticle*/
      2)
        gallerythumbnail_changes.actualArticle = /*actualArticle*/
        ctx2[1];
      if (dirty & /*mediaIndex*/
      4)
        gallerythumbnail_changes.mediaIndex = /*mediaIndex*/
        ctx2[2];
      if (dirty & /*media*/
      8)
        gallerythumbnail_changes.media = /*media*/
        ctx2[3];
      if (dirty & /*onMediaClick*/
      16)
        gallerythumbnail_changes.onMediaClick = /*onMediaClick*/
        ctx2[4];
      gallerythumbnail.$set(gallerythumbnail_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(gallerythumbnail.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(gallerythumbnail.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(gallerythumbnail, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_16.name,
    type: "if",
    source: "(44:2) {#if isLoading}",
    ctx
  });
  return block;
}
function create_fragment12(ctx) {
  let current_block_type_index;
  let if_block;
  let if_block_anchor;
  let current;
  const if_block_creators = [create_if_block7, create_else_block5];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (
      /*cropped*/
      ctx2[6]
    )
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx, -1);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  const block = {
    c: function create() {
      if_block.c();
      if_block_anchor = empty();
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      if_blocks[current_block_type_index].m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update3(ctx2, [dirty]) {
      if_block.p(ctx2, dirty);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if_blocks[current_block_type_index].d(detaching);
      if (detaching)
        detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment12.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance12($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("GalleryImage", slots, []);
  let { actualArticle } = $$props;
  let { mediaIndex } = $$props;
  let { media } = $$props;
  let { onMediaClick } = $$props;
  let { isLoading } = $$props;
  let { ref } = $$props;
  const cropped = !!(media.offsetX || media.offsetY);
  $$self.$$.on_mount.push(function() {
    if (actualArticle === void 0 && !("actualArticle" in $$props || $$self.$$.bound[$$self.$$.props["actualArticle"]])) {
      console.warn("<GalleryImage> was created without expected prop 'actualArticle'");
    }
    if (mediaIndex === void 0 && !("mediaIndex" in $$props || $$self.$$.bound[$$self.$$.props["mediaIndex"]])) {
      console.warn("<GalleryImage> was created without expected prop 'mediaIndex'");
    }
    if (media === void 0 && !("media" in $$props || $$self.$$.bound[$$self.$$.props["media"]])) {
      console.warn("<GalleryImage> was created without expected prop 'media'");
    }
    if (onMediaClick === void 0 && !("onMediaClick" in $$props || $$self.$$.bound[$$self.$$.props["onMediaClick"]])) {
      console.warn("<GalleryImage> was created without expected prop 'onMediaClick'");
    }
    if (isLoading === void 0 && !("isLoading" in $$props || $$self.$$.bound[$$self.$$.props["isLoading"]])) {
      console.warn("<GalleryImage> was created without expected prop 'isLoading'");
    }
    if (ref === void 0 && !("ref" in $$props || $$self.$$.bound[$$self.$$.props["ref"]])) {
      console.warn("<GalleryImage> was created without expected prop 'ref'");
    }
  });
  const writable_props = ["actualArticle", "mediaIndex", "media", "onMediaClick", "isLoading", "ref"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<GalleryImage> was created with unknown prop '${key}'`);
  });
  const click_handler = () => onMediaClick(actualArticle.idPair, mediaIndex);
  const load_handler = () => isLoading ? loadingStore.mediaLoaded(actualArticle.idPair, mediaIndex) : void 0;
  function img_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      ref = $$value;
      $$invalidate(0, ref);
    });
  }
  const click_handler_1 = () => onMediaClick(actualArticle.idPair, mediaIndex);
  const load_handler_1 = () => isLoading ? loadingStore.mediaLoaded(actualArticle.idPair, mediaIndex) : void 0;
  function img_binding_1($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      ref = $$value;
      $$invalidate(0, ref);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("actualArticle" in $$props2)
      $$invalidate(1, actualArticle = $$props2.actualArticle);
    if ("mediaIndex" in $$props2)
      $$invalidate(2, mediaIndex = $$props2.mediaIndex);
    if ("media" in $$props2)
      $$invalidate(3, media = $$props2.media);
    if ("onMediaClick" in $$props2)
      $$invalidate(4, onMediaClick = $$props2.onMediaClick);
    if ("isLoading" in $$props2)
      $$invalidate(5, isLoading = $$props2.isLoading);
    if ("ref" in $$props2)
      $$invalidate(0, ref = $$props2.ref);
  };
  $$self.$capture_state = () => ({
    Article,
    loadingStore,
    GalleryThumbnail: GalleryThumbnail_default,
    actualArticle,
    mediaIndex,
    media,
    onMediaClick,
    isLoading,
    ref,
    cropped
  });
  $$self.$inject_state = ($$props2) => {
    if ("actualArticle" in $$props2)
      $$invalidate(1, actualArticle = $$props2.actualArticle);
    if ("mediaIndex" in $$props2)
      $$invalidate(2, mediaIndex = $$props2.mediaIndex);
    if ("media" in $$props2)
      $$invalidate(3, media = $$props2.media);
    if ("onMediaClick" in $$props2)
      $$invalidate(4, onMediaClick = $$props2.onMediaClick);
    if ("isLoading" in $$props2)
      $$invalidate(5, isLoading = $$props2.isLoading);
    if ("ref" in $$props2)
      $$invalidate(0, ref = $$props2.ref);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    ref,
    actualArticle,
    mediaIndex,
    media,
    onMediaClick,
    isLoading,
    cropped,
    click_handler,
    load_handler,
    img_binding,
    click_handler_1,
    load_handler_1,
    img_binding_1
  ];
}
var GalleryImage = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance12, create_fragment12, safe_not_equal, {
      actualArticle: 1,
      mediaIndex: 2,
      media: 3,
      onMediaClick: 4,
      isLoading: 5,
      ref: 0
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "GalleryImage",
      options,
      id: create_fragment12.name
    });
  }
  get actualArticle() {
    throw new Error("<GalleryImage>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set actualArticle(value) {
    throw new Error("<GalleryImage>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get mediaIndex() {
    throw new Error("<GalleryImage>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set mediaIndex(value) {
    throw new Error("<GalleryImage>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get media() {
    throw new Error("<GalleryImage>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set media(value) {
    throw new Error("<GalleryImage>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get onMediaClick() {
    throw new Error("<GalleryImage>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set onMediaClick(value) {
    throw new Error("<GalleryImage>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get isLoading() {
    throw new Error("<GalleryImage>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set isLoading(value) {
    throw new Error("<GalleryImage>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get ref() {
    throw new Error("<GalleryImage>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set ref(value) {
    throw new Error("<GalleryImage>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var GalleryImage_default = GalleryImage;

// src/articles/gallery/GalleryArticleView.svelte
var { Object: Object_13 } = globals;
var file13 = "src/articles/gallery/GalleryArticleView.svelte";
function get_each_context6(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[28] = list[i];
  const constants_0 = (
    /*action*/
    child_ctx[28].actionned(
      /*rootArticle*/
      child_ctx[3]
    )
  );
  child_ctx[29] = constants_0;
  const constants_1 = (
    /*action*/
    child_ctx[28].disabled ? (
      /*action*/
      child_ctx[28].disabled(
        /*rootArticle*/
        child_ctx[3]
      )
    ) : false
  );
  child_ctx[30] = constants_1;
  return child_ctx;
}
function get_each_context_12(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[33] = list[i];
  child_ctx[36] = i;
  const constants_0 = (
    /*loadingStates*/
    child_ctx[8][
      /*i*/
      child_ctx[36]
    ] === 1 /* Loading */
  );
  child_ctx[34] = constants_0;
  return child_ctx;
}
function create_else_block6(ctx) {
  let video;
  let source;
  let source_src_value;
  let mounted;
  let dispose;
  function click_handler_1() {
    return (
      /*click_handler_1*/
      ctx[17](
        /*i*/
        ctx[36]
      )
    );
  }
  function loadeddata_handler_1() {
    return (
      /*loadeddata_handler_1*/
      ctx[18](
        /*isLoading*/
        ctx[34],
        /*i*/
        ctx[36]
      )
    );
  }
  function load_handler_1() {
    return (
      /*load_handler_1*/
      ctx[19](
        /*isLoading*/
        ctx[34],
        /*i*/
        ctx[36]
      )
    );
  }
  const block = {
    c: function create() {
      video = element("video");
      source = element("source");
      if (!src_url_equal(source.src, source_src_value = /*media*/
      ctx[33].src))
        attr_dev(source, "src", source_src_value);
      attr_dev(source, "type", "video/mp4");
      add_location(source, file13, 173, 5, 4926);
      attr_dev(video, "class", "articleMedia svelte-c6bmzg");
      video.controls = true;
      video.autoplay = true;
      video.loop = true;
      video.muted = true;
      attr_dev(video, "preload", "auto");
      add_location(video, file13, 162, 4, 4542);
    },
    m: function mount(target, anchor) {
      insert_dev(target, video, anchor);
      append_dev(video, source);
      if (!mounted) {
        dispose = [
          listen_dev(video, "click", prevent_default(click_handler_1), false, true, false, false),
          listen_dev(video, "loadeddata", loadeddata_handler_1, false, false, false, false),
          listen_dev(video, "load", load_handler_1, false, false, false, false)
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty[0] & /*actualArticle, showAllMedia, timelineProps*/
      22 && !src_url_equal(source.src, source_src_value = /*media*/
      ctx[33].src)) {
        attr_dev(source, "src", source_src_value);
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(video);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block6.name,
    type: "else",
    source: "(162:3) {:else}",
    ctx
  });
  return block;
}
function create_if_block_72(ctx) {
  let video;
  let source;
  let source_src_value;
  let mounted;
  let dispose;
  function click_handler() {
    return (
      /*click_handler*/
      ctx[14](
        /*i*/
        ctx[36]
      )
    );
  }
  function loadeddata_handler() {
    return (
      /*loadeddata_handler*/
      ctx[15](
        /*isLoading*/
        ctx[34],
        /*i*/
        ctx[36]
      )
    );
  }
  function load_handler() {
    return (
      /*load_handler*/
      ctx[16](
        /*isLoading*/
        ctx[34],
        /*i*/
        ctx[36]
      )
    );
  }
  const block = {
    c: function create() {
      video = element("video");
      source = element("source");
      if (!src_url_equal(source.src, source_src_value = /*media*/
      ctx[33].src))
        attr_dev(source, "src", source_src_value);
      attr_dev(source, "type", "video/mp4");
      add_location(source, file13, 159, 5, 4471);
      attr_dev(video, "class", "articleMedia svelte-c6bmzg");
      video.controls = true;
      attr_dev(video, "preload", "auto");
      add_location(video, file13, 151, 4, 4122);
    },
    m: function mount(target, anchor) {
      insert_dev(target, video, anchor);
      append_dev(video, source);
      if (!mounted) {
        dispose = [
          listen_dev(video, "click", prevent_default(click_handler), false, true, false, false),
          listen_dev(video, "loadeddata", loadeddata_handler, false, false, false, false),
          listen_dev(video, "load", load_handler, false, false, false, false)
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty[0] & /*actualArticle, showAllMedia, timelineProps*/
      22 && !src_url_equal(source.src, source_src_value = /*media*/
      ctx[33].src)) {
        attr_dev(source, "src", source_src_value);
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(video);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_72.name,
    type: "if",
    source: "(150:82) ",
    ctx
  });
  return block;
}
function create_if_block_62(ctx) {
  let galleryimage;
  let current;
  galleryimage = new GalleryImage_default({
    props: {
      actualArticle: (
        /*actualArticle*/
        ctx[4]
      ),
      mediaIndex: (
        /*i*/
        ctx[36]
      ),
      media: (
        /*media*/
        ctx[33]
      ),
      onMediaClick: (
        /*onMediaClick*/
        ctx[5]
      ),
      isLoading: (
        /*isLoading*/
        ctx[34]
      ),
      ref: (
        /*mediaRefs*/
        ctx[10][
          /*i*/
          ctx[36]
        ]
      )
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      create_component(galleryimage.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(galleryimage, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const galleryimage_changes = {};
      if (dirty[0] & /*actualArticle*/
      16)
        galleryimage_changes.actualArticle = /*actualArticle*/
        ctx2[4];
      if (dirty[0] & /*actualArticle, showAllMedia, timelineProps*/
      22)
        galleryimage_changes.mediaIndex = /*i*/
        ctx2[36];
      if (dirty[0] & /*actualArticle, showAllMedia, timelineProps*/
      22)
        galleryimage_changes.media = /*media*/
        ctx2[33];
      if (dirty[0] & /*onMediaClick*/
      32)
        galleryimage_changes.onMediaClick = /*onMediaClick*/
        ctx2[5];
      if (dirty[0] & /*loadingStates, actualArticle, showAllMedia, timelineProps*/
      278)
        galleryimage_changes.isLoading = /*isLoading*/
        ctx2[34];
      if (dirty[0] & /*actualArticle, showAllMedia, timelineProps*/
      22)
        galleryimage_changes.ref = /*mediaRefs*/
        ctx2[10][
          /*i*/
          ctx2[36]
        ];
      galleryimage.$set(galleryimage_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(galleryimage.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(galleryimage.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(galleryimage, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_62.name,
    type: "if",
    source: "(141:86) ",
    ctx
  });
  return block;
}
function create_if_block_52(ctx) {
  let gallerythumbnail;
  let current;
  gallerythumbnail = new GalleryThumbnail_default({
    props: {
      actualArticle: (
        /*actualArticle*/
        ctx[4]
      ),
      mediaIndex: (
        /*i*/
        ctx[36]
      ),
      media: (
        /*media*/
        ctx[33]
      ),
      onMediaClick: (
        /*onMediaClick*/
        ctx[5]
      )
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      create_component(gallerythumbnail.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(gallerythumbnail, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const gallerythumbnail_changes = {};
      if (dirty[0] & /*actualArticle*/
      16)
        gallerythumbnail_changes.actualArticle = /*actualArticle*/
        ctx2[4];
      if (dirty[0] & /*actualArticle, showAllMedia, timelineProps*/
      22)
        gallerythumbnail_changes.mediaIndex = /*i*/
        ctx2[36];
      if (dirty[0] & /*actualArticle, showAllMedia, timelineProps*/
      22)
        gallerythumbnail_changes.media = /*media*/
        ctx2[33];
      if (dirty[0] & /*onMediaClick*/
      32)
        gallerythumbnail_changes.onMediaClick = /*onMediaClick*/
        ctx2[5];
      gallerythumbnail.$set(gallerythumbnail_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(gallerythumbnail.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(gallerythumbnail.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(gallerythumbnail, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_52.name,
    type: "if",
    source: "(134:3) {#if loadingStates[i] === LoadingState.NotLoaded}",
    ctx
  });
  return block;
}
function create_each_block_12(key_1, ctx) {
  let first;
  let current_block_type_index;
  let if_block;
  let if_block_anchor;
  let current;
  const if_block_creators = [create_if_block_52, create_if_block_62, create_if_block_72, create_else_block6];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (
      /*loadingStates*/
      ctx2[8][
        /*i*/
        ctx2[36]
      ] === 0 /* NotLoaded */
    )
      return 0;
    if (
      /*media*/
      ctx2[33].mediaType === 0 /* Image */ || /*media*/
      ctx2[33].mediaType === 3 /* Gif */
    )
      return 1;
    if (!/*timelineProps*/
    ctx2[2].animatedAsGifs && /*media*/
    ctx2[33].mediaType === 1 /* Video */)
      return 2;
    return 3;
  }
  current_block_type_index = select_block_type(ctx, [-1, -1]);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      first = empty();
      if_block.c();
      if_block_anchor = empty();
      this.first = first;
    },
    m: function mount(target, anchor) {
      insert_dev(target, first, anchor);
      if_blocks[current_block_type_index].m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx, dirty);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block = if_blocks[current_block_type_index];
        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
          if_block.c();
        } else {
          if_block.p(ctx, dirty);
        }
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(first);
      if_blocks[current_block_type_index].d(detaching);
      if (detaching)
        detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_12.name,
    type: "each",
    source: "(132:2) {#each actualArticle.medias.slice(0, !showAllMedia && timelineProps.maxMediaCount !== null ? timelineProps.maxMediaCount : undefined) as media, i (i)}",
    ctx
  });
  return block;
}
function create_if_block_43(ctx) {
  let div;
  let button;
  let fa;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: { icon: faImages, size: "2x" },
    $$inline: true
  });
  const block = {
    c: function create() {
      div = element("div");
      button = element("button");
      create_component(fa.$$.fragment);
      attr_dev(button, "class", "borderless-button svelte-c6bmzg");
      attr_dev(button, "title", "Load more medias");
      add_location(button, file13, 179, 4, 5155);
      attr_dev(div, "class", "moreMedia svelte-c6bmzg");
      add_location(div, file13, 178, 3, 5127);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, button);
      mount_component(fa, button, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler_2*/
          ctx[20],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_43.name,
    type: "if",
    source: "(178:2) {#if !showAllMedia && timelineProps.maxMediaCount !== null && actualArticle.medias.length > timelineProps.maxMediaCount}",
    ctx
  });
  return block;
}
function create_if_block_34(ctx) {
  let button;
  let span;
  let fa;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: {
      icon: faExpandArrowsAlt,
      class: "is-small"
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      button = element("button");
      span = element("span");
      create_component(fa.$$.fragment);
      attr_dev(span, "class", "icon darkIcon");
      add_location(span, file13, 192, 5, 5584);
      attr_dev(button, "class", "button svelte-c6bmzg");
      add_location(button, file13, 191, 4, 5555);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      append_dev(button, span);
      mount_component(fa, span, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          span,
          "click",
          /*click_handler_3*/
          ctx[21],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_34.name,
    type: "if",
    source: "(191:3) {#if !modal}",
    ctx
  });
  return block;
}
function create_if_block_25(ctx) {
  let a;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      a = element("a");
      a.textContent = "Load Media";
      attr_dev(a, "class", "dropdown-item svelte-c6bmzg");
      add_location(a, file13, 213, 5, 6399);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a, anchor);
      if (!mounted) {
        dispose = listen_dev(
          a,
          "click",
          /*click_handler_6*/
          ctx[24],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_25.name,
    type: "if",
    source: "(212:4) {#if actualArticle.medias.some(m => !m.loaded) }",
    ctx
  });
  return block;
}
function create_if_block_17(ctx) {
  let a;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      a = element("a");
      a.textContent = "Fetch Article";
      attr_dev(a, "class", "dropdown-item svelte-c6bmzg");
      add_location(a, file13, 233, 5, 7022);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a, anchor);
      if (!mounted) {
        dispose = listen_dev(
          a,
          "click",
          /*click_handler_7*/
          ctx[25],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_17.name,
    type: "if",
    source: "(232:4) {#if !actualArticle.fetched }",
    ctx
  });
  return block;
}
function create_default_slot2(ctx) {
  let a0;
  let t1;
  let a1;
  let t3;
  let show_if = (
    /*actualArticle*/
    ctx[4].medias.some(func2)
  );
  let t4;
  let a2;
  let t5;
  let a2_href_value;
  let t6;
  let a3;
  let t8;
  let a4;
  let t10;
  let if_block1_anchor;
  let mounted;
  let dispose;
  let if_block0 = show_if && create_if_block_25(ctx);
  let if_block1 = !/*actualArticle*/
  ctx[4].fetched && create_if_block_17(ctx);
  const block = {
    c: function create() {
      a0 = element("a");
      a0.textContent = "Mark as read";
      t1 = space();
      a1 = element("a");
      a1.textContent = "Hide";
      t3 = space();
      if (if_block0)
        if_block0.c();
      t4 = space();
      a2 = element("a");
      t5 = text("External Link");
      t6 = space();
      a3 = element("a");
      a3.textContent = "Log Data";
      t8 = space();
      a4 = element("a");
      a4.textContent = "Log JSON Data";
      t10 = space();
      if (if_block1)
        if_block1.c();
      if_block1_anchor = empty();
      attr_dev(a0, "class", "dropdown-item svelte-c6bmzg");
      add_location(a0, file13, 204, 4, 6032);
      attr_dev(a1, "class", "dropdown-item svelte-c6bmzg");
      add_location(a1, file13, 208, 4, 6195);
      attr_dev(a2, "class", "dropdown-item svelte-c6bmzg");
      attr_dev(a2, "href", a2_href_value = /*actualArticle*/
      ctx[4].url);
      add_location(a2, file13, 217, 4, 6583);
      attr_dev(a3, "class", "dropdown-item svelte-c6bmzg");
      add_location(a3, file13, 224, 4, 6733);
      attr_dev(a4, "class", "dropdown-item svelte-c6bmzg");
      add_location(a4, file13, 228, 4, 6857);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a0, anchor);
      insert_dev(target, t1, anchor);
      insert_dev(target, a1, anchor);
      insert_dev(target, t3, anchor);
      if (if_block0)
        if_block0.m(target, anchor);
      insert_dev(target, t4, anchor);
      insert_dev(target, a2, anchor);
      append_dev(a2, t5);
      insert_dev(target, t6, anchor);
      insert_dev(target, a3, anchor);
      insert_dev(target, t8, anchor);
      insert_dev(target, a4, anchor);
      insert_dev(target, t10, anchor);
      if (if_block1)
        if_block1.m(target, anchor);
      insert_dev(target, if_block1_anchor, anchor);
      if (!mounted) {
        dispose = [
          listen_dev(
            a0,
            "click",
            /*click_handler_4*/
            ctx[22],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            a1,
            "click",
            /*click_handler_5*/
            ctx[23],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            a3,
            "click",
            function() {
              if (is_function(
                /*onLogData*/
                ctx[6]
              ))
                ctx[6].apply(this, arguments);
            },
            false,
            false,
            false,
            false
          ),
          listen_dev(
            a4,
            "click",
            function() {
              if (is_function(
                /*onLogJSON*/
                ctx[7]
              ))
                ctx[7].apply(this, arguments);
            },
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty[0] & /*actualArticle*/
      16)
        show_if = /*actualArticle*/
        ctx[4].medias.some(func2);
      if (show_if) {
        if (if_block0) {
          if_block0.p(ctx, dirty);
        } else {
          if_block0 = create_if_block_25(ctx);
          if_block0.c();
          if_block0.m(t4.parentNode, t4);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      if (dirty[0] & /*actualArticle*/
      16 && a2_href_value !== (a2_href_value = /*actualArticle*/
      ctx[4].url)) {
        attr_dev(a2, "href", a2_href_value);
      }
      if (!/*actualArticle*/
      ctx[4].fetched) {
        if (if_block1) {
          if_block1.p(ctx, dirty);
        } else {
          if_block1 = create_if_block_17(ctx);
          if_block1.c();
          if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a0);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(a1);
      if (detaching)
        detach_dev(t3);
      if (if_block0)
        if_block0.d(detaching);
      if (detaching)
        detach_dev(t4);
      if (detaching)
        detach_dev(a2);
      if (detaching)
        detach_dev(t6);
      if (detaching)
        detach_dev(a3);
      if (detaching)
        detach_dev(t8);
      if (detaching)
        detach_dev(a4);
      if (detaching)
        detach_dev(t10);
      if (if_block1)
        if_block1.d(detaching);
      if (detaching)
        detach_dev(if_block1_anchor);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_default_slot2.name,
    type: "slot",
    source: "(199:3) <Dropdown isRight={true} labelClasses='articleButton'>",
    ctx
  });
  return block;
}
function create_triggerIcon_slot2(ctx) {
  let span;
  let fa;
  let current;
  fa = new fa_default({
    props: { icon: faEllipsisH, class: "level-item" },
    $$inline: true
  });
  const block = {
    c: function create() {
      span = element("span");
      create_component(fa.$$.fragment);
      attr_dev(span, "slot", "triggerIcon");
      attr_dev(span, "class", "icon darkIcon svelte-c6bmzg");
      add_location(span, file13, 200, 4, 5869);
    },
    m: function mount(target, anchor) {
      insert_dev(target, span, anchor);
      mount_component(fa, span, null);
      current = true;
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(span);
      destroy_component(fa);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_triggerIcon_slot2.name,
    type: "slot",
    source: "(201:4) ",
    ctx
  });
  return block;
}
function create_if_block8(ctx) {
  let button;
  let span;
  let fa;
  let t;
  let button_title_value;
  let button_disabled_value;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: {
      icon: (
        /*action*/
        ctx[28].actionnedIcon && /*actionned*/
        ctx[29] ? (
          /*action*/
          ctx[28].actionnedIcon
        ) : (
          /*action*/
          ctx[28].icon
        )
      ),
      class: "is-small"
    },
    $$inline: true
  });
  function click_handler_8() {
    return (
      /*click_handler_8*/
      ctx[26](
        /*action*/
        ctx[28]
      )
    );
  }
  const block = {
    c: function create() {
      button = element("button");
      span = element("span");
      create_component(fa.$$.fragment);
      t = space();
      attr_dev(span, "class", "icon darkIcon");
      add_location(span, file13, 252, 6, 7654);
      attr_dev(button, "class", "button svelte-c6bmzg");
      attr_dev(button, "title", button_title_value = /*action*/
      ctx[28].name);
      button.disabled = button_disabled_value = /*disabled*/
      ctx[30];
      toggle_class(
        button,
        "actionned",
        /*actionned*/
        ctx[29]
      );
      add_location(button, file13, 245, 5, 7490);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      append_dev(button, span);
      mount_component(fa, span, null);
      append_dev(button, t);
      current = true;
      if (!mounted) {
        dispose = listen_dev(button, "click", click_handler_8, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      const fa_changes = {};
      if (dirty[0] & /*rootArticle*/
      8)
        fa_changes.icon = /*action*/
        ctx[28].actionnedIcon && /*actionned*/
        ctx[29] ? (
          /*action*/
          ctx[28].actionnedIcon
        ) : (
          /*action*/
          ctx[28].icon
        );
      fa.$set(fa_changes);
      if (!current || dirty[0] & /*rootArticle*/
      8 && button_disabled_value !== (button_disabled_value = /*disabled*/
      ctx[30])) {
        prop_dev(button, "disabled", button_disabled_value);
      }
      if (!current || dirty[0] & /*actions, rootArticle*/
      2056) {
        toggle_class(
          button,
          "actionned",
          /*actionned*/
          ctx[29]
        );
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block8.name,
    type: "if",
    source: "(244:4) {#if !actionned || action.togglable}",
    ctx
  });
  return block;
}
function create_each_block6(key_1, ctx) {
  let first;
  let if_block_anchor;
  let current;
  let if_block = (!/*actionned*/
  ctx[29] || /*action*/
  ctx[28].togglable) && create_if_block8(ctx);
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      first = empty();
      if (if_block)
        if_block.c();
      if_block_anchor = empty();
      this.first = first;
    },
    m: function mount(target, anchor) {
      insert_dev(target, first, anchor);
      if (if_block)
        if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (!/*actionned*/
      ctx[29] || /*action*/
      ctx[28].togglable) {
        if (if_block) {
          if_block.p(ctx, dirty);
          if (dirty[0] & /*rootArticle*/
          8) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block8(ctx);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(first);
      if (if_block)
        if_block.d(detaching);
      if (detaching)
        detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block6.name,
    type: "each",
    source: "(241:3) {#each actions as action (action.key)}",
    ctx
  });
  return block;
}
function create_fragment13(ctx) {
  let div3;
  let div2;
  let each_blocks_1 = [];
  let each0_lookup = /* @__PURE__ */ new Map();
  let t0;
  let t1;
  let div0;
  let a;
  let span;
  let fa;
  let a_href_value;
  let t2;
  let t3;
  let dropdown;
  let t4;
  let div1;
  let each_blocks = [];
  let each1_lookup = /* @__PURE__ */ new Map();
  let current;
  let each_value_1 = (
    /*actualArticle*/
    ctx[4].medias.slice(0, !/*showAllMedia*/
    ctx[1] && /*timelineProps*/
    ctx[2].maxMediaCount !== null ? (
      /*timelineProps*/
      ctx[2].maxMediaCount
    ) : void 0)
  );
  validate_each_argument(each_value_1);
  const get_key = (ctx2) => (
    /*i*/
    ctx2[36]
  );
  validate_each_keys(ctx, each_value_1, get_each_context_12, get_key);
  for (let i = 0; i < each_value_1.length; i += 1) {
    let child_ctx = get_each_context_12(ctx, each_value_1, i);
    let key = get_key(child_ctx);
    each0_lookup.set(key, each_blocks_1[i] = create_each_block_12(key, child_ctx));
  }
  let if_block0 = !/*showAllMedia*/
  ctx[1] && /*timelineProps*/
  ctx[2].maxMediaCount !== null && /*actualArticle*/
  ctx[4].medias.length > /*timelineProps*/
  ctx[2].maxMediaCount && create_if_block_43(ctx);
  fa = new fa_default({
    props: {
      icon: faExternalLinkAlt,
      class: "is-small"
    },
    $$inline: true
  });
  let if_block1 = !/*modal*/
  ctx[0] && create_if_block_34(ctx);
  dropdown = new Dropdown_default({
    props: {
      isRight: true,
      labelClasses: "articleButton",
      $$slots: {
        triggerIcon: [create_triggerIcon_slot2],
        default: [create_default_slot2]
      },
      $$scope: { ctx }
    },
    $$inline: true
  });
  let each_value = (
    /*actions*/
    ctx[11]
  );
  validate_each_argument(each_value);
  const get_key_1 = (ctx2) => (
    /*action*/
    ctx2[28].key
  );
  validate_each_keys(ctx, each_value, get_each_context6, get_key_1);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context6(ctx, each_value, i);
    let key = get_key_1(child_ctx);
    each1_lookup.set(key, each_blocks[i] = create_each_block6(key, child_ctx));
  }
  const block = {
    c: function create() {
      div3 = element("div");
      div2 = element("div");
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        each_blocks_1[i].c();
      }
      t0 = space();
      if (if_block0)
        if_block0.c();
      t1 = space();
      div0 = element("div");
      a = element("a");
      span = element("span");
      create_component(fa.$$.fragment);
      t2 = space();
      if (if_block1)
        if_block1.c();
      t3 = space();
      create_component(dropdown.$$.fragment);
      t4 = space();
      div1 = element("div");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      attr_dev(span, "class", "icon darkIcon");
      add_location(span, file13, 186, 4, 5433);
      attr_dev(a, "class", "button svelte-c6bmzg");
      attr_dev(a, "title", "External Link");
      attr_dev(a, "href", a_href_value = /*actualArticle*/
      ctx[4].url);
      add_location(a, file13, 185, 3, 5363);
      attr_dev(div0, "class", "holderBox holderBoxTop svelte-c6bmzg");
      add_location(div0, file13, 184, 2, 5323);
      attr_dev(div1, "class", "holderBox holderBoxBottom svelte-c6bmzg");
      add_location(div1, file13, 239, 2, 7166);
      attr_dev(div2, "class", "svelte-c6bmzg");
      add_location(div2, file13, 130, 1, 3367);
      attr_dev(div3, "class", "galleryArticle svelte-c6bmzg");
      add_location(div3, file13, 129, 0, 3318);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div3, anchor);
      append_dev(div3, div2);
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        if (each_blocks_1[i]) {
          each_blocks_1[i].m(div2, null);
        }
      }
      append_dev(div2, t0);
      if (if_block0)
        if_block0.m(div2, null);
      append_dev(div2, t1);
      append_dev(div2, div0);
      append_dev(div0, a);
      append_dev(a, span);
      mount_component(fa, span, null);
      append_dev(div0, t2);
      if (if_block1)
        if_block1.m(div0, null);
      append_dev(div0, t3);
      mount_component(dropdown, div0, null);
      append_dev(div2, t4);
      append_dev(div2, div1);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div1, null);
        }
      }
      ctx[27](div3);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*actualArticle, showAllMedia, timelineProps, onMediaClick, loadingStates, mediaRefs*/
      1334) {
        each_value_1 = /*actualArticle*/
        ctx2[4].medias.slice(0, !/*showAllMedia*/
        ctx2[1] && /*timelineProps*/
        ctx2[2].maxMediaCount !== null ? (
          /*timelineProps*/
          ctx2[2].maxMediaCount
        ) : void 0);
        validate_each_argument(each_value_1);
        group_outros();
        validate_each_keys(ctx2, each_value_1, get_each_context_12, get_key);
        each_blocks_1 = update_keyed_each(each_blocks_1, dirty, get_key, 1, ctx2, each_value_1, each0_lookup, div2, outro_and_destroy_block, create_each_block_12, t0, get_each_context_12);
        check_outros();
      }
      if (!/*showAllMedia*/
      ctx2[1] && /*timelineProps*/
      ctx2[2].maxMediaCount !== null && /*actualArticle*/
      ctx2[4].medias.length > /*timelineProps*/
      ctx2[2].maxMediaCount) {
        if (if_block0) {
          if_block0.p(ctx2, dirty);
          if (dirty[0] & /*showAllMedia, timelineProps, actualArticle*/
          22) {
            transition_in(if_block0, 1);
          }
        } else {
          if_block0 = create_if_block_43(ctx2);
          if_block0.c();
          transition_in(if_block0, 1);
          if_block0.m(div2, t1);
        }
      } else if (if_block0) {
        group_outros();
        transition_out(if_block0, 1, 1, () => {
          if_block0 = null;
        });
        check_outros();
      }
      if (!current || dirty[0] & /*actualArticle*/
      16 && a_href_value !== (a_href_value = /*actualArticle*/
      ctx2[4].url)) {
        attr_dev(a, "href", a_href_value);
      }
      if (!/*modal*/
      ctx2[0]) {
        if (if_block1) {
          if_block1.p(ctx2, dirty);
          if (dirty[0] & /*modal*/
          1) {
            transition_in(if_block1, 1);
          }
        } else {
          if_block1 = create_if_block_34(ctx2);
          if_block1.c();
          transition_in(if_block1, 1);
          if_block1.m(div0, t3);
        }
      } else if (if_block1) {
        group_outros();
        transition_out(if_block1, 1, 1, () => {
          if_block1 = null;
        });
        check_outros();
      }
      const dropdown_changes = {};
      if (dirty[0] & /*actualArticle, onLogJSON, onLogData*/
      208 | dirty[1] & /*$$scope*/
      64) {
        dropdown_changes.$$scope = { dirty, ctx: ctx2 };
      }
      dropdown.$set(dropdown_changes);
      if (dirty[0] & /*actions, rootArticle*/
      2056) {
        each_value = /*actions*/
        ctx2[11];
        validate_each_argument(each_value);
        group_outros();
        validate_each_keys(ctx2, each_value, get_each_context6, get_key_1);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key_1, 1, ctx2, each_value, each1_lookup, div1, outro_and_destroy_block, create_each_block6, null, get_each_context6);
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      for (let i = 0; i < each_value_1.length; i += 1) {
        transition_in(each_blocks_1[i]);
      }
      transition_in(if_block0);
      transition_in(fa.$$.fragment, local);
      transition_in(if_block1);
      transition_in(dropdown.$$.fragment, local);
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o: function outro(local) {
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        transition_out(each_blocks_1[i]);
      }
      transition_out(if_block0);
      transition_out(fa.$$.fragment, local);
      transition_out(if_block1);
      transition_out(dropdown.$$.fragment, local);
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div3);
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        each_blocks_1[i].d();
      }
      if (if_block0)
        if_block0.d();
      destroy_component(fa);
      if (if_block1)
        if_block1.d();
      destroy_component(dropdown);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
      ctx[27](null);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment13.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
var func2 = (m) => !m.loaded;
function instance13($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("GalleryArticleView", slots, []);
  let { timelineProps } = $$props;
  let { articleProps } = $$props;
  articleProps;
  let { style = "" } = $$props;
  style;
  let { modal } = $$props;
  modal;
  let { showAllMedia } = $$props;
  let { rootArticle } = $$props;
  rootArticle;
  let { actualArticle } = $$props;
  let { onMediaClick } = $$props;
  let { onLogData } = $$props;
  let { onLogJSON } = $$props;
  const mediaRefs = [];
  let loadingStates;
  let divRef = null;
  afterUpdate(() => {
    const articleMediaEls = divRef?.querySelectorAll(".articleMedia");
    if (articleMediaEls) {
      const modifiedMedias = [];
      for (let i = 0; i < actualArticle.medias.length; ++i)
        if (actualArticle.medias[i].ratio === null)
          modifiedMedias.push([i, articleMediaEls[i].clientHeight / articleMediaEls[i].clientWidth]);
      getWritable(actualArticle.idPair).update((a) => {
        for (const [i, ratio] of modifiedMedias)
          a.medias[i].ratio = ratio;
        return a;
      });
    }
    const count = actualArticle.medias.length;
    for (let i = 0; i < count; ++i) {
      if (actualArticle.medias[i].queueLoadInfo === 2 /* LazyLoad */ && !actualArticle.medias[i].loaded) {
        if (mediaRefs[i]?.complete)
          loadingStore.mediaLoaded(actualArticle.idPair, i);
      }
    }
  });
  let actions = Object.values(getServices()[rootArticle.idPair.service].articleActions).filter((a) => a.icon !== void 0).sort((a, b) => a.index - b.index);
  $$self.$$.on_mount.push(function() {
    if (timelineProps === void 0 && !("timelineProps" in $$props || $$self.$$.bound[$$self.$$.props["timelineProps"]])) {
      console.warn("<GalleryArticleView> was created without expected prop 'timelineProps'");
    }
    if (articleProps === void 0 && !("articleProps" in $$props || $$self.$$.bound[$$self.$$.props["articleProps"]])) {
      console.warn("<GalleryArticleView> was created without expected prop 'articleProps'");
    }
    if (modal === void 0 && !("modal" in $$props || $$self.$$.bound[$$self.$$.props["modal"]])) {
      console.warn("<GalleryArticleView> was created without expected prop 'modal'");
    }
    if (showAllMedia === void 0 && !("showAllMedia" in $$props || $$self.$$.bound[$$self.$$.props["showAllMedia"]])) {
      console.warn("<GalleryArticleView> was created without expected prop 'showAllMedia'");
    }
    if (rootArticle === void 0 && !("rootArticle" in $$props || $$self.$$.bound[$$self.$$.props["rootArticle"]])) {
      console.warn("<GalleryArticleView> was created without expected prop 'rootArticle'");
    }
    if (actualArticle === void 0 && !("actualArticle" in $$props || $$self.$$.bound[$$self.$$.props["actualArticle"]])) {
      console.warn("<GalleryArticleView> was created without expected prop 'actualArticle'");
    }
    if (onMediaClick === void 0 && !("onMediaClick" in $$props || $$self.$$.bound[$$self.$$.props["onMediaClick"]])) {
      console.warn("<GalleryArticleView> was created without expected prop 'onMediaClick'");
    }
    if (onLogData === void 0 && !("onLogData" in $$props || $$self.$$.bound[$$self.$$.props["onLogData"]])) {
      console.warn("<GalleryArticleView> was created without expected prop 'onLogData'");
    }
    if (onLogJSON === void 0 && !("onLogJSON" in $$props || $$self.$$.bound[$$self.$$.props["onLogJSON"]])) {
      console.warn("<GalleryArticleView> was created without expected prop 'onLogJSON'");
    }
  });
  const writable_props = [
    "timelineProps",
    "articleProps",
    "style",
    "modal",
    "showAllMedia",
    "rootArticle",
    "actualArticle",
    "onMediaClick",
    "onLogData",
    "onLogJSON"
  ];
  Object_13.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<GalleryArticleView> was created with unknown prop '${key}'`);
  });
  const click_handler = (i) => onMediaClick(actualArticle.idPair, i);
  const loadeddata_handler = (isLoading, i) => isLoading ? loadingStore.mediaLoaded(actualArticle.idPair, i) : void 0;
  const load_handler = (isLoading, i) => isLoading ? loadingStore.mediaLoaded(actualArticle.idPair, i) : void 0;
  const click_handler_1 = (i) => onMediaClick(actualArticle.idPair, i);
  const loadeddata_handler_1 = (isLoading, i) => isLoading ? loadingStore.mediaLoaded(actualArticle.idPair, i) : void 0;
  const load_handler_1 = (isLoading, i) => isLoading ? loadingStore.mediaLoaded(actualArticle.idPair, i) : void 0;
  const click_handler_2 = () => $$invalidate(1, showAllMedia = true);
  const click_handler_3 = () => $$invalidate(0, modal = !modal);
  const click_handler_4 = () => toggleMarkAsRead(actualArticle.idPair);
  const click_handler_5 = () => toggleHide(actualArticle.idPair);
  const click_handler_6 = () => {
    for (let i = 0; i < actualArticle.medias.length; ++i)
      loadingStore.forceLoading(actualArticle, i);
  };
  const click_handler_7 = () => fetchArticle(actualArticle.idPair);
  const click_handler_8 = (action) => action.action(rootArticle.idPair);
  function div3_binding($$value) {
    binding_callbacks[$$value ? "unshift" : "push"](() => {
      divRef = $$value;
      $$invalidate(9, divRef);
    });
  }
  $$self.$$set = ($$props2) => {
    if ("timelineProps" in $$props2)
      $$invalidate(2, timelineProps = $$props2.timelineProps);
    if ("articleProps" in $$props2)
      $$invalidate(12, articleProps = $$props2.articleProps);
    if ("style" in $$props2)
      $$invalidate(13, style = $$props2.style);
    if ("modal" in $$props2)
      $$invalidate(0, modal = $$props2.modal);
    if ("showAllMedia" in $$props2)
      $$invalidate(1, showAllMedia = $$props2.showAllMedia);
    if ("rootArticle" in $$props2)
      $$invalidate(3, rootArticle = $$props2.rootArticle);
    if ("actualArticle" in $$props2)
      $$invalidate(4, actualArticle = $$props2.actualArticle);
    if ("onMediaClick" in $$props2)
      $$invalidate(5, onMediaClick = $$props2.onMediaClick);
    if ("onLogData" in $$props2)
      $$invalidate(6, onLogData = $$props2.onLogData);
    if ("onLogJSON" in $$props2)
      $$invalidate(7, onLogJSON = $$props2.onLogJSON);
  };
  $$self.$capture_state = () => ({
    Article,
    Fa: fa_default,
    faExpandArrowsAlt,
    faExternalLinkAlt,
    faEllipsisH,
    faImages,
    afterUpdate,
    LoadingState,
    loadingStore,
    Dropdown: Dropdown_default,
    fetchArticle,
    toggleHide,
    toggleMarkAsRead,
    getWritable,
    getServices,
    MediaLoadType,
    MediaType,
    GalleryThumbnail: GalleryThumbnail_default,
    GalleryImage: GalleryImage_default,
    timelineProps,
    articleProps,
    style,
    modal,
    showAllMedia,
    rootArticle,
    actualArticle,
    onMediaClick,
    onLogData,
    onLogJSON,
    mediaRefs,
    loadingStates,
    divRef,
    actions
  });
  $$self.$inject_state = ($$props2) => {
    if ("timelineProps" in $$props2)
      $$invalidate(2, timelineProps = $$props2.timelineProps);
    if ("articleProps" in $$props2)
      $$invalidate(12, articleProps = $$props2.articleProps);
    if ("style" in $$props2)
      $$invalidate(13, style = $$props2.style);
    if ("modal" in $$props2)
      $$invalidate(0, modal = $$props2.modal);
    if ("showAllMedia" in $$props2)
      $$invalidate(1, showAllMedia = $$props2.showAllMedia);
    if ("rootArticle" in $$props2)
      $$invalidate(3, rootArticle = $$props2.rootArticle);
    if ("actualArticle" in $$props2)
      $$invalidate(4, actualArticle = $$props2.actualArticle);
    if ("onMediaClick" in $$props2)
      $$invalidate(5, onMediaClick = $$props2.onMediaClick);
    if ("onLogData" in $$props2)
      $$invalidate(6, onLogData = $$props2.onLogData);
    if ("onLogJSON" in $$props2)
      $$invalidate(7, onLogJSON = $$props2.onLogJSON);
    if ("loadingStates" in $$props2)
      $$invalidate(8, loadingStates = $$props2.loadingStates);
    if ("divRef" in $$props2)
      $$invalidate(9, divRef = $$props2.divRef);
    if ("actions" in $$props2)
      $$invalidate(11, actions = $$props2.actions);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty[0] & /*actualArticle, loadingStates, timelineProps*/
    276) {
      $: {
        $$invalidate(8, loadingStates = []);
        for (let mediaIndex = 0; mediaIndex < actualArticle.medias.length; ++mediaIndex)
          loadingStates.push(loadingStore.getLoadingState(actualArticle.idPair, mediaIndex, timelineProps.shouldLoadMedia));
      }
    }
  };
  return [
    modal,
    showAllMedia,
    timelineProps,
    rootArticle,
    actualArticle,
    onMediaClick,
    onLogData,
    onLogJSON,
    loadingStates,
    divRef,
    mediaRefs,
    actions,
    articleProps,
    style,
    click_handler,
    loadeddata_handler,
    load_handler,
    click_handler_1,
    loadeddata_handler_1,
    load_handler_1,
    click_handler_2,
    click_handler_3,
    click_handler_4,
    click_handler_5,
    click_handler_6,
    click_handler_7,
    click_handler_8,
    div3_binding
  ];
}
var GalleryArticleView = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(
      this,
      options,
      instance13,
      create_fragment13,
      safe_not_equal,
      {
        timelineProps: 2,
        articleProps: 12,
        style: 13,
        modal: 0,
        showAllMedia: 1,
        rootArticle: 3,
        actualArticle: 4,
        onMediaClick: 5,
        onLogData: 6,
        onLogJSON: 7
      },
      null,
      [-1, -1]
    );
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "GalleryArticleView",
      options,
      id: create_fragment13.name
    });
  }
  get timelineProps() {
    throw new Error("<GalleryArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineProps(value) {
    throw new Error("<GalleryArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get articleProps() {
    throw new Error("<GalleryArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set articleProps(value) {
    throw new Error("<GalleryArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get style() {
    throw new Error("<GalleryArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set style(value) {
    throw new Error("<GalleryArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get modal() {
    throw new Error("<GalleryArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set modal(value) {
    throw new Error("<GalleryArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get showAllMedia() {
    throw new Error("<GalleryArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set showAllMedia(value) {
    throw new Error("<GalleryArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get rootArticle() {
    throw new Error("<GalleryArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set rootArticle(value) {
    throw new Error("<GalleryArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get actualArticle() {
    throw new Error("<GalleryArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set actualArticle(value) {
    throw new Error("<GalleryArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get onMediaClick() {
    throw new Error("<GalleryArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set onMediaClick(value) {
    throw new Error("<GalleryArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get onLogData() {
    throw new Error("<GalleryArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set onLogData(value) {
    throw new Error("<GalleryArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get onLogJSON() {
    throw new Error("<GalleryArticleView>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set onLogJSON(value) {
    throw new Error("<GalleryArticleView>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var GalleryArticleView_default = GalleryArticleView;

// src/storages/index.ts
var MAIN_STORAGE_KEY = "SoshalThingSvelte";
var TIMELINE_STORAGE_KEY = MAIN_STORAGE_KEY + " Timelines";
function loadMainStorage() {
  const item = localStorage.getItem(MAIN_STORAGE_KEY);
  const mainStorage = item ? JSON.parse(item) : {};
  mainStorage.timelineIds ??= null;
  mainStorage.fullscreen = parseFullscreenInfo(mainStorage.fullscreen);
  if (!mainStorage.maximized)
    mainStorage.maximized = false;
  if (!mainStorage.timelineViews)
    mainStorage.timelineViews = {};
  else
    for (const view in mainStorage.timelineViews)
      if (Object.hasOwn(mainStorage.timelineViews, view))
        mainStorage.timelineViews[view].fullscreen = parseFullscreenInfo(mainStorage.timelineViews[view].fullscreen);
  mainStorage.defaultTimelineView = mainStorage.defaultTimelineView ?? null;
  return mainStorage;
}
function getServiceStorage(service) {
  const storageKey = `${MAIN_STORAGE_KEY} ${service}`;
  const item = localStorage.getItem(storageKey);
  return item ? JSON.parse(item) : {};
}
function updateServiceStorage(service, key, value) {
  const storageKey = `${MAIN_STORAGE_KEY} ${service}`;
  const item = localStorage.getItem(storageKey);
  const storage = item ? JSON.parse(item) : {};
  storage[key] = value;
  localStorage.setItem(storageKey, JSON.stringify(storage));
}
function updateMainStorage(key, value) {
  const item = localStorage.getItem(MAIN_STORAGE_KEY);
  const storage = item ? JSON.parse(item) : {};
  storage[key] = value;
  localStorage.setItem(MAIN_STORAGE_KEY, JSON.stringify(storage));
}
function updateMaximized(maximized) {
  updateMainStorage("maximized", maximized);
}
function updateFullscreenStorage(fullscreen2) {
  const stringified = { ...fullscreen2 };
  if (stringified.container)
    stringified.container = stringified.container.name;
  updateMainStorage("fullscreen", stringified);
}
function loadTimelines() {
  const item = localStorage.getItem(TIMELINE_STORAGE_KEY);
  let storage = item ? JSON.parse(item) : {};
  if (storage instanceof Array) {
    console.warn("SoshalThingSvelte Timelines should be an object {[id: string]: TimelineStorage}");
    storage = Object.assign({}, storage);
  }
  return Object.fromEntries(Object.entries(storage).map(([id, t]) => {
    const defaulted = {
      ...DEFAULT_TIMELINE_STORAGE,
      ...t
    };
    const endpoints2 = [];
    for (const endpointStorage of defaulted.endpoints) {
      const endpoint = parseAndLoadEndpoint(endpointStorage);
      if (endpoint !== void 0 && !endpoints2.find((e) => e.name === endpoint.name))
        endpoints2.push(endpoint);
    }
    parseFilters(defaulted.filters);
    return [id, {
      ...defaultTimeline(),
      title: defaulted.title,
      endpoints: endpoints2,
      container: parseContainer(defaulted.container),
      articleView: parseArticleView(defaulted.articleView),
      columnCount: defaulted.columnCount,
      width: defaulted.width,
      filters: defaulted.filters,
      sortInfo: parseSortInfo(defaulted.sortInfo),
      section: defaulted.section ?? {
        useSection: false,
        count: 100
      }
    }];
  }));
}
function updateTimelinesStorage(timelines2) {
  const storage = Object.fromEntries(Object.entries(timelines2).map(([id, t]) => [id, {
    title: t.title
    //TODO Serialize more timeline properties
    // container?: string
    // articleView?: string
    // endpoints: EndpointStorage[]
    // columnCount: number
    // width: number
    // filters: FilterInstance[],
    // sortInfo: {
    // 	method?: string | null
    // 	reversed: boolean
    // },
    // compact: boolean
    // animatedAsGifs: boolean
    // hideText: boolean
    // section?: {
    // 	useSection: boolean
    // 	count: number
    // }
  }]));
  localStorage.setItem(TIMELINE_STORAGE_KEY, JSON.stringify(storage));
}
function parseContainer(container) {
  switch (container) {
    case "Row":
    case "RowContainer":
      return RowContainer_default;
    case "Masonry":
    case "MasonryContainer":
      return MasonryContainer_default;
    case "Column":
    case "ColumnContainer":
    default:
      return ColumnContainer_default;
  }
}
function parseArticleView(articleView) {
  switch (articleView) {
    case "Gallery":
    case "GalleryArticle":
    case "GalleryArticleView":
      return GalleryArticleView_default;
    case "Social":
    case "SocialArticle":
    case "SocialArticleView":
    default:
      return SocialArticleView_default;
  }
}
function parseAndLoadEndpoint(storage) {
  const services2 = getServices();
  const endpointsValue = get_store_value(derived(Object.values(endpoints), (e) => e));
  if (!Object.hasOwn(services2, storage.service)) {
    console.error(`"${storage.service}" isn't a registered service`);
    return void 0;
  } else if (services2[storage.service].endpointConstructors.length <= storage.endpointType) {
    console.error(`"${storage.service}" doesn't have endpointType "${storage.endpointType}"`);
    return void 0;
  }
  const constructorInfo = services2[storage.service].endpointConstructors[storage.endpointType];
  let endpoint = endpointsValue.find(
    (endpoint2) => constructorInfo.name === endpoint2.constructor.constructorInfo.name && endpoint2.matchParams(storage.params)
  );
  if (endpoint === void 0) {
    if (storage.params === void 0)
      storage.params = {};
    for (const [param, defaultValue] of constructorInfo.paramTemplate)
      if (!Object.hasOwn(storage.params, param))
        storage.params[param] = defaultValue;
    endpoint = constructorInfo.constructor(storage.params);
    addEndpoint(endpoint);
  }
  const refreshTypes = /* @__PURE__ */ new Set();
  if (storage.onStart === void 0 ? true : storage.onStart)
    refreshTypes.add(0 /* RefreshStart */);
  if (storage.onRefresh === void 0 ? true : storage.onRefresh)
    refreshTypes.add(1 /* Refresh */);
  if (storage.loadTop === void 0 ? true : storage.loadTop)
    refreshTypes.add(2 /* LoadTop */);
  if (storage.loadBottom === void 0 ? true : storage.loadBottom)
    refreshTypes.add(3 /* LoadBottom */);
  if (storage.autoRefresh)
    startAutoRefresh(endpoint.name);
  parseFilters(storage.filters);
  return {
    name: endpoint.name,
    refreshTypes,
    filters: storage.filters || []
  };
}
function parseSortInfo({ method, reversed }) {
  let sortMethod = null;
  switch (method?.toLowerCase()) {
    case "id":
      sortMethod = 0 /* Id */;
      break;
    case "date":
      sortMethod = 1 /* Date */;
      break;
    case "likes":
      sortMethod = 2 /* Likes */;
      break;
    case "reposts":
      sortMethod = 3 /* Reposts */;
      break;
  }
  return {
    method: sortMethod,
    customMethod: null,
    reversed: reversed || false
  };
}
function parseFilters(filters) {
  if (filters === void 0)
    return;
  for (const instance31 of filters) {
    instance31.filter.service ??= null;
    if (instance31.filter.service !== null && !Object.hasOwn(getServices(), instance31.filter.service))
      console.error(`Service ${instance31.filter.service} isn't registered.`, instance31);
  }
}
function parseFullscreenInfo(fullscreen2) {
  if (!fullscreen2 && fullscreen2 !== 0)
    fullscreen2 = {
      index: null,
      columnCount: null,
      container: null
    };
  else if (fullscreen2 === true)
    fullscreen2 = {
      index: 0,
      columnCount: null,
      container: null
    };
  else if (typeof fullscreen2 === "number")
    fullscreen2 = {
      index: fullscreen2,
      columnCount: null,
      container: null
    };
  const containerString = fullscreen2?.container;
  if (containerString)
    fullscreen2.container = parseContainer(containerString);
  return fullscreen2;
}
var DEFAULT_TIMELINE_STORAGE = {
  title: "Timeline",
  endpoints: [],
  columnCount: 1,
  width: 1,
  compact: false,
  animatedAsGifs: false,
  hideText: false,
  filters: defaultFilterInstances,
  sortInfo: {
    method: null,
    reversed: false
  }
};

// src/storages/serviceCache.ts
var LOCAL_CACHE_STORAGE_KEY = MAIN_STORAGE_KEY + " Cache";
function updateMarkAsReadStorage() {
  const { markAsReadLocal } = loadMainStorage();
  const storageType = markAsReadLocal ? localStorage : sessionStorage;
  const item = storageType.getItem(MAIN_STORAGE_KEY);
  let storage = item !== null ? JSON.parse(item) : null;
  if (storage === null)
    storage = { services: {} };
  else if (storage.services === void 0)
    storage.services = {};
  for (const service of Object.values(getServices())) {
    const articlesMarkedAsRead = new Set(storage.services[service.name]?.articlesMarkedAsRead);
    for (const article of getServiceArticles(service)) {
      if (article.markedAsRead)
        articlesMarkedAsRead.add(article.idPair.id.toString());
      else
        articlesMarkedAsRead.delete(article.idPair.id.toString());
    }
    if (Object.hasOwn(storage.services, service.name))
      storage.services[service.name].articlesMarkedAsRead = [...articlesMarkedAsRead];
    else
      storage.services[service.name] = {
        articlesMarkedAsRead: [...articlesMarkedAsRead],
        cachedArticles: {}
      };
  }
  storageType.setItem(MAIN_STORAGE_KEY, JSON.stringify(storage));
}
function updateHiddenStorage() {
  const item = localStorage.getItem(LOCAL_CACHE_STORAGE_KEY);
  let storage = item !== null ? JSON.parse(item) : null;
  if (storage === null)
    storage = { services: {} };
  else if (storage.services === void 0)
    storage.services = {};
  for (const service of Object.values(getServices())) {
    const hiddenArticles = new Set(storage.services[service.name]?.hiddenArticles || []);
    for (const article of getServiceArticles(service)) {
      if (article.hidden)
        hiddenArticles.add(article.idPair.id.toString());
      else
        hiddenArticles.delete(article.idPair.id.toString());
    }
    if (Object.hasOwn(storage.services, service.name))
      storage.services[service.name].hiddenArticles = [...hiddenArticles];
    else
      storage.services[service.name] = {
        hiddenArticles: [...hiddenArticles]
      };
  }
  localStorage.setItem(LOCAL_CACHE_STORAGE_KEY, JSON.stringify(storage));
}
function updateCachedArticlesStorage() {
  const item = sessionStorage.getItem(MAIN_STORAGE_KEY);
  let storage = item !== null ? JSON.parse(item) : null;
  if (storage === null)
    storage = { services: {} };
  else if (storage.services === void 0)
    storage.services = {};
  for (const service of Object.values(getServices())) {
    const getCachedArticles = service.getCachedArticles;
    if (getCachedArticles !== void 0) {
      const cachedArticles = getCachedArticles();
      if (Object.hasOwn(storage.services, service.name))
        storage.services[service.name].cachedArticles = {
          ...storage.services[service.name].cachedArticles,
          ...cachedArticles
        };
      else
        storage.services[service.name] = {
          articlesMarkedAsRead: [],
          cachedArticles
        };
    }
  }
  sessionStorage.setItem(MAIN_STORAGE_KEY, JSON.stringify(storage));
}
function getMarkedAsReadStorage(service) {
  const { markAsReadLocal } = loadMainStorage();
  const item = (markAsReadLocal ? localStorage : sessionStorage).getItem(MAIN_STORAGE_KEY);
  const parsed = item !== null ? JSON.parse(item) : null;
  if (parsed?.services === void 0)
    return [];
  return parsed.services[service.name]?.articlesMarkedAsRead || [];
}
function getHiddenStorage(service) {
  const item = localStorage.getItem(LOCAL_CACHE_STORAGE_KEY);
  const parsed = item !== null ? JSON.parse(item) : null;
  if (parsed?.services === void 0)
    return [];
  return parsed.services[service.name]?.hiddenArticles || [];
}
function getServiceArticles(service) {
  return get_store_value(derived(Object.values(service.articles), (a) => a));
}

// src/undo.ts
var undoables = (() => {
  const { subscribe: subscribe3, update: update3 } = writable([]);
  return {
    subscribe: subscribe3,
    addCommand(undoable) {
      update3((u) => {
        u.unshift(undoable);
        return u;
      });
    },
    toggleDo(index) {
      update3((u) => {
        if (u[index].undid)
          u[index].redo();
        else
          u[index].undo();
        u[index].undid = !u[index].undid;
        return u;
      });
    }
  };
})();

// src/services/service.ts
var services = {};
function addArticles(service, ignoreRefs, ...articlesWithRefs) {
  const articles = ignoreRefs ? articlesWithRefs.map(getRootArticle) : articlesWithRefs.flatMap(articleWithRefToArray);
  for (const article of articles) {
    if (Object.hasOwn(service.articles, article.idPair.id)) {
      service.articles[article.idPair.id].update((a) => {
        a.update(article);
        return a;
      });
    } else {
      service.articles[article.idPair.id] = writable(article);
    }
  }
  updateCachedArticlesStorage();
}
function registerService(service) {
  services[service.name] = service;
}
function getServices() {
  return services;
}
function toggleMarkAsRead(idPair) {
  const store = getWritable(idPair);
  store.update((a) => {
    const oldValue = a.markedAsRead;
    a.markedAsRead = !a.markedAsRead;
    undoables.addCommand({
      undo: () => {
        store.update((a2) => {
          a2.markedAsRead = oldValue;
          return a2;
        });
      },
      redo: () => {
        store.update((a2) => {
          a2.markedAsRead = !oldValue;
          return a2;
        });
      },
      undid: false,
      text: `Article ${idPair.service}/${idPair.id} was marked as ${oldValue ? "unread" : "read"}`,
      articleIdPair: idPair
    });
    return a;
  });
  updateMarkAsReadStorage();
}
function toggleHide(idPair) {
  const store = getWritable(idPair);
  store.update((a) => {
    const oldValue = a.hidden;
    a.hidden = !a.hidden;
    undoables.addCommand({
      undo: () => {
        store.update((a2) => {
          a2.hidden = oldValue;
          return a2;
        });
      },
      redo: () => {
        store.update((a2) => {
          a2.hidden = !oldValue;
          return a2;
        });
      },
      undid: false,
      text: `Article ${idPair.service}/${idPair.id} was ${oldValue ? "unhidden" : "hidden"}`,
      articleIdPair: idPair
    });
    return a;
  });
  updateHiddenStorage();
}
function getWritable(idPair) {
  return services[idPair.service].articles[idPair.id];
}
async function fetchArticle(idPair) {
  const service = services[idPair.service];
  if (service.fetchArticle === void 0)
    return;
  if (service.fetchedArticles.has(idPair.id))
    return;
  if (service.fetchedArticleQueue > 5) {
    if (service.fetchTimeout === void 0) {
      service.fetchTimeout = window.setTimeout(() => {
        service.fetchedArticleQueue = 0;
        fetchArticle(idPair);
        updateCachedArticlesStorage();
        service.fetchTimeout = void 0;
      }, 1e3);
    }
    return;
  }
  service.fetchedArticles.add(idPair.id);
  ++service.fetchedArticleQueue;
  const store = getWritable(idPair);
  await service.fetchArticle(store);
}
function newService(name) {
  return {
    name,
    articles: {},
    endpointConstructors: [],
    userEndpoint: void 0,
    articleActions: {},
    keepArticle() {
      return true;
    },
    defaultFilter(filterType) {
      return { type: filterType, service: name };
    },
    filterTypes: {},
    sortMethods: {}
  };
}
function newFetchingService() {
  return {
    fetchedArticles: /* @__PURE__ */ new Set(),
    fetchedArticleQueue: 0,
    fetchTimeout: void 0
  };
}

// src/articles/index.ts
var Article = class {
  idPair;
  idPairStr;
  text;
  textHtml;
  author;
  creationTime;
  url;
  medias;
  markedAsRead;
  hidden;
  actualArticleRef;
  //readonly replyRef?: ArticleIdPair
  fetched;
  rawSource;
  constructor(params) {
    this.text = params.text;
    this.textHtml = params.textHtml;
    this.url = params.url;
    this.medias = params.medias || [];
    this.markedAsRead = params.markedAsRead || params.markedAsReadStorage.includes(params.id.toString());
    this.hidden = params.hidden || params.hiddenStorage.includes(params.id.toString());
    this.actualArticleRef = params.actualArticleRef;
    this.fetched = params.fetched || false;
    this.rawSource = params.rawSource;
    this.idPair = {
      service: this.constructor.service,
      id: params.id
    };
    this.idPairStr = `${this.idPair.service}/${params.id}`;
  }
  update(newArticle) {
    if (newArticle.creationTime !== void 0)
      this.creationTime = newArticle.creationTime;
  }
  //TODO Replace with dynamic action buttons
  //Currently only used to sort by likes
  getLikeCount() {
    return 0;
  }
  getLiked() {
    return false;
  }
  getRepostCount() {
    return 0;
  }
  getReposted() {
    return false;
  }
};
__publicField(Article, "service");
function idPairEqual(a, b) {
  return a.service === b.service && a.id === b.id;
}
function articleWithRefToArray(articleWithRefs) {
  switch (articleWithRefs.type) {
    case "normal":
      return [articleWithRefs.article];
    case "repost":
      return [articleWithRefs.article, ...articleWithRefToArray(articleWithRefs.reposted)];
    case "reposts":
      return [...articleWithRefs.reposts, ...articleWithRefToArray(articleWithRefs.reposted)];
    case "quote":
      return [articleWithRefs.article, ...articleWithRefToArray(articleWithRefs.quoted)];
  }
}
function getRootArticle(articleWithRefs) {
  switch (articleWithRefs.type) {
    case "reposts":
      return articleWithRefs.reposts[0];
    default:
      return articleWithRefs.article;
  }
}
function getActualArticle(articleWithRefs) {
  switch (articleWithRefs.type) {
    case "normal":
    case "quote":
      return articleWithRefs.article;
    case "repost":
    case "reposts":
      return getActualArticle(articleWithRefs.reposted);
  }
}
function deriveArticleRefs(article) {
  switch (article.actualArticleRef?.type) {
    case void 0:
      return readable({
        type: "normal",
        article
      });
    case "repost":
      return derived(
        getWritable(article.actualArticleRef.reposted),
        (repostedArticle) => ({
          type: "repost",
          article,
          reposted: deriveArticleRefs(repostedArticle)
        })
      );
    case "quote":
      return derived(
        getWritable(article.actualArticleRef.quoted),
        (quotedArticle) => ({
          type: "quote",
          article,
          quoted: deriveArticleRefs(quotedArticle)
        })
      );
  }
}
function getDerivedArticleWithRefs(a) {
  switch (a.type) {
    case "normal":
      return a;
    case "repost":
      return {
        ...a,
        reposted: getDerivedArticleWithRefs(get_store_value(a.reposted))
      };
    case "quote":
      return {
        ...a,
        quoted: getDerivedArticleWithRefs(get_store_value(a.quoted))
      };
  }
}
var MONTH_ABBREVS = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
function shortTimestamp(date) {
  const timeSince = Date.now() - date.getTime();
  if (timeSince < 1e3)
    return "just now";
  else if (timeSince < 6e4)
    return `${Math.floor(timeSince / 1e3)}s`;
  else if (timeSince < 36e5)
    return `${Math.floor(timeSince / 6e4)}m`;
  else if (timeSince < 864e5)
    return `${Math.floor(timeSince / 36e5)}h`;
  else if (timeSince < 6048e5)
    return `${Math.floor(timeSince / 864e5)}d`;
  else
    return `${MONTH_ABBREVS[date.getMonth()]} ${date.getDate()} ${date.getFullYear()}`;
}

// src/services/twitter/article.ts
var TwitterArticle = class extends Article {
  constructor(id, text2, textHtml, author, creationTime, markedAsReadStorage, hiddenStorage, actualArticleRef, medias, liked, likeCount, retweeted, retweetCount, rawSource) {
    super({
      id,
      url: `https://twitter.com/${author.username}/status/${id}`,
      text: text2,
      textHtml,
      medias,
      markedAsRead: false,
      hidden: false,
      markedAsReadStorage,
      hiddenStorage,
      actualArticleRef,
      //replyRef,
      rawSource
    });
    this.id = id;
    this.author = author;
    this.creationTime = creationTime;
    this.liked = liked;
    this.likeCount = likeCount;
    this.retweeted = retweeted;
    this.retweetCount = retweetCount;
  }
  deleted = false;
  get numberId() {
    return BigInt(this.id);
  }
  update(newArticle) {
    super.update(newArticle);
    this.deleted ||= newArticle.deleted;
  }
  getLikeCount() {
    return this.likeCount;
  }
  getLiked() {
    return this.liked;
  }
  getRepostCount() {
    return this.retweetCount;
  }
  getReposted() {
    return this.retweeted;
  }
};
__publicField(TwitterArticle, "service");

// src/services/extension.ts
var EXTENSION_ID_STORAGE_KEY = `${MAIN_STORAGE_KEY} Extension Id`;
var extensionContext = {
  id: localStorage.getItem(EXTENSION_ID_STORAGE_KEY),
  available: false,
  hasAccessToken: false
};
var extensionContextStore = writable(extensionContext);
extensionContextStore.subscribe((value) => {
  extensionContext = value;
});
async function fetchExtension(request, options) {
  if (extensionContext.id === null)
    throw new Error("No extension id");
  try {
    return await new Promise((resolve, reject) => {
      const timeout = 5e3;
      const timeoutId = setTimeout(() => reject(new Error(`Extension didn't respond in ${timeout} ms.`)), timeout);
      chrome.runtime.sendMessage(extensionContext.id, {
        soshalthing: true,
        request,
        ...options
      }, (response) => {
        clearTimeout(timeoutId);
        extensionContextStore.update((ctx) => {
          ctx.available = true;
          return ctx;
        });
        resolve(response);
      });
    });
  } catch (cause) {
    throw new Error(`Failed to fetch from extension
${JSON.stringify(cause, null, "	")}`);
  }
}
async function fetchExtensionService(service, request, url, method = "GET", body) {
  if (extensionContext.id === null)
    throw new Error("No extension id");
  try {
    return await new Promise((resolve, reject) => {
      const timeout = 5e3;
      const timeoutId = setTimeout(() => reject(new Error(`Extension didn't respond in ${timeout} ms.`)), timeout);
      chrome.runtime.sendMessage(extensionContext.id, {
        soshalthing: true,
        service,
        request,
        url,
        method,
        body
      }, (response) => {
        clearTimeout(timeoutId);
        extensionContextStore.update((ctx) => {
          ctx.available = true;
          return ctx;
        });
        resolve({
          //TODO Check for undefined response
          json: response.json,
          headers: new Headers(response.headers)
        });
      });
    });
  } catch (cause) {
    throw new Error(`Failed to fetch from extension
${JSON.stringify(cause, null, "	")}`);
  }
}
async function extensionCheck() {
  if (extensionContext.id === null)
    throw new Error("No extension id");
  try {
    return await new Promise((resolve, reject) => {
      const timeout = 3e3;
      const timeoutId = setTimeout(() => reject(new Error(`Extension didn't respond in ${timeout} ms.`)), timeout);
      chrome.runtime.sendMessage(extensionContext.id, {
        soshalthing: true,
        request: "extensionCheck"
      }, (response) => {
        clearTimeout(timeoutId);
        if (!response?.id) {
          extensionContextStore.set({
            id: extensionContext.id,
            available: false,
            hasAccessToken: false
          });
          console.error(response);
          reject(response);
        } else {
          extensionContextStore.set(response);
          localStorage.setItem(EXTENSION_ID_STORAGE_KEY, response.id);
          console.log("Extension available!");
          resolve(response);
        }
      });
    });
  } catch (cause) {
    console.dir(cause);
    extensionContextStore.set({
      id: extensionContext.id,
      available: false,
      hasAccessToken: false
    });
    return extensionContext;
  }
}

// src/services/twitter/apiV1.ts
function getV1APIURL(resource) {
  return `https://api.twitter.com/1.1/${resource}.json`;
}
function articleFromV1(json, isRef = false) {
  const rawText = json.full_text ?? json.text;
  const { text: text2, textHtml } = parseText(rawText, json.entities, json.extended_entities);
  let actualArticleRefIdPair;
  const makeArticle = () => new TwitterArticle(
    BigInt(json.id_str),
    text2,
    textHtml,
    {
      id: json.user.id_str,
      name: json.user.name,
      username: json.user.screen_name,
      url: "https://twitter.com/" + json.user.screen_name,
      avatarUrl: json.user.profile_image_url_https
    },
    new Date(json.created_at),
    getMarkedAsReadStorage(TwitterService),
    getHiddenStorage(TwitterService),
    actualArticleRefIdPair,
    parseMedia(json.extended_entities),
    json.favorited,
    json.favorite_count,
    json.retweeted,
    json.retweet_count,
    json
  );
  if (json.retweeted_status !== void 0) {
    const retweeted = articleFromV1(json.retweeted_status, true);
    if (retweeted.type === "quote") {
      actualArticleRefIdPair = {
        type: "quote",
        quoted: retweeted.quoted.article.idPair
      };
    } else {
      actualArticleRefIdPair = {
        type: "repost",
        reposted: getRootArticle(retweeted).idPair
      };
    }
    return {
      type: "repost",
      article: makeArticle(),
      reposted: retweeted
    };
  } else if (json.is_quote_status) {
    if (json.quoted_status) {
      const quoted = articleFromV1(json.quoted_status, true);
      actualArticleRefIdPair = {
        type: "quote",
        quoted: getRootArticle(quoted).idPair
      };
      return {
        type: "quote",
        article: makeArticle(),
        quoted
      };
    } else {
      if (!isRef) {
        if (json.quoted_status_id_str)
          console.warn("Quote tweet doesn't include quoted tweet, need to get the tweet from service", json);
        else
          console.error("is_quote_status true, but no quote info", json);
      }
    }
  }
  return {
    type: "normal",
    article: makeArticle()
  };
}
async function toggleFavorite(idPair) {
  const writable2 = getWritable(idPair);
  const action = get_store_value(writable2).liked ? "destroy" : "create";
  try {
    const response = await fetchExtensionV1(
      `${getV1APIURL("favorites/" + action)}?id=${idPair.id}`,
      "POST"
    );
    updateAPIResponse(response.json);
  } catch (cause) {
    let shouldThrow = true;
    if (cause.errors !== void 0) {
      for (const err of cause.errors)
        switch (err.code) {
          case 139:
            console.warn(cause);
            writable2.update((a) => {
              a.liked = true;
              return a;
            });
            if (cause.errors.length === 1)
              shouldThrow = false;
            break;
          case 144:
            writable2.update((a) => {
              a.deleted = true;
              return a;
            });
            if (cause.errors.length === 1)
              shouldThrow = false;
            break;
        }
    }
    if (shouldThrow)
      throw new Error(JSON.stringify(cause, null, "	"));
  }
}
async function retweet(idPair) {
  const writable2 = TwitterService.articles[idPair.id];
  if (get_store_value(writable2).retweeted)
    return;
  try {
    const response = await fetchExtensionV1(
      `${getV1APIURL("statuses/retweet")}?id=${idPair.id}`,
      "POST"
    );
    updateAPIResponse(response.json);
  } catch (err) {
    if (err.errors !== void 0) {
      if (err.errors.some((e) => e.code === 144)) {
        writable2.update((a) => {
          a.deleted = true;
          return a;
        });
        if (err.errors.length === 1)
          return;
      }
    }
    throw new Error(err);
  }
}
async function fetchExtensionV1(url, method = "GET", body) {
  const response = await fetchExtensionService(
    TwitterService.name,
    "fetchV1",
    url,
    method,
    body
  );
  if (response.json.errors !== void 0)
    return Promise.reject(response.json);
  return response;
}
function updateAPIResponse(response) {
  if (TwitterService.articles[response.id_str] === void 0)
    addArticles(TwitterService, true, articleFromV1(response));
  const writable2 = getWritable({ service: TwitterService.name, id: BigInt(response.id_str) });
  writable2.update((a) => {
    a.liked = response.favorited;
    a.likeCount = response.favorite_count;
    a.retweeted = response.retweeted;
    a.retweetCount = response.retweet_count;
    return a;
  });
  if (response.retweeted_status) {
    if (TwitterService.articles[response.retweeted_status.id_str])
      updateAPIResponse(response.retweeted_status);
    else
      addArticles(TwitterService, false, articleFromV1(response.retweeted_status));
  }
  if (response.quoted_status)
    if (TwitterService.articles[response.quoted_status.id_str])
      updateAPIResponse(response.quoted_status);
    else
      addArticles(TwitterService, false, articleFromV1(response.quoted_status));
}
function parseText(rawText, entities, extendedEntities) {
  let trimmedText = rawText;
  const mediaUrls = extendedEntities?.media.map((media) => media.url) || [];
  for (const url of mediaUrls) {
    trimmedText = trimmedText.replace(url, "");
  }
  let finalText = trimmedText;
  const htmlParts = [];
  for (const { display_url, expanded_url, indices, url } of entities.urls) {
    finalText = finalText.replace(url, display_url);
    htmlParts.push([indices, `<a href='${expanded_url}'>${display_url}</a>`]);
  }
  for (const { indices, text: text2 } of entities.hashtags) {
    htmlParts.push([indices, `<a href='https://twitter.com/hashtag/${text2}'>#${text2}</a>`]);
  }
  for (const { indices, screen_name } of entities.user_mentions) {
    htmlParts.push([indices, `<a href='https://twitter.com/${screen_name}'>@${screen_name}</a>`]);
  }
  finalText = finalText.trim();
  if (htmlParts.length) {
    htmlParts.sort(([[a]], [[b]]) => a - b);
    let i = 0;
    const length = trimmedText.length;
    let newHtmlParts = "";
    const lastIndex = htmlParts.at(-1)[0][1];
    for (const [[first, last], html] of htmlParts) {
      if (i < first)
        newHtmlParts += [...rawText].slice(i, first).join("");
      newHtmlParts += html;
      i = last;
    }
    if (i < length - 1)
      newHtmlParts += [...trimmedText].slice(lastIndex).join("");
    return {
      text: finalText,
      textHtml: newHtmlParts
    };
  } else {
    return {
      text: finalText,
      textHtml: finalText
    };
  }
}
function parseMedia(extendedEntities) {
  return extendedEntities?.media.map((media) => {
    switch (media.type) {
      case "photo":
        return {
          mediaType: 0 /* Image */,
          src: media.media_url_https,
          ratio: getRatio(media.sizes.large.w, media.sizes.large.h),
          queueLoadInfo: 0 /* DirectLoad */
        };
      case "video":
        return getMP4(media.video_info, 1 /* Video */);
      case "animated_gif":
        return getMP4(media.video_info, 2 /* VideoGif */);
    }
  }) || [];
}
function getMP4(videoInfo, mediaType) {
  const variant = videoInfo.variants.find((v) => v.content_type === "video/mp4");
  if (variant === void 0)
    throw Error("Couldn't find video/mp4 variant.");
  return {
    mediaType,
    src: variant.url,
    ratio: getRatio(videoInfo.aspect_ratio[0], videoInfo.aspect_ratio[1]),
    queueLoadInfo: 0 /* DirectLoad */
  };
}
function parseRateLimitInfo(headers) {
  const limit = headers.get("x-rate-limit-limit");
  if (limit === null)
    throw new Error("Missing x-rate-limit-limit header.\n" + JSON.stringify(Object.fromEntries(headers.entries()), null, "	"));
  const remaining = headers.get("x-rate-limit-remaining");
  if (remaining === null)
    throw new Error("Missing x-rate-limit-remaining header.\n" + JSON.stringify(Object.fromEntries(headers.entries()), null, "	"));
  const reset = headers.get("x-rate-limit-reset");
  if (reset === null)
    throw new Error("Missing x-rate-limit-reset header.\n" + JSON.stringify(Object.fromEntries(headers.entries()), null, "	"));
  return {
    limit: parseInt(limit),
    remaining: parseInt(remaining),
    reset: parseInt(reset)
  };
}

// node_modules/@fortawesome/free-regular-svg-icons/index.mjs
var faHeart2 = {
  prefix: "far",
  iconName: "heart",
  icon: [512, 512, [128153, 128154, 128155, 128156, 128420, 129293, 129294, 129505, 9829, 10084, 61578], "f004", "M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8v-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5v3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20c0 0-.1-.1-.1-.1c0 0 0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5v3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2v-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z"]
};

// src/services/actions.ts
var STANDARD_ACTIONS = {
  like: {
    key: "like",
    name: "Like",
    icon: faHeart2,
    color: "#e0245e",
    togglable: true,
    actionnedIcon: faHeart,
    index: 2
  },
  repost: {
    key: "repost",
    name: "Repost",
    icon: faRetweet,
    color: "#17bf63",
    togglable: false,
    index: 1
  },
  markAsRead: {
    key: "markAsRead",
    name: "Mark as read",
    icon: faEyeSlash,
    actionnedIcon: faEye,
    togglable: true,
    index: 3
  },
  hide: {
    key: "hide",
    name: "Hide",
    togglable: true,
    index: 4
  }
};
function articleAction(action, idPair) {
  switch (action) {
    case STANDARD_ACTIONS.markAsRead.key:
      toggleMarkAsRead(idPair);
      break;
    case STANDARD_ACTIONS.hide.key:
      toggleHide(idPair);
      break;
    default:
      if (Object.hasOwn(getServices()[idPair.service].articleActions, action))
        getServices()[idPair.service].articleActions[action].action(idPair);
      else
        console.warn(`${idPair.service} doesn't have action ${action}.`);
  }
}

// src/services/twitter/service.ts
var TwitterService = {
  ...newService("Twitter"),
  articleActions: {
    [STANDARD_ACTIONS.like.key]: {
      ...STANDARD_ACTIONS.like,
      action: toggleFavorite,
      actionned(article) {
        return article.liked;
      },
      disabled(article) {
        return article.deleted;
      },
      count(article) {
        return article.likeCount;
      }
    },
    [STANDARD_ACTIONS.repost.key]: {
      ...STANDARD_ACTIONS.repost,
      togglable: false,
      action: retweet,
      actionned(article) {
        return article.retweeted;
      },
      disabled(article) {
        return article.deleted;
      },
      count(article) {
        return article.retweetCount;
      }
    }
  },
  keepArticle(articleWithRefs, index, filter) {
    if (getRootArticle(articleWithRefs).constructor.service !== "Twitter")
      return true;
    switch (filter.type) {
      case "notDeleted":
        return !getRootArticle(articleWithRefs).deleted;
      default:
        return true;
    }
  }
};
TwitterArticle.service = TwitterService.name;
registerService(TwitterService);

// src/services/twitter/page.ts
function parseHTMLArticle(article) {
  for (const span of article.getElementsByTagName("span")) {
    if (span.textContent === "Ad")
      return null;
  }
  const anchors = article.getElementsByTagName("a");
  const timestamp = article.getElementsByTagName("time")[0];
  const timestampAnchor = timestamp.parentElement;
  const id = BigInt(timestampAnchor.href.split("/").pop());
  const text2 = article.querySelector('div[data-testid="tweetText"]').textContent;
  const nameSpans = article.querySelectorAll('a[role="link"] span');
  let nameIndex = 1;
  if (nameSpans[0].textContent?.endsWith(" reposted"))
    nameIndex = 4;
  const authorName = nameSpans[nameIndex].textContent;
  const authorId = [...nameSpans].find((span) => span.textContent?.startsWith("@")).textContent.slice(1);
  const avatar = article.querySelector('div[data-testid="Tweet-User-Avatar"] img');
  const authorAvatarUrl = avatar.src;
  const time = new Date(timestamp.dateTime);
  const medias = [...article.querySelectorAll('div[data-testid="tweetPhoto"] img')].map((img) => {
    return {
      src: img.src,
      ratio: null,
      queueLoadInfo: 0 /* DirectLoad */,
      mediaType: 0 /* Image */
    };
  });
  return {
    type: "normal",
    article: new TwitterArticle(
      id,
      text2,
      text2,
      {
        username: authorId,
        avatarUrl: authorAvatarUrl,
        name: authorName,
        url: `https://twitter.com/${authorId}`,
        //TODO Pass null for author id
        id: "TODO"
      },
      time,
      [],
      [],
      void 0,
      medias,
      false,
      0,
      false,
      0,
      article
    )
  };
}

// src/services/twitter/endpoints.ts
var V1Endpoint = class extends Endpoint {
  service = TwitterService.name;
  constructor() {
    super(/* @__PURE__ */ new Set([
      0 /* RefreshStart */,
      1 /* Refresh */,
      3 /* LoadBottom */
    ]));
  }
  async refresh(refreshType) {
    const url = new URL(getV1APIURL(this.resource));
    this.setSearchParams(url, refreshType);
    try {
      return await this.fetchTweets(url);
    } catch (errorResponse) {
      console.error("Error fetching", errorResponse);
      return [];
    }
  }
  setSearchParams(url, refreshType) {
    url.searchParams.set("include_entities", "true");
    url.searchParams.set("tweet_mode", "extended");
    if (this.articleIdPairs.length && refreshType === 3 /* LoadBottom */)
      url.searchParams.set("max_id", this.articleIdPairs.reduce((acc, curr) => curr.id < acc.id ? curr : acc).id.toString());
    if (this.articleIdPairs.length && refreshType === 2 /* LoadTop */)
      url.searchParams.set("since_id", this.articleIdPairs.reduce((acc, curr) => curr.id > acc.id ? curr : acc).id.toString());
    if (this.articleIdPairs.length)
      url.searchParams.set("count", this.maxCount.toString());
  }
  async fetchTweets(url) {
    const { json, headers } = await fetchExtensionV1(url.toString());
    this.rateLimitInfo = parseRateLimitInfo(headers);
    return json.map((a) => articleFromV1(a));
  }
};
var _HomeTimelineEndpoint = class extends V1Endpoint {
  name = "Home Timeline";
  resource = "statuses/home_timeline";
  maxCount = 200;
  //Default 20
  autoRefreshInterval = 9e4;
  //Min 60_000
  matchParams(_params) {
    return true;
  }
};
var HomeTimelineEndpoint = _HomeTimelineEndpoint;
__publicField(HomeTimelineEndpoint, "constructorInfo", {
  name: "HomeTimelineEndpoint",
  paramTemplate: [],
  constructor: () => new _HomeTimelineEndpoint()
});
var _UserTimelineEndpoint = class extends V1Endpoint {
  //Min 1000
  constructor(username, includeRetweets) {
    super();
    this.username = username;
    this.includeRetweets = includeRetweets;
    this.name = `User Timeline ${this.username}`;
  }
  name;
  resource = "statuses/user_timeline";
  maxCount = 200;
  autoRefreshInterval = 6e4;
  setSearchParams(url, refreshType) {
    super.setSearchParams(url, refreshType);
    url.searchParams.set("screen_name", this.username);
    url.searchParams.set("include_rts", this.includeRetweets.toString());
  }
  matchParams(params) {
    return params.username === this.username;
  }
};
var UserTimelineEndpoint = _UserTimelineEndpoint;
__publicField(UserTimelineEndpoint, "constructorInfo", {
  name: "UserTimelineEndpoint",
  paramTemplate: [["username", ""], ["includeRetweets", true]],
  constructor: (params) => new _UserTimelineEndpoint(params.username, params.includeRetweets)
});
var _ListEndpoint = class extends V1Endpoint {
  //Min 1000
  constructor(identifier, includeRetweets) {
    super();
    this.identifier = identifier;
    this.includeRetweets = includeRetweets;
    switch (identifier.type) {
      case "id":
        this.name = `List Endpoint ${identifier.id}`;
        break;
      case "slug":
        this.name = `List Endpoint ${identifier.username}/${identifier.slug}`;
        break;
    }
  }
  name;
  resource = "lists/statuses";
  maxCount = 200;
  //Not mentionned, assuming 200
  autoRefreshInterval = 6e4;
  setSearchParams(url, refreshType) {
    super.setSearchParams(url, refreshType);
    switch (this.identifier.type) {
      case "id":
        url.searchParams.set("list_id", this.identifier.id);
        break;
      case "slug":
        url.searchParams.set("owner_screen_name", this.identifier.username);
        url.searchParams.set("slug", this.identifier.slug);
        break;
    }
    url.searchParams.set("include_rts", this.includeRetweets.toString());
  }
  matchParams(params) {
    switch (this.identifier.type) {
      case "id":
        return params.id === this.identifier.id;
      case "slug":
        return params.username === this.identifier.username && params.slug === this.identifier.slug;
    }
  }
};
var ListEndpoint = _ListEndpoint;
__publicField(ListEndpoint, "constructorInfo", {
  name: "ListEndpoint",
  paramTemplate: [
    ["username", ""],
    ["slug", ""],
    ["id", ""],
    ["includeRetweets", true]
  ],
  constructor: (params) => new _ListEndpoint(
    params.id ? {
      type: "id",
      id: params.id
    } : {
      type: "slug",
      username: params.username,
      slug: params.slug
    },
    params.includeRetweets
  )
});
var _LikesEndpoint = class extends V1Endpoint {
  //Min 12_000
  constructor(username) {
    super();
    this.username = username;
    this.name = `Likes ${this.username}`;
  }
  name;
  resource = "favorites/list";
  maxCount = 200;
  //Default 20
  autoRefreshInterval = 6e4;
  setSearchParams(url, refreshType) {
    super.setSearchParams(url, refreshType);
    url.searchParams.set("screen_name", this.username);
  }
  matchParams(params) {
    return params.username === this.username;
  }
};
var LikesEndpoint = _LikesEndpoint;
__publicField(LikesEndpoint, "constructorInfo", {
  name: "LikesEndpoint",
  paramTemplate: [["username", ""]],
  constructor: (params) => new _LikesEndpoint(params.username)
});
var _SearchEndpoint = class extends V1Endpoint {
  //Min 5000
  constructor(query) {
    super();
    this.query = query;
    this.name = `Search ${this.query}`;
  }
  name;
  resource = "search/tweets";
  maxCount = 100;
  //Default 15
  autoRefreshInterval = 6e4;
  setSearchParams(url, refreshType) {
    super.setSearchParams(url, refreshType);
    url.searchParams.set("q", this.query);
    url.searchParams.set("result_type", "recent");
    url.searchParams.set("include_entities", "true");
  }
  async fetchTweets(url) {
    const { json, headers } = await fetchExtensionV1(url.toString());
    this.rateLimitInfo = parseRateLimitInfo(headers);
    return json.statuses.map((a) => articleFromV1(a));
  }
  matchParams(params) {
    return params.query === this.query;
  }
};
var SearchEndpoint = _SearchEndpoint;
__publicField(SearchEndpoint, "constructorInfo", {
  name: "SearchEndpoint",
  paramTemplate: [["query", ""]],
  constructor: (params) => new _SearchEndpoint(params.query)
});
var _TwitterHomeEndpoint = class extends Endpoint {
  service = TwitterService.name;
  name = "Home Page";
  async refresh(_refreshType) {
    const listTabsResponse = await fetchExtension("listTabs", { query: { url: "*://twitter.com/*" } });
    let tabId;
    if (Array.isArray(listTabsResponse) && listTabsResponse.length > 0)
      tabId = listTabsResponse[0].id;
    else
      throw new Error("No Twitter tab found");
    const pageResponse = await fetchExtension("twitterFetch", { tabId, message: {
      soshalthing: true,
      request: "getPageHTML"
    } });
    const html = document.createElement("html");
    html.innerHTML = pageResponse;
    const articlesHTML = html.getElementsByTagName("article");
    const articles = [];
    for (const articleHTML of articlesHTML) {
      try {
        const article = parseHTMLArticle(articleHTML);
        if (article === null)
          continue;
        articles.push(article);
      } catch (error) {
        console.error("Error parsing article", error, articleHTML);
      }
    }
    return articles;
  }
  matchParams(_params) {
    return true;
  }
};
var TwitterHomeEndpoint = _TwitterHomeEndpoint;
__publicField(TwitterHomeEndpoint, "constructorInfo", {
  name: "TwitterHomeEndpoint",
  paramTemplate: [],
  constructor: (_params) => new _TwitterHomeEndpoint()
});
TwitterService.endpointConstructors.push(
  HomeTimelineEndpoint.constructorInfo,
  UserTimelineEndpoint.constructorInfo,
  ListEndpoint.constructorInfo,
  LikesEndpoint.constructorInfo,
  SearchEndpoint.constructorInfo,
  TwitterHomeEndpoint.constructorInfo
);
TwitterService.userEndpoint = (user) => new UserTimelineEndpoint(user.username, false);

// node_modules/@fortawesome/free-brands-svg-icons/index.mjs
var faGithub = {
  prefix: "fab",
  iconName: "github",
  icon: [496, 512, [], "f09b", "M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"]
};

// src/sidebar/MediaLoader.svelte
var file14 = "src/sidebar/MediaLoader.svelte";
function get_each_context7(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[1] = list[i];
  return child_ctx;
}
function get_each_context_13(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[1] = list[i];
  return child_ctx;
}
function create_else_block_13(ctx) {
  let t;
  const block = {
    c: function create() {
      t = text("No media currently loading");
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    p: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block_13.name,
    type: "else",
    source: "(12:1) {:else}",
    ctx
  });
  return block;
}
function create_if_block_18(ctx) {
  let t;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let each_1_anchor;
  let each_value_1 = [.../*$loadingStore*/
  ctx[0].loadings];
  validate_each_argument(each_value_1);
  const get_key = (ctx2) => (
    /*idPair*/
    ctx2[1]
  );
  validate_each_keys(ctx, each_value_1, get_each_context_13, get_key);
  for (let i = 0; i < each_value_1.length; i += 1) {
    let child_ctx = get_each_context_13(ctx, each_value_1, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block_13(key, child_ctx));
  }
  const block = {
    c: function create() {
      t = text("Currently loading:\n		");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      each_1_anchor = empty();
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, each_1_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*$loadingStore*/
      1) {
        each_value_1 = [.../*$loadingStore*/
        ctx2[0].loadings];
        validate_each_argument(each_value_1);
        validate_each_keys(ctx2, each_value_1, get_each_context_13, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value_1, each_1_lookup, each_1_anchor.parentNode, destroy_block, create_each_block_13, each_1_anchor, get_each_context_13);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d(detaching);
      }
      if (detaching)
        detach_dev(each_1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_18.name,
    type: "if",
    source: "(7:1) {#if $loadingStore.loadings.length}",
    ctx
  });
  return block;
}
function create_each_block_13(key_1, ctx) {
  let t_value = (
    /*idPair*/
    ctx[1] + ""
  );
  let t;
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      t = text(t_value);
      this.first = t;
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty & /*$loadingStore*/
      1 && t_value !== (t_value = /*idPair*/
      ctx[1] + ""))
        set_data_dev(t, t_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_13.name,
    type: "each",
    source: "(9:2) {#each [...$loadingStore.loadings] as idPair (idPair)}",
    ctx
  });
  return block;
}
function create_else_block7(ctx) {
  let t;
  const block = {
    c: function create() {
      t = text("No media currently queued");
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    p: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block7.name,
    type: "else",
    source: "(22:1) {:else}",
    ctx
  });
  return block;
}
function create_if_block9(ctx) {
  let t;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let each_1_anchor;
  let each_value = [.../*$loadingStore*/
  ctx[0].queue];
  validate_each_argument(each_value);
  const get_key = (ctx2) => (
    /*idPair*/
    ctx2[1]
  );
  validate_each_keys(ctx, each_value, get_each_context7, get_key);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context7(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block7(key, child_ctx));
  }
  const block = {
    c: function create() {
      t = text("Currently queued:\n		");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      each_1_anchor = empty();
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, each_1_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*$loadingStore*/
      1) {
        each_value = [.../*$loadingStore*/
        ctx2[0].queue];
        validate_each_argument(each_value);
        validate_each_keys(ctx2, each_value, get_each_context7, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, each_1_anchor.parentNode, destroy_block, create_each_block7, each_1_anchor, get_each_context7);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d(detaching);
      }
      if (detaching)
        detach_dev(each_1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block9.name,
    type: "if",
    source: "(17:1) {#if $loadingStore.queue.length}",
    ctx
  });
  return block;
}
function create_each_block7(key_1, ctx) {
  let t_value = (
    /*idPair*/
    ctx[1] + ""
  );
  let t;
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      t = text(t_value);
      this.first = t;
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty & /*$loadingStore*/
      1 && t_value !== (t_value = /*idPair*/
      ctx[1] + ""))
        set_data_dev(t, t_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block7.name,
    type: "each",
    source: "(19:2) {#each [...$loadingStore.queue] as idPair (idPair)}",
    ctx
  });
  return block;
}
function create_fragment14(ctx) {
  let button0;
  let t1;
  let button1;
  let t3;
  let div0;
  let t4;
  let div1;
  let mounted;
  let dispose;
  function select_block_type(ctx2, dirty) {
    if (
      /*$loadingStore*/
      ctx2[0].loadings.length
    )
      return create_if_block_18;
    return create_else_block_13;
  }
  let current_block_type = select_block_type(ctx, -1);
  let if_block0 = current_block_type(ctx);
  function select_block_type_1(ctx2, dirty) {
    if (
      /*$loadingStore*/
      ctx2[0].queue.length
    )
      return create_if_block9;
    return create_else_block7;
  }
  let current_block_type_1 = select_block_type_1(ctx, -1);
  let if_block1 = current_block_type_1(ctx);
  const block = {
    c: function create() {
      button0 = element("button");
      button0.textContent = "Clear loadings";
      t1 = space();
      button1 = element("button");
      button1.textContent = "Clear queue";
      t3 = space();
      div0 = element("div");
      if_block0.c();
      t4 = space();
      div1 = element("div");
      if_block1.c();
      add_location(button0, file14, 3, 0, 85);
      add_location(button1, file14, 4, 0, 155);
      attr_dev(div0, "class", "box");
      add_location(div0, file14, 5, 0, 219);
      attr_dev(div1, "class", "box");
      add_location(div1, file14, 15, 0, 426);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, button0, anchor);
      insert_dev(target, t1, anchor);
      insert_dev(target, button1, anchor);
      insert_dev(target, t3, anchor);
      insert_dev(target, div0, anchor);
      if_block0.m(div0, null);
      insert_dev(target, t4, anchor);
      insert_dev(target, div1, anchor);
      if_block1.m(div1, null);
      if (!mounted) {
        dispose = [
          listen_dev(button0, "click", loadingStore.clearLoadings, false, false, false, false),
          listen_dev(button1, "click", loadingStore.clearQueue, false, false, false, false)
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, [dirty]) {
      if (current_block_type === (current_block_type = select_block_type(ctx2, dirty)) && if_block0) {
        if_block0.p(ctx2, dirty);
      } else {
        if_block0.d(1);
        if_block0 = current_block_type(ctx2);
        if (if_block0) {
          if_block0.c();
          if_block0.m(div0, null);
        }
      }
      if (current_block_type_1 === (current_block_type_1 = select_block_type_1(ctx2, dirty)) && if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1.d(1);
        if_block1 = current_block_type_1(ctx2);
        if (if_block1) {
          if_block1.c();
          if_block1.m(div1, null);
        }
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button0);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(button1);
      if (detaching)
        detach_dev(t3);
      if (detaching)
        detach_dev(div0);
      if_block0.d();
      if (detaching)
        detach_dev(t4);
      if (detaching)
        detach_dev(div1);
      if_block1.d();
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment14.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance14($$self, $$props, $$invalidate) {
  let $loadingStore;
  validate_store(loadingStore, "loadingStore");
  component_subscribe($$self, loadingStore, ($$value) => $$invalidate(0, $loadingStore = $$value));
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("MediaLoader", slots, []);
  const writable_props = [];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<MediaLoader> was created with unknown prop '${key}'`);
  });
  $$self.$capture_state = () => ({ loadingStore, $loadingStore });
  return [$loadingStore];
}
var MediaLoader = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance14, create_fragment14, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "MediaLoader",
      options,
      id: create_fragment14.name
    });
  }
};
var MediaLoader_default = MediaLoader;

// src/sidebar/Undoables.svelte
var file15 = "src/sidebar/Undoables.svelte";
function get_each_context8(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[4] = list[i];
  child_ctx[6] = i;
  return child_ctx;
}
function create_else_block8(ctx) {
  let t;
  const block = {
    c: function create() {
      t = text("Nothing to undo");
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block8.name,
    type: "else",
    source: "(24:1) {:else}",
    ctx
  });
  return block;
}
function create_each_block8(key_1, ctx) {
  let p;
  let t0_value = (
    /*undoable*/
    ctx[4].text + ""
  );
  let t0;
  let t1;
  let button;
  let t2_value = (
    /*undoable*/
    ctx[4].undid ? "Redo" : "Undo"
  );
  let t2;
  let t3;
  let mounted;
  let dispose;
  function click_handler() {
    return (
      /*click_handler*/
      ctx[3](
        /*index*/
        ctx[6]
      )
    );
  }
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      p = element("p");
      t0 = text(t0_value);
      t1 = space();
      button = element("button");
      t2 = text(t2_value);
      t3 = space();
      add_location(p, file15, 19, 3, 545);
      add_location(button, file15, 20, 3, 571);
      this.first = p;
    },
    m: function mount(target, anchor) {
      insert_dev(target, p, anchor);
      append_dev(p, t0);
      insert_dev(target, t1, anchor);
      insert_dev(target, button, anchor);
      append_dev(button, t2);
      append_dev(button, t3);
      if (!mounted) {
        dispose = listen_dev(button, "click", click_handler, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty & /*$undoables*/
      1 && t0_value !== (t0_value = /*undoable*/
      ctx[4].text + ""))
        set_data_dev(t0, t0_value);
      if (dirty & /*$undoables*/
      1 && t2_value !== (t2_value = /*undoable*/
      ctx[4].undid ? "Redo" : "Undo"))
        set_data_dev(t2, t2_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(p);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(button);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block8.name,
    type: "each",
    source: "(19:1) {#each [...$undoables] as undoable, index (`${undoable.text}",
    ctx
  });
  return block;
}
function create_fragment15(ctx) {
  let div;
  let button;
  let t1;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let mounted;
  let dispose;
  let each_value = [.../*$undoables*/
  ctx[0]];
  validate_each_argument(each_value);
  const get_key = (ctx2) => `${/*undoable*/
  ctx2[4].text}/${/*index*/
  ctx2[6]}`;
  validate_each_keys(ctx, each_value, get_each_context8, get_key);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context8(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block8(key, child_ctx));
  }
  let each_1_else = null;
  if (!each_value.length) {
    each_1_else = create_else_block8(ctx);
  }
  const block = {
    c: function create() {
      div = element("div");
      button = element("button");
      button.textContent = "Open Timeline";
      t1 = space();
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      if (each_1_else) {
        each_1_else.c();
      }
      add_location(button, file15, 14, 1, 377);
      attr_dev(div, "class", "box");
      add_location(div, file15, 13, 0, 358);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, button);
      append_dev(div, t1);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div, null);
        }
      }
      if (each_1_else) {
        each_1_else.m(div, null);
      }
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*modalTimeline*/
          ctx[1],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*undoables, $undoables*/
      1) {
        each_value = [.../*$undoables*/
        ctx2[0]];
        validate_each_argument(each_value);
        validate_each_keys(ctx2, each_value, get_each_context8, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, div, destroy_block, create_each_block8, null, get_each_context8);
        if (each_value.length) {
          if (each_1_else) {
            each_1_else.d(1);
            each_1_else = null;
          }
        } else if (!each_1_else) {
          each_1_else = create_else_block8(ctx2);
          each_1_else.c();
          each_1_else.m(div, null);
        }
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
      if (each_1_else)
        each_1_else.d();
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment15.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance15($$self, $$props, $$invalidate) {
  let $undoables;
  validate_store(undoables, "undoables");
  component_subscribe($$self, undoables, ($$value) => $$invalidate(0, $undoables = $$value));
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("Undoables", slots, []);
  let { setModalTimeline } = $$props;
  function modalTimeline() {
    setModalTimeline({
      ...defaultTimeline(get_store_value(undoables).map((u) => u.articleIdPair)),
      title: "Undoables",
      filters: []
    });
  }
  $$self.$$.on_mount.push(function() {
    if (setModalTimeline === void 0 && !("setModalTimeline" in $$props || $$self.$$.bound[$$self.$$.props["setModalTimeline"]])) {
      console.warn("<Undoables> was created without expected prop 'setModalTimeline'");
    }
  });
  const writable_props = ["setModalTimeline"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<Undoables> was created with unknown prop '${key}'`);
  });
  const click_handler = (index) => undoables.toggleDo(index);
  $$self.$$set = ($$props2) => {
    if ("setModalTimeline" in $$props2)
      $$invalidate(2, setModalTimeline = $$props2.setModalTimeline);
  };
  $$self.$capture_state = () => ({
    undoables,
    defaultTimeline,
    get: get_store_value,
    setModalTimeline,
    modalTimeline,
    $undoables
  });
  $$self.$inject_state = ($$props2) => {
    if ("setModalTimeline" in $$props2)
      $$invalidate(2, setModalTimeline = $$props2.setModalTimeline);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [$undoables, modalTimeline, setModalTimeline, click_handler];
}
var Undoables = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance15, create_fragment15, safe_not_equal, { setModalTimeline: 2 });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Undoables",
      options,
      id: create_fragment15.name
    });
  }
  get setModalTimeline() {
    throw new Error("<Undoables>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set setModalTimeline(value) {
    throw new Error("<Undoables>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var Undoables_default = Undoables;

// src/sidebar/EndpointOptions.svelte
var file16 = "src/sidebar/EndpointOptions.svelte";
function get_if_ctx2(ctx) {
  const child_ctx = ctx.slice();
  const constants_0 = Math.ceil(
    /*$endpoint*/
    (child_ctx[1].rateLimitInfo.reset * 1e3 - Date.now()) / 6e4
  );
  child_ctx[5] = constants_0;
  return child_ctx;
}
function create_if_block_19(ctx) {
  let progress;
  let t0_value = `${Math.fround(
    /*$endpoint*/
    ctx[1].rateLimitInfo.remaining / /*$endpoint*/
    ctx[1].rateLimitInfo.limit * 1e3
  ) / 10}%`;
  let t0;
  let progress_value_value;
  let progress_max_value;
  let t1;
  let t2_value = `${/*timeLeft*/
  ctx[5]} minutes until reset`;
  let t2;
  const block = {
    c: function create() {
      progress = element("progress");
      t0 = text(t0_value);
      t1 = space();
      t2 = text(t2_value);
      attr_dev(progress, "class", "progress");
      progress.value = progress_value_value = /*$endpoint*/
      ctx[1].rateLimitInfo.remaining;
      attr_dev(progress, "max", progress_max_value = /*$endpoint*/
      ctx[1].rateLimitInfo.limit);
      add_location(progress, file16, 9, 2, 369);
    },
    m: function mount(target, anchor) {
      insert_dev(target, progress, anchor);
      append_dev(progress, t0);
      insert_dev(target, t1, anchor);
      insert_dev(target, t2, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*$endpoint*/
      2 && t0_value !== (t0_value = `${Math.fround(
        /*$endpoint*/
        ctx2[1].rateLimitInfo.remaining / /*$endpoint*/
        ctx2[1].rateLimitInfo.limit * 1e3
      ) / 10}%`))
        set_data_dev(t0, t0_value);
      if (dirty & /*$endpoint*/
      2 && progress_value_value !== (progress_value_value = /*$endpoint*/
      ctx2[1].rateLimitInfo.remaining)) {
        prop_dev(progress, "value", progress_value_value);
      }
      if (dirty & /*$endpoint*/
      2 && progress_max_value !== (progress_max_value = /*$endpoint*/
      ctx2[1].rateLimitInfo.limit)) {
        attr_dev(progress, "max", progress_max_value);
      }
      if (dirty & /*$endpoint*/
      2 && t2_value !== (t2_value = `${/*timeLeft*/
      ctx2[5]} minutes until reset`))
        set_data_dev(t2, t2_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(progress);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(t2);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_19.name,
    type: "if",
    source: "(8:1) {#if $endpoint.rateLimitInfo !== null}",
    ctx
  });
  return block;
}
function create_else_block9(ctx) {
  let div0;
  let button0;
  let t1;
  let div1;
  let input;
  let t2;
  let div2;
  let button1;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      div0 = element("div");
      button0 = element("button");
      button0.textContent = "Auto refresh";
      t1 = space();
      div1 = element("div");
      input = element("input");
      t2 = space();
      div2 = element("div");
      button1 = element("button");
      button1.textContent = "ms";
      attr_dev(button0, "class", "button");
      add_location(button0, file16, 29, 4, 1104);
      attr_dev(div0, "class", "control");
      add_location(div0, file16, 28, 3, 1078);
      attr_dev(input, "class", "input");
      attr_dev(input, "type", "number");
      add_location(input, file16, 34, 4, 1249);
      attr_dev(div1, "class", "control");
      add_location(div1, file16, 33, 3, 1223);
      attr_dev(button1, "class", "button is-static");
      add_location(button1, file16, 37, 4, 1368);
      attr_dev(div2, "class", "control");
      add_location(div2, file16, 36, 3, 1342);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div0, anchor);
      append_dev(div0, button0);
      insert_dev(target, t1, anchor);
      insert_dev(target, div1, anchor);
      append_dev(div1, input);
      set_input_value(
        input,
        /*$endpoint*/
        ctx[1].autoRefreshInterval
      );
      insert_dev(target, t2, anchor);
      insert_dev(target, div2, anchor);
      append_dev(div2, button1);
      if (!mounted) {
        dispose = [
          listen_dev(
            button0,
            "click",
            /*click_handler_1*/
            ctx[3],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            input,
            "input",
            /*input_input_handler*/
            ctx[4]
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*$endpoint*/
      2 && to_number(input.value) !== /*$endpoint*/
      ctx2[1].autoRefreshInterval) {
        set_input_value(
          input,
          /*$endpoint*/
          ctx2[1].autoRefreshInterval
        );
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div0);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(div1);
      if (detaching)
        detach_dev(t2);
      if (detaching)
        detach_dev(div2);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block9.name,
    type: "else",
    source: "(28:2) {:else}",
    ctx
  });
  return block;
}
function create_if_block10(ctx) {
  let div0;
  let button0;
  let t1;
  let div1;
  let input;
  let input_value_value;
  let t2;
  let div2;
  let button1;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      div0 = element("div");
      button0 = element("button");
      button0.textContent = "Stop refreshing";
      t1 = space();
      div1 = element("div");
      input = element("input");
      t2 = space();
      div2 = element("div");
      button1 = element("button");
      button1.textContent = "ms";
      attr_dev(button0, "class", "button");
      add_location(button0, file16, 17, 4, 741);
      attr_dev(div0, "class", "control");
      add_location(div0, file16, 16, 3, 715);
      attr_dev(input, "class", "input");
      attr_dev(input, "type", "number");
      input.value = input_value_value = /*$endpoint*/
      ctx[1].autoRefreshInterval;
      input.disabled = true;
      add_location(input, file16, 22, 4, 888);
      attr_dev(div1, "class", "control");
      add_location(div1, file16, 21, 3, 862);
      attr_dev(button1, "class", "button is-static");
      add_location(button1, file16, 25, 4, 1010);
      attr_dev(div2, "class", "control");
      add_location(div2, file16, 24, 3, 984);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div0, anchor);
      append_dev(div0, button0);
      insert_dev(target, t1, anchor);
      insert_dev(target, div1, anchor);
      append_dev(div1, input);
      insert_dev(target, t2, anchor);
      insert_dev(target, div2, anchor);
      append_dev(div2, button1);
      if (!mounted) {
        dispose = listen_dev(
          button0,
          "click",
          /*click_handler*/
          ctx[2],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*$endpoint*/
      2 && input_value_value !== (input_value_value = /*$endpoint*/
      ctx2[1].autoRefreshInterval) && input.value !== input_value_value) {
        prop_dev(input, "value", input_value_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div0);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(div1);
      if (detaching)
        detach_dev(t2);
      if (detaching)
        detach_dev(div2);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block10.name,
    type: "if",
    source: "(16:2) {#if $endpoint.autoRefreshId !== null}",
    ctx
  });
  return block;
}
function create_fragment16(ctx) {
  let div1;
  let t0_value = (
    /*$endpoint*/
    ctx[1].name + ""
  );
  let t0;
  let t1;
  let t2;
  let div0;
  let if_block0 = (
    /*$endpoint*/
    ctx[1].rateLimitInfo !== null && create_if_block_19(get_if_ctx2(ctx))
  );
  function select_block_type(ctx2, dirty) {
    if (
      /*$endpoint*/
      ctx2[1].autoRefreshId !== null
    )
      return create_if_block10;
    return create_else_block9;
  }
  let current_block_type = select_block_type(ctx, -1);
  let if_block1 = current_block_type(ctx);
  const block = {
    c: function create() {
      div1 = element("div");
      t0 = text(t0_value);
      t1 = space();
      if (if_block0)
        if_block0.c();
      t2 = space();
      div0 = element("div");
      if_block1.c();
      attr_dev(div0, "class", "field has-addons");
      add_location(div0, file16, 14, 1, 640);
      attr_dev(div1, "class", "block endpointOptions");
      add_location(div1, file16, 5, 0, 178);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div1, anchor);
      append_dev(div1, t0);
      append_dev(div1, t1);
      if (if_block0)
        if_block0.m(div1, null);
      append_dev(div1, t2);
      append_dev(div1, div0);
      if_block1.m(div0, null);
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*$endpoint*/
      2 && t0_value !== (t0_value = /*$endpoint*/
      ctx2[1].name + ""))
        set_data_dev(t0, t0_value);
      if (
        /*$endpoint*/
        ctx2[1].rateLimitInfo !== null
      ) {
        if (if_block0) {
          if_block0.p(get_if_ctx2(ctx2), dirty);
        } else {
          if_block0 = create_if_block_19(get_if_ctx2(ctx2));
          if_block0.c();
          if_block0.m(div1, t2);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      if (current_block_type === (current_block_type = select_block_type(ctx2, dirty)) && if_block1) {
        if_block1.p(ctx2, dirty);
      } else {
        if_block1.d(1);
        if_block1 = current_block_type(ctx2);
        if (if_block1) {
          if_block1.c();
          if_block1.m(div0, null);
        }
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div1);
      if (if_block0)
        if_block0.d();
      if_block1.d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment16.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance16($$self, $$props, $$invalidate) {
  let $endpoint, $$unsubscribe_endpoint = noop, $$subscribe_endpoint = () => ($$unsubscribe_endpoint(), $$unsubscribe_endpoint = subscribe(endpoint, ($$value) => $$invalidate(1, $endpoint = $$value)), endpoint);
  $$self.$$.on_destroy.push(() => $$unsubscribe_endpoint());
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("EndpointOptions", slots, []);
  let { endpoint } = $$props;
  validate_store(endpoint, "endpoint");
  $$subscribe_endpoint();
  $$self.$$.on_mount.push(function() {
    if (endpoint === void 0 && !("endpoint" in $$props || $$self.$$.bound[$$self.$$.props["endpoint"]])) {
      console.warn("<EndpointOptions> was created without expected prop 'endpoint'");
    }
  });
  const writable_props = ["endpoint"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<EndpointOptions> was created with unknown prop '${key}'`);
  });
  const click_handler = () => stopAutoRefresh($endpoint.name);
  const click_handler_1 = () => startAutoRefresh($endpoint.name);
  function input_input_handler() {
    $endpoint.autoRefreshInterval = to_number(this.value);
    endpoint.set($endpoint);
  }
  $$self.$$set = ($$props2) => {
    if ("endpoint" in $$props2)
      $$subscribe_endpoint($$invalidate(0, endpoint = $$props2.endpoint));
  };
  $$self.$capture_state = () => ({
    Endpoint,
    startAutoRefresh,
    stopAutoRefresh,
    endpoint,
    $endpoint
  });
  $$self.$inject_state = ($$props2) => {
    if ("endpoint" in $$props2)
      $$subscribe_endpoint($$invalidate(0, endpoint = $$props2.endpoint));
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [endpoint, $endpoint, click_handler, click_handler_1, input_input_handler];
}
var EndpointOptions = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance16, create_fragment16, safe_not_equal, { endpoint: 0 });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "EndpointOptions",
      options,
      id: create_fragment16.name
    });
  }
  get endpoint() {
    throw new Error("<EndpointOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set endpoint(value) {
    throw new Error("<EndpointOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var EndpointOptions_default = EndpointOptions;

// src/sidebar/Endpoints.svelte
var { Object: Object_14 } = globals;
var file17 = "src/sidebar/Endpoints.svelte";
function get_each_context9(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[0] = list[i][0];
  child_ctx[1] = list[i][1];
  return child_ctx;
}
function create_else_block10(ctx) {
  let t;
  const block = {
    c: function create() {
      t = text("No endpoints currently");
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block10.name,
    type: "else",
    source: "(8:1) {:else}",
    ctx
  });
  return block;
}
function create_each_block9(key_1, ctx) {
  let first;
  let endpointoptions;
  let current;
  endpointoptions = new EndpointOptions_default({
    props: { endpoint: (
      /*endpoint*/
      ctx[1]
    ) },
    $$inline: true
  });
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      first = empty();
      create_component(endpointoptions.$$.fragment);
      this.first = first;
    },
    m: function mount(target, anchor) {
      insert_dev(target, first, anchor);
      mount_component(endpointoptions, target, anchor);
      current = true;
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(endpointoptions.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(endpointoptions.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(first);
      destroy_component(endpointoptions, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block9.name,
    type: "each",
    source: "(6:1) {#each Object.entries(endpoints) as [name, endpoint] (name)}",
    ctx
  });
  return block;
}
function create_fragment17(ctx) {
  let div;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let current;
  let each_value = Object.entries(endpoints);
  validate_each_argument(each_value);
  const get_key = (ctx2) => (
    /*name*/
    ctx2[0]
  );
  validate_each_keys(ctx, each_value, get_each_context9, get_key);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context9(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block9(key, child_ctx));
  }
  let each_1_else = null;
  if (!each_value.length) {
    each_1_else = create_else_block10(ctx);
  }
  const block = {
    c: function create() {
      div = element("div");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      if (each_1_else) {
        each_1_else.c();
      }
      attr_dev(div, "class", "box");
      add_location(div, file17, 4, 0, 136);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div, null);
        }
      }
      if (each_1_else) {
        each_1_else.m(div, null);
      }
      current = true;
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*Object, endpoints*/
      0) {
        each_value = Object.entries(endpoints);
        validate_each_argument(each_value);
        group_outros();
        validate_each_keys(ctx2, each_value, get_each_context9, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, div, outro_and_destroy_block, create_each_block9, null, get_each_context9);
        check_outros();
        if (each_value.length) {
          if (each_1_else) {
            each_1_else.d(1);
            each_1_else = null;
          }
        } else if (!each_1_else) {
          each_1_else = create_else_block10(ctx2);
          each_1_else.c();
          each_1_else.m(div, null);
        }
      }
    },
    i: function intro(local) {
      if (current)
        return;
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o: function outro(local) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
      if (each_1_else)
        each_1_else.d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment17.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance17($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("Endpoints", slots, []);
  const writable_props = [];
  Object_14.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<Endpoints> was created with unknown prop '${key}'`);
  });
  $$self.$capture_state = () => ({ endpoints, EndpointOptions: EndpointOptions_default });
  return [];
}
var Endpoints = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance17, create_fragment17, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Endpoints",
      options,
      id: create_fragment17.name
    });
  }
};
var Endpoints_default = Endpoints;

// src/services/pixiv/article.ts
var PixivArticle = class extends Article {
  constructor(id, medias, title, author, creationTime, markedAsReadStorage, hiddenStorage, rawSource, bookmarked) {
    super({
      id,
      url: "https://www.pixiv.net/en/artworks/" + id,
      medias,
      markedAsRead: false,
      hidden: false,
      markedAsReadStorage,
      hiddenStorage,
      text: title,
      rawSource
    });
    this.id = id;
    this.author = author;
    this.creationTime = creationTime;
    this.bookmarked = bookmarked;
  }
  liked = false;
  get numberId() {
    return this.id;
  }
  update(newArticle) {
    super.update(newArticle);
    this.liked ||= newArticle.liked;
    if (this.bookmarked === null)
      this.bookmarked = newArticle.bookmarked;
    else
      this.bookmarked ||= newArticle.bookmarked;
  }
  getLiked() {
    return this.liked;
  }
  getReposted() {
    return !!this.bookmarked;
  }
};
__publicField(PixivArticle, "service");

// src/services/pixiv/service.ts
var PixivService = {
  ...newService("Pixiv"),
  ...newFetchingService(),
  async fetchArticle(store) {
    const article = get_store_value(store);
    const json = await fetch(`https://www.pixiv.net/ajax/illust/${article.id}/pages`).then((r) => r.json());
    store.update((a) => {
      for (let i = 0; i < a.medias.length; ++i) {
        const page = json.body[i];
        a.medias[i] = {
          src: page.urls.original,
          ratio: getRatio(page.width, page.height),
          queueLoadInfo: 2 /* LazyLoad */,
          mediaType: 0 /* Image */,
          thumbnail: a.medias[i].queueLoadInfo === 1 /* Thumbnail */ ? {
            src: a.medias[i].src
          } : void 0,
          loaded: false
        };
      }
      a.fetched = true;
      PixivService.fetchedArticles.delete(article.idPair.id);
      return a;
    });
  },
  articleActions: {
    [STANDARD_ACTIONS.like.key]: {
      ...STANDARD_ACTIONS.like,
      icon: faFaceSmile,
      actionnedIcon: void 0,
      color: void 0,
      togglable: false,
      async action(idPair) {
        const csrfToken = getServiceStorage(PixivService.name)["csrfToken"];
        if (!csrfToken)
          return;
        const response = await fetch("https://www.pixiv.net/ajax/illusts/like", {
          method: "POST",
          credentials: "same-origin",
          cache: "no-cache",
          headers: {
            "Accept": "application/json",
            "Content-Type": "application/json",
            "Cache-Control": "no-cache",
            "X-CSRF-TOKEN": csrfToken
          },
          body: JSON.stringify({ illust_id: idPair.id })
        }).then((r) => r.json());
        if (response.error) {
          console.error("Error during like: ", response);
          return;
        }
        if (response.body.is_liked)
          console.debug(idPair.id + " was already liked.");
        else
          console.debug("Liked " + idPair.id);
        getWritable(idPair).update((a) => {
          a.liked = true;
          return a;
        });
      },
      actionned(article) {
        return article.liked;
      }
    },
    bookmark: {
      name: "Bookmark",
      color: STANDARD_ACTIONS.like.color,
      icon: STANDARD_ACTIONS.like.icon,
      actionnedIcon: STANDARD_ACTIONS.like.actionnedIcon,
      togglable: false,
      index: 1,
      async action(idPair) {
        const storage = getServiceStorage(PixivService.name);
        const csrfToken = storage["csrfToken"];
        if (!csrfToken)
          return;
        const privateBookmark = storage["privateBookmark"] ?? false;
        const response = await fetch("https://www.pixiv.net/ajax/illusts/bookmarks/add", {
          method: "POST",
          credentials: "same-origin",
          cache: "no-cache",
          headers: {
            "Accept": "application/json",
            "Content-Type": "application/json",
            "Cache-Control": "no-cache",
            "X-CSRF-TOKEN": csrfToken
          },
          body: JSON.stringify({
            illust_id: idPair.id,
            restrict: privateBookmark ? 1 : 0,
            comment: "",
            tags: []
          })
        }).then((r) => r.json());
        if (response.error) {
          console.error("Error during bookmark: ", response);
          return;
        }
        console.debug("Bookmarked " + idPair.id);
        getWritable(idPair).update((a) => {
          a.bookmarked = true;
          return a;
        });
      },
      actionned(article) {
        return article.bookmarked === true;
      }
    }
  }
};
PixivArticle.service = PixivService.name;
registerService(PixivService);

// src/sidebar/SettingsMenu.svelte
var { Error: Error_1, console: console_12 } = globals;
var file18 = "src/sidebar/SettingsMenu.svelte";
function create_else_block11(ctx) {
  let label;
  let t0;
  let button;
  let t2;
  let t3;
  let input;
  let t4;
  let mounted;
  let dispose;
  let if_block0 = (
    /*oauthToken*/
    ctx[0] && create_if_block_26(ctx)
  );
  let if_block1 = (
    /*oobPIN*/
    ctx[1]?.length && create_if_block_110(ctx)
  );
  const block = {
    c: function create() {
      label = element("label");
      t0 = text("Twitter\n		");
      button = element("button");
      button.textContent = "Request Token";
      t2 = space();
      if (if_block0)
        if_block0.c();
      t3 = space();
      input = element("input");
      t4 = space();
      if (if_block1)
        if_block1.c();
      add_location(button, file18, 71, 2, 2502);
      attr_dev(input, "type", "text");
      add_location(input, file18, 77, 2, 2751);
      attr_dev(label, "class", "field");
      add_location(label, file18, 69, 1, 2468);
    },
    m: function mount(target, anchor) {
      insert_dev(target, label, anchor);
      append_dev(label, t0);
      append_dev(label, button);
      append_dev(label, t2);
      if (if_block0)
        if_block0.m(label, null);
      append_dev(label, t3);
      append_dev(label, input);
      set_input_value(
        input,
        /*oobPIN*/
        ctx[1]
      );
      append_dev(label, t4);
      if (if_block1)
        if_block1.m(label, null);
      if (!mounted) {
        dispose = [
          listen_dev(
            button,
            "click",
            /*twitterRequestToken*/
            ctx[5],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            input,
            "input",
            /*input_input_handler*/
            ctx[13]
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (
        /*oauthToken*/
        ctx2[0]
      ) {
        if (if_block0) {
          if_block0.p(ctx2, dirty);
        } else {
          if_block0 = create_if_block_26(ctx2);
          if_block0.c();
          if_block0.m(label, t3);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      if (dirty & /*oobPIN*/
      2 && input.value !== /*oobPIN*/
      ctx2[1]) {
        set_input_value(
          input,
          /*oobPIN*/
          ctx2[1]
        );
      }
      if (
        /*oobPIN*/
        ctx2[1]?.length
      ) {
        if (if_block1) {
          if_block1.p(ctx2, dirty);
        } else {
          if_block1 = create_if_block_110(ctx2);
          if_block1.c();
          if_block1.m(label, null);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(label);
      if (if_block0)
        if_block0.d();
      if (if_block1)
        if_block1.d();
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block11.name,
    type: "else",
    source: "(69:0) {:else}",
    ctx
  });
  return block;
}
function create_if_block11(ctx) {
  let label;
  const block = {
    c: function create() {
      label = element("label");
      label.textContent = "Twitter logged in";
      attr_dev(label, "class", "field");
      add_location(label, file18, 65, 1, 2407);
    },
    m: function mount(target, anchor) {
      insert_dev(target, label, anchor);
    },
    p: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(label);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block11.name,
    type: "if",
    source: "(65:0) {#if $extensionContextStore.hasAccessToken}",
    ctx
  });
  return block;
}
function create_if_block_26(ctx) {
  let a;
  let t;
  let a_href_value;
  const block = {
    c: function create() {
      a = element("a");
      t = text("Authenticate");
      attr_dev(a, "class", "button");
      attr_dev(a, "href", a_href_value = `https://api.twitter.com/oauth/authenticate?oauth_token=${/*oauthToken*/
      ctx[0]}`);
      attr_dev(a, "target", "_blank");
      attr_dev(a, "rel", "noreferrer");
      add_location(a, file18, 73, 3, 2586);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a, anchor);
      append_dev(a, t);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*oauthToken*/
      1 && a_href_value !== (a_href_value = `https://api.twitter.com/oauth/authenticate?oauth_token=${/*oauthToken*/
      ctx2[0]}`)) {
        attr_dev(a, "href", a_href_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_26.name,
    type: "if",
    source: "(73:2) {#if oauthToken}",
    ctx
  });
  return block;
}
function create_if_block_110(ctx) {
  let button;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      button = element("button");
      button.textContent = "Get Access Token";
      add_location(button, file18, 79, 3, 2818);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*twitterAccessToken*/
          ctx[6],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_110.name,
    type: "if",
    source: "(79:2) {#if oobPIN?.length}",
    ctx
  });
  return block;
}
function create_fragment18(ctx) {
  let label0;
  let t0;
  let input0;
  let t1;
  let button0;
  let t3;
  let label1;
  let t4;
  let t5_value = (
    /*$extensionContextStore*/
    ctx[4].available + ""
  );
  let t5;
  let t6;
  let label2;
  let t7;
  let input1;
  let t8;
  let t9;
  let div;
  let button1;
  let t11;
  let p;
  let t12;
  let t13;
  let t14;
  let button2;
  let t16;
  let label3;
  let t17;
  let input2;
  let input2_value_value;
  let t18;
  let label4;
  let t19;
  let input3;
  let input3_checked_value;
  let mounted;
  let dispose;
  function select_block_type(ctx2, dirty) {
    if (
      /*$extensionContextStore*/
      ctx2[4].hasAccessToken
    )
      return create_if_block11;
    return create_else_block11;
  }
  let current_block_type = select_block_type(ctx, -1);
  let if_block = current_block_type(ctx);
  const block = {
    c: function create() {
      label0 = element("label");
      t0 = text("Extension Id\n	");
      input0 = element("input");
      t1 = space();
      button0 = element("button");
      button0.textContent = "Check Extension";
      t3 = space();
      label1 = element("label");
      t4 = text("Available: ");
      t5 = text(t5_value);
      t6 = space();
      label2 = element("label");
      t7 = text("Mark as read in local storage\n	");
      input1 = element("input");
      t8 = space();
      if_block.c();
      t9 = space();
      div = element("div");
      button1 = element("button");
      button1.textContent = "List Tabs";
      t11 = space();
      p = element("p");
      t12 = text("TabId: ");
      t13 = text(
        /*tabId*/
        ctx[2]
      );
      t14 = space();
      button2 = element("button");
      button2.textContent = "Twitter Page Fetch";
      t16 = space();
      label3 = element("label");
      t17 = text("Pixiv token\n	");
      input2 = element("input");
      t18 = space();
      label4 = element("label");
      t19 = text("Pixiv bookmark as private\n	");
      input3 = element("input");
      attr_dev(input0, "type", "text");
      attr_dev(input0, "placeholder", "Extension Id");
      add_location(input0, file18, 47, 1, 1915);
      add_location(button0, file18, 48, 1, 2003);
      attr_dev(label0, "class", "field");
      add_location(label0, file18, 45, 0, 1878);
      attr_dev(label1, "class", "field");
      add_location(label1, file18, 51, 0, 2072);
      attr_dev(input1, "type", "checkbox");
      add_location(input1, file18, 57, 1, 2205);
      attr_dev(label2, "class", "field");
      add_location(label2, file18, 55, 0, 2151);
      add_location(button1, file18, 85, 1, 2914);
      add_location(p, file18, 86, 1, 2962);
      add_location(button2, file18, 87, 1, 2985);
      add_location(div, file18, 84, 0, 2907);
      input2.value = input2_value_value = /*pixivStorage*/
      ctx[9].csrfToken;
      add_location(input2, file18, 92, 1, 3093);
      attr_dev(label3, "class", "field");
      add_location(label3, file18, 90, 0, 3057);
      attr_dev(input3, "type", "checkbox");
      input3.checked = input3_checked_value = /*pixivStorage*/
      ctx[9].privateBookmark ?? false;
      add_location(input3, file18, 96, 1, 3278);
      attr_dev(label4, "class", "field");
      add_location(label4, file18, 94, 0, 3228);
    },
    l: function claim(nodes) {
      throw new Error_1("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, label0, anchor);
      append_dev(label0, t0);
      append_dev(label0, input0);
      set_input_value(
        input0,
        /*$extensionContextStore*/
        ctx[4].id
      );
      append_dev(label0, t1);
      append_dev(label0, button0);
      insert_dev(target, t3, anchor);
      insert_dev(target, label1, anchor);
      append_dev(label1, t4);
      append_dev(label1, t5);
      insert_dev(target, t6, anchor);
      insert_dev(target, label2, anchor);
      append_dev(label2, t7);
      append_dev(label2, input1);
      input1.checked = /*mainStorage*/
      ctx[3].markAsReadLocal;
      insert_dev(target, t8, anchor);
      if_block.m(target, anchor);
      insert_dev(target, t9, anchor);
      insert_dev(target, div, anchor);
      append_dev(div, button1);
      append_dev(div, t11);
      append_dev(div, p);
      append_dev(p, t12);
      append_dev(p, t13);
      append_dev(div, t14);
      append_dev(div, button2);
      insert_dev(target, t16, anchor);
      insert_dev(target, label3, anchor);
      append_dev(label3, t17);
      append_dev(label3, input2);
      insert_dev(target, t18, anchor);
      insert_dev(target, label4, anchor);
      append_dev(label4, t19);
      append_dev(label4, input3);
      if (!mounted) {
        dispose = [
          listen_dev(
            input0,
            "input",
            /*input0_input_handler*/
            ctx[10]
          ),
          listen_dev(button0, "click", extensionCheck, false, false, false, false),
          listen_dev(
            input1,
            "change",
            /*input1_change_handler*/
            ctx[11]
          ),
          listen_dev(
            input1,
            "input",
            /*input_handler*/
            ctx[12],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            button1,
            "click",
            /*listTabs*/
            ctx[7],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            button2,
            "click",
            /*twitterPageFetch*/
            ctx[8],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            input2,
            "change",
            /*change_handler*/
            ctx[14],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            input3,
            "input",
            /*input_handler_1*/
            ctx[15],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*$extensionContextStore*/
      16 && input0.value !== /*$extensionContextStore*/
      ctx2[4].id) {
        set_input_value(
          input0,
          /*$extensionContextStore*/
          ctx2[4].id
        );
      }
      if (dirty & /*$extensionContextStore*/
      16 && t5_value !== (t5_value = /*$extensionContextStore*/
      ctx2[4].available + ""))
        set_data_dev(t5, t5_value);
      if (dirty & /*mainStorage*/
      8) {
        input1.checked = /*mainStorage*/
        ctx2[3].markAsReadLocal;
      }
      if (current_block_type === (current_block_type = select_block_type(ctx2, dirty)) && if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if_block.d(1);
        if_block = current_block_type(ctx2);
        if (if_block) {
          if_block.c();
          if_block.m(t9.parentNode, t9);
        }
      }
      if (dirty & /*tabId*/
      4)
        set_data_dev(
          t13,
          /*tabId*/
          ctx2[2]
        );
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(label0);
      if (detaching)
        detach_dev(t3);
      if (detaching)
        detach_dev(label1);
      if (detaching)
        detach_dev(t6);
      if (detaching)
        detach_dev(label2);
      if (detaching)
        detach_dev(t8);
      if_block.d(detaching);
      if (detaching)
        detach_dev(t9);
      if (detaching)
        detach_dev(div);
      if (detaching)
        detach_dev(t16);
      if (detaching)
        detach_dev(label3);
      if (detaching)
        detach_dev(t18);
      if (detaching)
        detach_dev(label4);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment18.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance18($$self, $$props, $$invalidate) {
  let $extensionContextStore;
  validate_store(extensionContextStore, "extensionContextStore");
  component_subscribe($$self, extensionContextStore, ($$value) => $$invalidate(4, $extensionContextStore = $$value));
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("SettingsMenu", slots, []);
  let oauthToken;
  let oobPIN;
  async function twitterRequestToken() {
    const response = await fetchExtensionService(TwitterService.name, "oauth1.0aRequestToken", void 0);
    $$invalidate(0, oauthToken = response.json.oauth_token);
  }
  async function twitterAccessToken() {
    const response = await fetchExtensionService(TwitterService.name, "oauth1.0aAccessToken", void 0, "GET", { oauthVerifier: oobPIN });
    if (!response?.json.soshalthing)
      throw new Error(JSON.stringify(response, null, "	"));
    $$invalidate(0, oauthToken = void 0);
    await extensionCheck();
  }
  let tabId = null;
  async function listTabs() {
    const response = await fetchExtension("listTabs", { query: { url: "*://twitter.com/*" } });
    console.log(response);
    if (Array.isArray(response) && response.length > 0)
      $$invalidate(2, tabId = response[0].id);
  }
  async function twitterPageFetch() {
    if (tabId === null) {
      console.log("Tab id not set");
      return;
    }
    const response = await fetchExtension("twitterFetch", {
      tabId,
      message: {
        soshalthing: true,
        request: "getPageHTML"
      }
    });
    const html = document.createElement("html");
    html.innerHTML = response;
    console.log(html.getElementsByTagName("article"));
  }
  const pixivStorage = getServiceStorage(PixivService.name);
  const mainStorage = loadMainStorage();
  const writable_props = [];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console_12.warn(`<SettingsMenu> was created with unknown prop '${key}'`);
  });
  function input0_input_handler() {
    $extensionContextStore.id = this.value;
    extensionContextStore.set($extensionContextStore);
  }
  function input1_change_handler() {
    mainStorage.markAsReadLocal = this.checked;
    $$invalidate(3, mainStorage);
  }
  const input_handler = (e) => updateMainStorage("markAsReadLocal", e.target.checked);
  function input_input_handler() {
    oobPIN = this.value;
    $$invalidate(1, oobPIN);
  }
  const change_handler = (e) => updateServiceStorage(PixivService.name, "csrfToken", e.target.value);
  const input_handler_1 = (e) => updateServiceStorage(PixivService.name, "privateBookmark", e.target.checked);
  $$self.$capture_state = () => ({
    extensionCheck,
    extensionContextStore,
    fetchExtension,
    fetchExtensionService,
    TwitterService,
    PixivService,
    getServiceStorage,
    loadMainStorage,
    updateServiceStorage,
    updateMainStorage,
    oauthToken,
    oobPIN,
    twitterRequestToken,
    twitterAccessToken,
    tabId,
    listTabs,
    twitterPageFetch,
    pixivStorage,
    mainStorage,
    $extensionContextStore
  });
  $$self.$inject_state = ($$props2) => {
    if ("oauthToken" in $$props2)
      $$invalidate(0, oauthToken = $$props2.oauthToken);
    if ("oobPIN" in $$props2)
      $$invalidate(1, oobPIN = $$props2.oobPIN);
    if ("tabId" in $$props2)
      $$invalidate(2, tabId = $$props2.tabId);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    oauthToken,
    oobPIN,
    tabId,
    mainStorage,
    $extensionContextStore,
    twitterRequestToken,
    twitterAccessToken,
    listTabs,
    twitterPageFetch,
    pixivStorage,
    input0_input_handler,
    input1_change_handler,
    input_handler,
    input_input_handler,
    change_handler,
    input_handler_1
  ];
}
var SettingsMenu = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance18, create_fragment18, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "SettingsMenu",
      options,
      id: create_fragment18.name
    });
  }
};
var SettingsMenu_default = SettingsMenu;

// src/services/misskey/article.ts
var mfm = __toESM(require_built(), 1);
var MisskeyArticle = class extends Article {
  constructor(id, text2, textHtml, medias, creationTime, author, actualArticleRef, markedAsReadStorage, hiddenStorage, rawSource) {
    super({
      id,
      text: text2 ?? void 0,
      textHtml,
      medias,
      //TODO Use host
      url: `https://misskey.io/notes/${id}`,
      actualArticleRef,
      markedAsReadStorage,
      hiddenStorage,
      rawSource
    });
    this.id = id;
    this.creationTime = creationTime;
    this.author = author;
  }
  get numberId() {
    return 0;
  }
};
__publicField(MisskeyArticle, "service");
function fromAPI(note, markedAsReadStorage, hiddenStorage, _isRef = false) {
  let textHtml = note.text || "";
  try {
    textHtml = parseText2(note.text);
  } catch (e) {
    console.error(`Failed to parse mfm for note 'https://misskey.io/notes/${note.id}'`, e);
  }
  let actualArticleRefIdPair;
  const medias = note.files.map((f) => {
    let mediaType;
    switch (f.type) {
      case "image/png":
      case "image/jpeg":
        mediaType = 0 /* Image */;
        break;
      default:
        console.warn("unrecognized type " + f.type);
        mediaType = 0 /* Image */;
        break;
    }
    return {
      src: f.url,
      ratio: f.properties.width && f.properties.height ? getRatio(f.properties.width, f.properties.height) : null,
      queueLoadInfo: 0 /* DirectLoad */,
      mediaType,
      loaded: void 0
    };
  });
  const author = {
    id: note.user.id,
    name: note.user.name,
    username: note.user.username,
    avatarUrl: note.user.avatarUrl,
    //TODO Use host
    url: `https://misskey.io/@${note.user.username}`
  };
  const makeArticle = () => new MisskeyArticle(
    note.id,
    note.text,
    textHtml,
    medias,
    new Date(note.createdAt),
    author,
    actualArticleRefIdPair,
    markedAsReadStorage,
    hiddenStorage,
    note
  );
  if (note.renote !== void 0) {
    const renoted = fromAPI(note.renote, markedAsReadStorage, hiddenStorage, true);
    if (note.text !== null) {
      actualArticleRefIdPair = {
        type: "quote",
        quoted: getRootArticle(renoted).idPair
      };
      return {
        type: "quote",
        article: makeArticle(),
        quoted: renoted
      };
    } else {
      if (renoted.type === "quote") {
        actualArticleRefIdPair = {
          type: "quote",
          quoted: renoted.quoted.article.idPair
        };
      } else {
        actualArticleRefIdPair = {
          type: "repost",
          reposted: getRootArticle(renoted).idPair
        };
      }
      return {
        type: "repost",
        article: makeArticle(),
        reposted: renoted
      };
    }
  }
  return {
    type: "normal",
    article: makeArticle()
  };
}
function parseText2(rawText) {
  if (rawText?.length) {
    const parsed = mfm.parse(rawText);
    return parsed.map((node) => mfmToHtml(node)).join("");
  } else
    return "";
}
function mfmToHtml(node) {
  switch (node.type) {
    case "text":
      return node.props.text;
    case "unicodeEmoji":
      return node.props.emoji;
    case "emojiCode": {
      const emoji = MisskeyService.emojis?.find((e) => e.name === node.props.name || e.aliases.includes(node.props.name));
      if (emoji !== void 0)
        return `<img class="emoji" src="${emoji.url}" alt="${node.props.name}"/>`;
      else {
        console.warn(`Unrecognized emoji :${node.props.name}:`);
        return `:${node.props.name}:`;
      }
    }
    case "inlineCode":
      return node.props.code;
    case "mathInline":
      return node.props.formula;
    case "center":
      if (node.props?.length)
        console.warn("Unparsed center props:", node.props);
      return `<div style="text-align: center">${node.children.map((n) => mfmToHtml(n)).join("")}</div>`;
    case "bold":
      if (node.props?.length)
        console.warn("Unparsed center props:", node.props);
      return `<div style="font-weight: bold">${node.children.map((n) => mfmToHtml(n)).join("")}</div>`;
    case "small":
      if (node.props?.length)
        console.warn("Unparsed center props:", node.props);
      return `<small>${node.children.map((n) => mfmToHtml(n)).join("")}</small>`;
    case "italic":
      if (node.props?.length)
        console.warn("Unparsed center props:", node.props);
      return `<i>${node.children.map((n) => mfmToHtml(n)).join("")}</i>`;
    case "strike":
      if (node.props?.length)
        console.warn("Unparsed center props:", node.props);
      return `<div style="text-decoration: line-through">${node.children.map((n) => mfmToHtml(n)).join("")}</div>`;
    case "mention":
      return `<a href="https://misskey.io/${node.props.acct}">${node.props.acct}</a>`;
    case "hashtag":
      return `<a href="https://misskey.io/tags/${node.props.hashtag}">#${node.props.hashtag}</a>`;
      return `#${node.props.hashtag}`;
    case "url":
      if (node.props.brackets !== void 0)
        console.log("url brackets:", node.props.brackets, node);
      return `<a href="${node.props.url}">${node.props.url}</a>`;
    case "fn":
      return `$[${node.props.name}(${node.props.args.toString()}) ${node.children.map((n) => mfmToHtml(n)).join("")}]`;
    case "plain":
      if (node.props?.length)
        console.warn("Unparsed center props:", node.props);
      return node.children.map((n) => mfmToHtml(n)).join("");
    default:
      throw new Error(`Unrecognized mfm node '${node.type}'`);
  }
}

// src/services/misskey/endpoints/timelineEndpoint.ts
var _TimelineEndpoint = class extends Endpoint {
  name = "Timeline Endpoint";
  service = "Misskey";
  cli = null;
  constructor() {
    super(/* @__PURE__ */ new Set([1 /* Refresh */]));
  }
  matchParams(_params) {
    return true;
  }
  async refresh(refreshType) {
    if (this.cli === null)
      throw new Error("Misskey API client is not initialized");
    const limit = refreshType === 0 /* RefreshStart */ ? void 0 : 50;
    const notes = await this.cli.request("notes/timeline", {
      limit
    });
    const markedAsReadStorage = getMarkedAsReadStorage(MisskeyService);
    const hiddenStorage = getHiddenStorage(MisskeyService);
    console.log(notes);
    return notes.map((n) => fromAPI(n, markedAsReadStorage, hiddenStorage));
  }
};
var TimelineEndpoint = _TimelineEndpoint;
__publicField(TimelineEndpoint, "constructorInfo", {
  name: "TimelineEndpoint",
  paramTemplate: [],
  constructor: () => new _TimelineEndpoint()
});

// src/services/misskey/service.ts
var MisskeyService = {
  ...newService("Misskey"),
  endpointConstructors: [
    TimelineEndpoint.constructorInfo
  ],
  emojis: null
  //TODO Fetch from localStorage
};
MisskeyArticle.service = MisskeyService.name;
registerService(MisskeyService);

// src/sidebar/TimelineEditMenu.svelte
var file19 = "src/sidebar/TimelineEditMenu.svelte";
function create_if_block_111(ctx) {
  let input;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      input = element("input");
      attr_dev(input, "name", "username");
      add_location(input, file19, 52, 2, 1717);
    },
    m: function mount(target, anchor) {
      insert_dev(target, input, anchor);
      set_input_value(
        input,
        /*username*/
        ctx[4]
      );
      if (!mounted) {
        dispose = listen_dev(
          input,
          "input",
          /*input_input_handler_1*/
          ctx[10]
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*username*/
      16 && input.value !== /*username*/
      ctx2[4]) {
        set_input_value(
          input,
          /*username*/
          ctx2[4]
        );
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(input);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_111.name,
    type: "if",
    source: "(52:60) ",
    ctx
  });
  return block;
}
function create_if_block12(ctx) {
  let input;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      input = element("input");
      attr_dev(input, "name", "title");
      add_location(input, file19, 50, 2, 1613);
    },
    m: function mount(target, anchor) {
      insert_dev(target, input, anchor);
      set_input_value(
        input,
        /*title*/
        ctx[6]
      );
      if (!mounted) {
        dispose = listen_dev(
          input,
          "input",
          /*input_input_handler*/
          ctx[9]
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*title*/
      64 && input.value !== /*title*/
      ctx2[6]) {
        set_input_value(
          input,
          /*title*/
          ctx2[6]
        );
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(input);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block12.name,
    type: "if",
    source: "(50:1) {#if timelineAddType === TimelineAddTypes.Empty}",
    ctx
  });
  return block;
}
function create_fragment19(ctx) {
  let label;
  let t0;
  let select;
  let option0;
  let t1;
  let option0_value_value;
  let option1;
  let t2;
  let option1_value_value;
  let t3;
  let t4;
  let button0;
  let t5;
  let t6;
  let button1;
  let t7;
  let mounted;
  let dispose;
  function select_block_type(ctx2, dirty) {
    if (
      /*timelineAddType*/
      ctx2[3] === /*TimelineAddTypes*/
      ctx2[2].Empty
    )
      return create_if_block12;
    if (
      /*timelineAddType*/
      ctx2[3] === /*TimelineAddTypes*/
      ctx2[2].TwitterUser
    )
      return create_if_block_111;
  }
  let current_block_type = select_block_type(ctx, -1);
  let if_block = current_block_type && current_block_type(ctx);
  const block = {
    c: function create() {
      label = element("label");
      t0 = text("Add Timeline\n	");
      select = element("select");
      option0 = element("option");
      t1 = text("Empty");
      option1 = element("option");
      t2 = text("Twitter User");
      t3 = space();
      if (if_block)
        if_block.c();
      t4 = space();
      button0 = element("button");
      t5 = text("Add Modal Timeline");
      t6 = space();
      button1 = element("button");
      t7 = text("Add Timeline");
      option0.__value = option0_value_value = /*TimelineAddTypes*/
      ctx[2].Empty;
      option0.value = option0.__value;
      add_location(option0, file19, 45, 2, 1426);
      option1.__value = option1_value_value = /*TimelineAddTypes*/
      ctx[2].TwitterUser;
      option1.value = option1.__value;
      add_location(option1, file19, 46, 2, 1482);
      if (
        /*timelineAddType*/
        ctx[3] === void 0
      )
        add_render_callback(() => (
          /*select_change_handler*/
          ctx[8].call(select)
        ));
      add_location(select, file19, 44, 1, 1386);
      button0.disabled = /*addDisabled*/
      ctx[5];
      add_location(button0, file19, 54, 1, 1772);
      button1.disabled = /*addDisabled*/
      ctx[5];
      add_location(button1, file19, 60, 1, 1927);
      attr_dev(label, "class", "field");
      add_location(label, file19, 42, 0, 1349);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, label, anchor);
      append_dev(label, t0);
      append_dev(label, select);
      append_dev(select, option0);
      append_dev(option0, t1);
      append_dev(select, option1);
      append_dev(option1, t2);
      select_option(
        select,
        /*timelineAddType*/
        ctx[3],
        true
      );
      append_dev(label, t3);
      if (if_block)
        if_block.m(label, null);
      append_dev(label, t4);
      append_dev(label, button0);
      append_dev(button0, t5);
      append_dev(label, t6);
      append_dev(label, button1);
      append_dev(button1, t7);
      if (!mounted) {
        dispose = [
          listen_dev(
            select,
            "change",
            /*select_change_handler*/
            ctx[8]
          ),
          listen_dev(
            button0,
            "click",
            /*click_handler*/
            ctx[11],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            button1,
            "click",
            /*click_handler_1*/
            ctx[12],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*TimelineAddTypes*/
      4 && option0_value_value !== (option0_value_value = /*TimelineAddTypes*/
      ctx2[2].Empty)) {
        prop_dev(option0, "__value", option0_value_value);
        option0.value = option0.__value;
      }
      if (dirty & /*TimelineAddTypes*/
      4 && option1_value_value !== (option1_value_value = /*TimelineAddTypes*/
      ctx2[2].TwitterUser)) {
        prop_dev(option1, "__value", option1_value_value);
        option1.value = option1.__value;
      }
      if (dirty & /*timelineAddType, TimelineAddTypes*/
      12) {
        select_option(
          select,
          /*timelineAddType*/
          ctx2[3]
        );
      }
      if (current_block_type === (current_block_type = select_block_type(ctx2, dirty)) && if_block) {
        if_block.p(ctx2, dirty);
      } else {
        if (if_block)
          if_block.d(1);
        if_block = current_block_type && current_block_type(ctx2);
        if (if_block) {
          if_block.c();
          if_block.m(label, t4);
        }
      }
      if (dirty & /*addDisabled*/
      32) {
        prop_dev(
          button0,
          "disabled",
          /*addDisabled*/
          ctx2[5]
        );
      }
      if (dirty & /*addDisabled*/
      32) {
        prop_dev(
          button1,
          "disabled",
          /*addDisabled*/
          ctx2[5]
        );
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(label);
      if (if_block) {
        if_block.d();
      }
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment19.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance19($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("TimelineEditMenu", slots, []);
  let { setModalTimeline } = $$props;
  let { addTimeline } = $$props;
  var TimelineAddTypes;
  (function(TimelineAddTypes2) {
    TimelineAddTypes2[TimelineAddTypes2["Empty"] = 0] = "Empty";
    TimelineAddTypes2[TimelineAddTypes2["TwitterUser"] = 1] = "TwitterUser";
  })(TimelineAddTypes || (TimelineAddTypes = {}));
  let timelineAddType = TimelineAddTypes.Empty;
  let addDisabled = false;
  let title = "";
  let username = "";
  function getTimelineData() {
    switch (timelineAddType) {
      case TimelineAddTypes.Empty:
        return { ...defaultTimeline(), title };
      case TimelineAddTypes.TwitterUser:
        return userTimeline();
    }
  }
  function userTimeline() {
    return newUserTimeline(TwitterService.name, { username, name: username, url: "" });
  }
  $$self.$$.on_mount.push(function() {
    if (setModalTimeline === void 0 && !("setModalTimeline" in $$props || $$self.$$.bound[$$self.$$.props["setModalTimeline"]])) {
      console.warn("<TimelineEditMenu> was created without expected prop 'setModalTimeline'");
    }
    if (addTimeline === void 0 && !("addTimeline" in $$props || $$self.$$.bound[$$self.$$.props["addTimeline"]])) {
      console.warn("<TimelineEditMenu> was created without expected prop 'addTimeline'");
    }
  });
  const writable_props = ["setModalTimeline", "addTimeline"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<TimelineEditMenu> was created with unknown prop '${key}'`);
  });
  function select_change_handler() {
    timelineAddType = select_value(this);
    $$invalidate(3, timelineAddType);
    $$invalidate(2, TimelineAddTypes);
  }
  function input_input_handler() {
    title = this.value;
    $$invalidate(6, title);
  }
  function input_input_handler_1() {
    username = this.value;
    $$invalidate(4, username);
  }
  const click_handler = () => {
    const data = getTimelineData();
    if (data)
      setModalTimeline(data);
  };
  const click_handler_1 = () => {
    const data = getTimelineData();
    if (data)
      addTimeline(data);
  };
  $$self.$$set = ($$props2) => {
    if ("setModalTimeline" in $$props2)
      $$invalidate(0, setModalTimeline = $$props2.setModalTimeline);
    if ("addTimeline" in $$props2)
      $$invalidate(1, addTimeline = $$props2.addTimeline);
  };
  $$self.$capture_state = () => ({
    defaultTimeline,
    newUserTimeline,
    TwitterService,
    MisskeyService,
    RefreshType,
    setModalTimeline,
    addTimeline,
    TimelineAddTypes,
    timelineAddType,
    addDisabled,
    title,
    username,
    getTimelineData,
    userTimeline
  });
  $$self.$inject_state = ($$props2) => {
    if ("setModalTimeline" in $$props2)
      $$invalidate(0, setModalTimeline = $$props2.setModalTimeline);
    if ("addTimeline" in $$props2)
      $$invalidate(1, addTimeline = $$props2.addTimeline);
    if ("TimelineAddTypes" in $$props2)
      $$invalidate(2, TimelineAddTypes = $$props2.TimelineAddTypes);
    if ("timelineAddType" in $$props2)
      $$invalidate(3, timelineAddType = $$props2.timelineAddType);
    if ("addDisabled" in $$props2)
      $$invalidate(5, addDisabled = $$props2.addDisabled);
    if ("title" in $$props2)
      $$invalidate(6, title = $$props2.title);
    if ("username" in $$props2)
      $$invalidate(4, username = $$props2.username);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*timelineAddType, username, TimelineAddTypes*/
    28) {
      $: {
        switch (timelineAddType) {
          case TimelineAddTypes.TwitterUser:
            $$invalidate(5, addDisabled = !username.length);
            break;
          default:
            $$invalidate(5, addDisabled = false);
            break;
        }
      }
    }
  };
  return [
    setModalTimeline,
    addTimeline,
    TimelineAddTypes,
    timelineAddType,
    username,
    addDisabled,
    title,
    getTimelineData,
    select_change_handler,
    input_input_handler,
    input_input_handler_1,
    click_handler,
    click_handler_1
  ];
}
var TimelineEditMenu = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance19, create_fragment19, safe_not_equal, { setModalTimeline: 0, addTimeline: 1 });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "TimelineEditMenu",
      options,
      id: create_fragment19.name
    });
  }
  get setModalTimeline() {
    throw new Error("<TimelineEditMenu>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set setModalTimeline(value) {
    throw new Error("<TimelineEditMenu>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get addTimeline() {
    throw new Error("<TimelineEditMenu>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set addTimeline(value) {
    throw new Error("<TimelineEditMenu>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var TimelineEditMenu_default = TimelineEditMenu;

// src/filters/FiltersOptions.svelte
var { Object: Object_15 } = globals;
var file20 = "src/filters/FiltersOptions.svelte";
function get_each_context10(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[16] = list[i];
  return child_ctx;
}
function get_each_context_14(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[16] = list[i];
  return child_ctx;
}
function get_each_context_2(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[16] = list[i];
  return child_ctx;
}
function get_each_context_3(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[16] = list[i];
  return child_ctx;
}
function get_each_context_4(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[25] = list[i];
  child_ctx[26] = list;
  child_ctx[27] = i;
  return child_ctx;
}
function get_each_context_5(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[28] = list[i];
  child_ctx[29] = list;
  child_ctx[30] = i;
  return child_ctx;
}
function create_if_block_27(ctx) {
  let each_1_anchor;
  let each_value_5 = getServices()[
    /*instance*/
    ctx[25].filter.service
  ].filterTypes[
    /*instance*/
    ctx[25].filter.type
  ].props;
  validate_each_argument(each_value_5);
  let each_blocks = [];
  for (let i = 0; i < each_value_5.length; i += 1) {
    each_blocks[i] = create_each_block_5(get_each_context_5(ctx, each_value_5, i));
  }
  const block = {
    c: function create() {
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      each_1_anchor = empty();
    },
    m: function mount(target, anchor) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, each_1_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*instances*/
      1) {
        each_value_5 = getServices()[
          /*instance*/
          ctx2[25].filter.service
        ].filterTypes[
          /*instance*/
          ctx2[25].filter.type
        ].props;
        validate_each_argument(each_value_5);
        let i;
        for (i = 0; i < each_value_5.length; i += 1) {
          const child_ctx = get_each_context_5(ctx2, each_value_5, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block_5(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
          }
        }
        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }
        each_blocks.length = each_value_5.length;
      }
    },
    d: function destroy(detaching) {
      destroy_each(each_blocks, detaching);
      if (detaching)
        detach_dev(each_1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_27.name,
    type: "if",
    source: "(51:1) {#if instance.filter.service !== null}",
    ctx
  });
  return block;
}
function create_each_block_5(ctx) {
  let div3;
  let div0;
  let label;
  let t0_value = (
    /*prop*/
    ctx[28] + ""
  );
  let t0;
  let t1;
  let div2;
  let div1;
  let input;
  let t2;
  let mounted;
  let dispose;
  function input_input_handler() {
    ctx[7].call(
      input,
      /*prop*/
      ctx[28],
      /*each_value_4*/
      ctx[26],
      /*index*/
      ctx[27]
    );
  }
  const block = {
    c: function create() {
      div3 = element("div");
      div0 = element("div");
      label = element("label");
      t0 = text(t0_value);
      t1 = space();
      div2 = element("div");
      div1 = element("div");
      input = element("input");
      t2 = space();
      attr_dev(label, "class", "label");
      add_location(label, file20, 55, 5, 2055);
      attr_dev(div0, "class", "field-label is-small");
      add_location(div0, file20, 53, 4, 1953);
      add_location(input, file20, 59, 6, 2164);
      attr_dev(div1, "class", "control");
      add_location(div1, file20, 58, 5, 2136);
      attr_dev(div2, "class", "field-body");
      add_location(div2, file20, 57, 4, 2106);
      attr_dev(div3, "class", "field has-addons");
      add_location(div3, file20, 52, 3, 1918);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div3, anchor);
      append_dev(div3, div0);
      append_dev(div0, label);
      append_dev(label, t0);
      append_dev(div3, t1);
      append_dev(div3, div2);
      append_dev(div2, div1);
      append_dev(div1, input);
      set_input_value(
        input,
        /*instance*/
        ctx[25].filter[
          /*prop*/
          ctx[28]
        ]
      );
      append_dev(div3, t2);
      if (!mounted) {
        dispose = listen_dev(input, "input", input_input_handler);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty[0] & /*instances*/
      1 && t0_value !== (t0_value = /*prop*/
      ctx[28] + ""))
        set_data_dev(t0, t0_value);
      if (dirty[0] & /*instances*/
      1 && input.value !== /*instance*/
      ctx[25].filter[
        /*prop*/
        ctx[28]
      ]) {
        set_input_value(
          input,
          /*instance*/
          ctx[25].filter[
            /*prop*/
            ctx[28]
          ]
        );
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div3);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_5.name,
    type: "each",
    source: "(52:2) {#each getServices()[instance.filter.service].filterTypes[instance.filter.type].props as prop}",
    ctx
  });
  return block;
}
function create_if_block_112(ctx) {
  let div3;
  let div0;
  let label0;
  let t1;
  let div2;
  let div1;
  let input0;
  let input0_min_value;
  let t2;
  let div7;
  let div4;
  let label1;
  let t4;
  let div6;
  let div5;
  let input1;
  let input1_min_value;
  let t5;
  let div11;
  let div8;
  let label2;
  let t7;
  let div10;
  let div9;
  let input2;
  let mounted;
  let dispose;
  function input0_input_handler() {
    ctx[9].call(
      input0,
      /*each_value_4*/
      ctx[26],
      /*index*/
      ctx[27]
    );
  }
  function input1_input_handler() {
    ctx[10].call(
      input1,
      /*each_value_4*/
      ctx[26],
      /*index*/
      ctx[27]
    );
  }
  function input2_change_handler() {
    ctx[11].call(
      input2,
      /*each_value_4*/
      ctx[26],
      /*index*/
      ctx[27]
    );
  }
  const block = {
    c: function create() {
      div3 = element("div");
      div0 = element("div");
      label0 = element("label");
      label0.textContent = "Interval";
      t1 = space();
      div2 = element("div");
      div1 = element("div");
      input0 = element("input");
      t2 = space();
      div7 = element("div");
      div4 = element("div");
      label1 = element("label");
      label1.textContent = "Offset";
      t4 = space();
      div6 = element("div");
      div5 = element("div");
      input1 = element("input");
      t5 = space();
      div11 = element("div");
      div8 = element("div");
      label2 = element("label");
      label2.textContent = "Include Offset";
      t7 = space();
      div10 = element("div");
      div9 = element("div");
      input2 = element("input");
      attr_dev(label0, "class", "label");
      add_location(label0, file20, 82, 4, 2842);
      attr_dev(div0, "class", "field-label is-small");
      add_location(div0, file20, 80, 3, 2742);
      attr_dev(input0, "type", "number");
      attr_dev(input0, "class", "input");
      attr_dev(input0, "min", input0_min_value = 1);
      add_location(input0, file20, 86, 5, 2949);
      attr_dev(div1, "class", "control");
      add_location(div1, file20, 85, 4, 2922);
      attr_dev(div2, "class", "field-body");
      add_location(div2, file20, 84, 3, 2893);
      attr_dev(div3, "class", "field has-addons");
      add_location(div3, file20, 79, 2, 2708);
      attr_dev(label1, "class", "label");
      add_location(label1, file20, 93, 4, 3198);
      attr_dev(div4, "class", "field-label is-small");
      add_location(div4, file20, 91, 3, 3098);
      attr_dev(input1, "type", "number");
      attr_dev(input1, "class", "input");
      attr_dev(input1, "min", input1_min_value = 0);
      add_location(input1, file20, 97, 5, 3303);
      attr_dev(div5, "class", "control");
      add_location(div5, file20, 96, 4, 3276);
      attr_dev(div6, "class", "field-body");
      add_location(div6, file20, 95, 3, 3247);
      attr_dev(div7, "class", "field has-addons");
      add_location(div7, file20, 90, 2, 3064);
      attr_dev(label2, "class", "label");
      add_location(label2, file20, 104, 4, 3550);
      attr_dev(div8, "class", "field-label is-small");
      add_location(div8, file20, 102, 3, 3450);
      attr_dev(input2, "type", "checkbox");
      add_location(input2, file20, 108, 5, 3663);
      attr_dev(div9, "class", "control");
      add_location(div9, file20, 107, 4, 3636);
      attr_dev(div10, "class", "field-body");
      add_location(div10, file20, 106, 3, 3607);
      attr_dev(div11, "class", "field has-addons");
      add_location(div11, file20, 101, 2, 3416);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div3, anchor);
      append_dev(div3, div0);
      append_dev(div0, label0);
      append_dev(div3, t1);
      append_dev(div3, div2);
      append_dev(div2, div1);
      append_dev(div1, input0);
      set_input_value(
        input0,
        /*instance*/
        ctx[25].filter.interval
      );
      insert_dev(target, t2, anchor);
      insert_dev(target, div7, anchor);
      append_dev(div7, div4);
      append_dev(div4, label1);
      append_dev(div7, t4);
      append_dev(div7, div6);
      append_dev(div6, div5);
      append_dev(div5, input1);
      set_input_value(
        input1,
        /*instance*/
        ctx[25].filter.offset
      );
      insert_dev(target, t5, anchor);
      insert_dev(target, div11, anchor);
      append_dev(div11, div8);
      append_dev(div8, label2);
      append_dev(div11, t7);
      append_dev(div11, div10);
      append_dev(div10, div9);
      append_dev(div9, input2);
      input2.checked = /*instance*/
      ctx[25].filter.includeOffset;
      if (!mounted) {
        dispose = [
          listen_dev(input0, "input", input0_input_handler),
          listen_dev(input1, "input", input1_input_handler),
          listen_dev(input2, "change", input2_change_handler)
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty[0] & /*instances*/
      1 && to_number(input0.value) !== /*instance*/
      ctx[25].filter.interval) {
        set_input_value(
          input0,
          /*instance*/
          ctx[25].filter.interval
        );
      }
      if (dirty[0] & /*instances*/
      1 && to_number(input1.value) !== /*instance*/
      ctx[25].filter.offset) {
        set_input_value(
          input1,
          /*instance*/
          ctx[25].filter.offset
        );
      }
      if (dirty[0] & /*instances*/
      1) {
        input2.checked = /*instance*/
        ctx[25].filter.includeOffset;
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div3);
      if (detaching)
        detach_dev(t2);
      if (detaching)
        detach_dev(div7);
      if (detaching)
        detach_dev(t5);
      if (detaching)
        detach_dev(div11);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_112.name,
    type: "if",
    source: "(79:47) ",
    ctx
  });
  return block;
}
function create_if_block13(ctx) {
  let div3;
  let div0;
  let label;
  let t1;
  let div2;
  let div1;
  let input;
  let mounted;
  let dispose;
  function input_input_handler_1() {
    ctx[8].call(
      input,
      /*each_value_4*/
      ctx[26],
      /*index*/
      ctx[27]
    );
  }
  const block = {
    c: function create() {
      div3 = element("div");
      div0 = element("div");
      label = element("label");
      label.textContent = "Username";
      t1 = space();
      div2 = element("div");
      div1 = element("div");
      input = element("input");
      attr_dev(label, "class", "label");
      add_location(label, file20, 70, 4, 2472);
      attr_dev(div0, "class", "field-label is-small");
      add_location(div0, file20, 68, 3, 2372);
      add_location(input, file20, 74, 5, 2579);
      attr_dev(div1, "class", "control");
      add_location(div1, file20, 73, 4, 2552);
      attr_dev(div2, "class", "field-body");
      add_location(div2, file20, 72, 3, 2523);
      attr_dev(div3, "class", "field has-addons");
      add_location(div3, file20, 67, 2, 2338);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div3, anchor);
      append_dev(div3, div0);
      append_dev(div0, label);
      append_dev(div3, t1);
      append_dev(div3, div2);
      append_dev(div2, div1);
      append_dev(div1, input);
      set_input_value(
        input,
        /*instance*/
        ctx[25].filter.byUsername
      );
      if (!mounted) {
        dispose = listen_dev(input, "input", input_input_handler_1);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty[0] & /*instances*/
      1 && input.value !== /*instance*/
      ctx[25].filter.byUsername) {
        set_input_value(
          input,
          /*instance*/
          ctx[25].filter.byUsername
        );
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div3);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block13.name,
    type: "if",
    source: "(67:1) {#if instance.filter.type === 'repost' || instance.filter.type === 'quote'}",
    ctx
  });
  return block;
}
function create_each_block_4(key_1, ctx) {
  let div5;
  let div0;
  let label;
  let t0_value = (
    /*instance*/
    (ctx[25].filter.service === null ? getFilterName(
      /*instance*/
      ctx[25].filter.type,
      /*instance*/
      ctx[25].inverted
    ) : getServices()[
      /*instance*/
      ctx[25].filter.service
    ].filterTypes[
      /*instance*/
      ctx[25].filter.type
    ].name(
      /*instance*/
      ctx[25].inverted
    )) + ""
  );
  let t0;
  let t1;
  let div4;
  let div1;
  let button0;
  let t2_value = (
    /*instance*/
    ctx[25].enabled ? "Enabled" : "Disabled"
  );
  let t2;
  let t3;
  let div2;
  let button1;
  let t4_value = (
    /*instance*/
    ctx[25].inverted ? "Inverted" : "Normal"
  );
  let t4;
  let t5;
  let div3;
  let button2;
  let t7;
  let t8;
  let if_block1_anchor;
  let mounted;
  let dispose;
  function click_handler() {
    return (
      /*click_handler*/
      ctx[4](
        /*instance*/
        ctx[25],
        /*each_value_4*/
        ctx[26],
        /*index*/
        ctx[27]
      )
    );
  }
  function click_handler_1() {
    return (
      /*click_handler_1*/
      ctx[5](
        /*instance*/
        ctx[25],
        /*each_value_4*/
        ctx[26],
        /*index*/
        ctx[27]
      )
    );
  }
  function click_handler_2() {
    return (
      /*click_handler_2*/
      ctx[6](
        /*index*/
        ctx[27]
      )
    );
  }
  let if_block0 = (
    /*instance*/
    ctx[25].filter.service !== null && create_if_block_27(ctx)
  );
  function select_block_type(ctx2, dirty) {
    if (
      /*instance*/
      ctx2[25].filter.type === "repost" || /*instance*/
      ctx2[25].filter.type === "quote"
    )
      return create_if_block13;
    if (
      /*instance*/
      ctx2[25].filter.type === "interval"
    )
      return create_if_block_112;
  }
  let current_block_type = select_block_type(ctx, [-1, -1]);
  let if_block1 = current_block_type && current_block_type(ctx);
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      div5 = element("div");
      div0 = element("div");
      label = element("label");
      t0 = text(t0_value);
      t1 = space();
      div4 = element("div");
      div1 = element("div");
      button0 = element("button");
      t2 = text(t2_value);
      t3 = space();
      div2 = element("div");
      button1 = element("button");
      t4 = text(t4_value);
      t5 = space();
      div3 = element("div");
      button2 = element("button");
      button2.textContent = "Remove";
      t7 = space();
      if (if_block0)
        if_block0.c();
      t8 = space();
      if (if_block1)
        if_block1.c();
      if_block1_anchor = empty();
      attr_dev(label, "class", "label");
      add_location(label, file20, 25, 3, 927);
      attr_dev(div0, "class", "field-label is-normal");
      add_location(div0, file20, 23, 2, 828);
      attr_dev(button0, "class", "button");
      toggle_class(
        button0,
        "is-success",
        /*instance*/
        ctx[25].enabled
      );
      add_location(button0, file20, 33, 4, 1231);
      attr_dev(div1, "class", "control");
      add_location(div1, file20, 32, 3, 1205);
      attr_dev(button1, "class", "button");
      toggle_class(
        button1,
        "is-info",
        /*instance*/
        ctx[25].inverted
      );
      add_location(button1, file20, 38, 4, 1447);
      attr_dev(div2, "class", "control");
      add_location(div2, file20, 37, 3, 1421);
      attr_dev(button2, "class", "button");
      add_location(button2, file20, 43, 4, 1663);
      attr_dev(div3, "class", "control");
      add_location(div3, file20, 42, 3, 1637);
      attr_dev(div4, "class", "field-body");
      add_location(div4, file20, 31, 2, 1177);
      attr_dev(div5, "class", "field has-addons");
      add_location(div5, file20, 22, 1, 795);
      this.first = div5;
    },
    m: function mount(target, anchor) {
      insert_dev(target, div5, anchor);
      append_dev(div5, div0);
      append_dev(div0, label);
      append_dev(label, t0);
      append_dev(div5, t1);
      append_dev(div5, div4);
      append_dev(div4, div1);
      append_dev(div1, button0);
      append_dev(button0, t2);
      append_dev(div4, t3);
      append_dev(div4, div2);
      append_dev(div2, button1);
      append_dev(button1, t4);
      append_dev(div4, t5);
      append_dev(div4, div3);
      append_dev(div3, button2);
      insert_dev(target, t7, anchor);
      if (if_block0)
        if_block0.m(target, anchor);
      insert_dev(target, t8, anchor);
      if (if_block1)
        if_block1.m(target, anchor);
      insert_dev(target, if_block1_anchor, anchor);
      if (!mounted) {
        dispose = [
          listen_dev(button0, "click", click_handler, false, false, false, false),
          listen_dev(button1, "click", click_handler_1, false, false, false, false),
          listen_dev(button2, "click", click_handler_2, false, false, false, false)
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty[0] & /*instances*/
      1 && t0_value !== (t0_value = /*instance*/
      (ctx[25].filter.service === null ? getFilterName(
        /*instance*/
        ctx[25].filter.type,
        /*instance*/
        ctx[25].inverted
      ) : getServices()[
        /*instance*/
        ctx[25].filter.service
      ].filterTypes[
        /*instance*/
        ctx[25].filter.type
      ].name(
        /*instance*/
        ctx[25].inverted
      )) + ""))
        set_data_dev(t0, t0_value);
      if (dirty[0] & /*instances*/
      1 && t2_value !== (t2_value = /*instance*/
      ctx[25].enabled ? "Enabled" : "Disabled"))
        set_data_dev(t2, t2_value);
      if (dirty[0] & /*instances*/
      1) {
        toggle_class(
          button0,
          "is-success",
          /*instance*/
          ctx[25].enabled
        );
      }
      if (dirty[0] & /*instances*/
      1 && t4_value !== (t4_value = /*instance*/
      ctx[25].inverted ? "Inverted" : "Normal"))
        set_data_dev(t4, t4_value);
      if (dirty[0] & /*instances*/
      1) {
        toggle_class(
          button1,
          "is-info",
          /*instance*/
          ctx[25].inverted
        );
      }
      if (
        /*instance*/
        ctx[25].filter.service !== null
      ) {
        if (if_block0) {
          if_block0.p(ctx, dirty);
        } else {
          if_block0 = create_if_block_27(ctx);
          if_block0.c();
          if_block0.m(t8.parentNode, t8);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block1) {
        if_block1.p(ctx, dirty);
      } else {
        if (if_block1)
          if_block1.d(1);
        if_block1 = current_block_type && current_block_type(ctx);
        if (if_block1) {
          if_block1.c();
          if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
        }
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div5);
      if (detaching)
        detach_dev(t7);
      if (if_block0)
        if_block0.d(detaching);
      if (detaching)
        detach_dev(t8);
      if (if_block1) {
        if_block1.d(detaching);
      }
      if (detaching)
        detach_dev(if_block1_anchor);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_4.name,
    type: "each",
    source: "(22:0) {#each instances as instance, index (`${JSON.stringify(instance)}",
    ctx
  });
  return block;
}
function create_each_block_3(ctx) {
  let a;
  let t_value = getFilterName(
    /*filterType*/
    ctx[16],
    false
  ) + "";
  let t;
  let mounted;
  let dispose;
  function click_handler_3() {
    return (
      /*click_handler_3*/
      ctx[12](
        /*filterType*/
        ctx[16]
      )
    );
  }
  const block = {
    c: function create() {
      a = element("a");
      t = text(t_value);
      attr_dev(a, "class", "dropdown-item");
      add_location(a, file20, 118, 2, 3898);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a, anchor);
      append_dev(a, t);
      if (!mounted) {
        dispose = listen_dev(a, "click", click_handler_3, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_3.name,
    type: "each",
    source: "(117:1) {#each filterTypes as filterType}",
    ctx
  });
  return block;
}
function create_each_block_2(ctx) {
  let a;
  let t0_value = (
    /*filterType*/
    ctx[16][2].name(false) + ""
  );
  let t0;
  let t1;
  let mounted;
  let dispose;
  function click_handler_4() {
    return (
      /*click_handler_4*/
      ctx[13](
        /*filterType*/
        ctx[16]
      )
    );
  }
  const block = {
    c: function create() {
      a = element("a");
      t0 = text(t0_value);
      t1 = space();
      attr_dev(a, "class", "dropdown-item");
      add_location(a, file20, 124, 2, 4118);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a, anchor);
      append_dev(a, t0);
      append_dev(a, t1);
      if (!mounted) {
        dispose = listen_dev(a, "click", click_handler_4, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_2.name,
    type: "each",
    source: "(123:1) {#each serviceFilterTypes as filterType}",
    ctx
  });
  return block;
}
function create_default_slot_1(ctx) {
  let t;
  let each1_anchor;
  let each_value_3 = filterTypes;
  validate_each_argument(each_value_3);
  let each_blocks_1 = [];
  for (let i = 0; i < each_value_3.length; i += 1) {
    each_blocks_1[i] = create_each_block_3(get_each_context_3(ctx, each_value_3, i));
  }
  let each_value_2 = (
    /*serviceFilterTypes*/
    ctx[1]
  );
  validate_each_argument(each_value_2);
  let each_blocks = [];
  for (let i = 0; i < each_value_2.length; i += 1) {
    each_blocks[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
  }
  const block = {
    c: function create() {
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        each_blocks_1[i].c();
      }
      t = space();
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      each1_anchor = empty();
    },
    m: function mount(target, anchor) {
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        if (each_blocks_1[i]) {
          each_blocks_1[i].m(target, anchor);
        }
      }
      insert_dev(target, t, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, each1_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*addFilter*/
      4) {
        each_value_3 = filterTypes;
        validate_each_argument(each_value_3);
        let i;
        for (i = 0; i < each_value_3.length; i += 1) {
          const child_ctx = get_each_context_3(ctx2, each_value_3, i);
          if (each_blocks_1[i]) {
            each_blocks_1[i].p(child_ctx, dirty);
          } else {
            each_blocks_1[i] = create_each_block_3(child_ctx);
            each_blocks_1[i].c();
            each_blocks_1[i].m(t.parentNode, t);
          }
        }
        for (; i < each_blocks_1.length; i += 1) {
          each_blocks_1[i].d(1);
        }
        each_blocks_1.length = each_value_3.length;
      }
      if (dirty[0] & /*addFilter, serviceFilterTypes*/
      6) {
        each_value_2 = /*serviceFilterTypes*/
        ctx2[1];
        validate_each_argument(each_value_2);
        let i;
        for (i = 0; i < each_value_2.length; i += 1) {
          const child_ctx = get_each_context_2(ctx2, each_value_2, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block_2(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(each1_anchor.parentNode, each1_anchor);
          }
        }
        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }
        each_blocks.length = each_value_2.length;
      }
    },
    d: function destroy(detaching) {
      destroy_each(each_blocks_1, detaching);
      if (detaching)
        detach_dev(t);
      destroy_each(each_blocks, detaching);
      if (detaching)
        detach_dev(each1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_default_slot_1.name,
    type: "slot",
    source: "(116:0) <Dropdown labelText='New Filter'>",
    ctx
  });
  return block;
}
function create_each_block_14(ctx) {
  let a;
  let t_value = getFilterName(
    /*filterType*/
    ctx[16],
    true
  ) + "";
  let t;
  let mounted;
  let dispose;
  function click_handler_5() {
    return (
      /*click_handler_5*/
      ctx[14](
        /*filterType*/
        ctx[16]
      )
    );
  }
  const block = {
    c: function create() {
      a = element("a");
      t = text(t_value);
      attr_dev(a, "class", "dropdown-item");
      add_location(a, file20, 132, 2, 4397);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a, anchor);
      append_dev(a, t);
      if (!mounted) {
        dispose = listen_dev(a, "click", click_handler_5, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_14.name,
    type: "each",
    source: "(131:1) {#each filterTypes as filterType}",
    ctx
  });
  return block;
}
function create_each_block10(ctx) {
  let a;
  let t0_value = (
    /*filterType*/
    ctx[16][2].name(true) + ""
  );
  let t0;
  let t1;
  let mounted;
  let dispose;
  function click_handler_6() {
    return (
      /*click_handler_6*/
      ctx[15](
        /*filterType*/
        ctx[16]
      )
    );
  }
  const block = {
    c: function create() {
      a = element("a");
      t0 = text(t0_value);
      t1 = space();
      attr_dev(a, "class", "dropdown-item");
      add_location(a, file20, 138, 2, 4615);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a, anchor);
      append_dev(a, t0);
      append_dev(a, t1);
      if (!mounted) {
        dispose = listen_dev(a, "click", click_handler_6, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block10.name,
    type: "each",
    source: "(137:1) {#each serviceFilterTypes as filterType}",
    ctx
  });
  return block;
}
function create_default_slot3(ctx) {
  let t;
  let each1_anchor;
  let each_value_1 = filterTypes;
  validate_each_argument(each_value_1);
  let each_blocks_1 = [];
  for (let i = 0; i < each_value_1.length; i += 1) {
    each_blocks_1[i] = create_each_block_14(get_each_context_14(ctx, each_value_1, i));
  }
  let each_value = (
    /*serviceFilterTypes*/
    ctx[1]
  );
  validate_each_argument(each_value);
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block10(get_each_context10(ctx, each_value, i));
  }
  const block = {
    c: function create() {
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        each_blocks_1[i].c();
      }
      t = space();
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      each1_anchor = empty();
    },
    m: function mount(target, anchor) {
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        if (each_blocks_1[i]) {
          each_blocks_1[i].m(target, anchor);
        }
      }
      insert_dev(target, t, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, each1_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*addFilter*/
      4) {
        each_value_1 = filterTypes;
        validate_each_argument(each_value_1);
        let i;
        for (i = 0; i < each_value_1.length; i += 1) {
          const child_ctx = get_each_context_14(ctx2, each_value_1, i);
          if (each_blocks_1[i]) {
            each_blocks_1[i].p(child_ctx, dirty);
          } else {
            each_blocks_1[i] = create_each_block_14(child_ctx);
            each_blocks_1[i].c();
            each_blocks_1[i].m(t.parentNode, t);
          }
        }
        for (; i < each_blocks_1.length; i += 1) {
          each_blocks_1[i].d(1);
        }
        each_blocks_1.length = each_value_1.length;
      }
      if (dirty[0] & /*addFilter, serviceFilterTypes*/
      6) {
        each_value = /*serviceFilterTypes*/
        ctx2[1];
        validate_each_argument(each_value);
        let i;
        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context10(ctx2, each_value, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block10(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(each1_anchor.parentNode, each1_anchor);
          }
        }
        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }
        each_blocks.length = each_value.length;
      }
    },
    d: function destroy(detaching) {
      destroy_each(each_blocks_1, detaching);
      if (detaching)
        detach_dev(t);
      destroy_each(each_blocks, detaching);
      if (detaching)
        detach_dev(each1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_default_slot3.name,
    type: "slot",
    source: "(130:0) <Dropdown labelText='New Inverted Filter'>",
    ctx
  });
  return block;
}
function create_fragment20(ctx) {
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let t0;
  let dropdown0;
  let t1;
  let dropdown1;
  let current;
  let each_value_4 = (
    /*instances*/
    ctx[0]
  );
  validate_each_argument(each_value_4);
  const get_key = (ctx2) => `${JSON.stringify(
    /*instance*/
    ctx2[25]
  )}/${/*index*/
  ctx2[27]}`;
  validate_each_keys(ctx, each_value_4, get_each_context_4, get_key);
  for (let i = 0; i < each_value_4.length; i += 1) {
    let child_ctx = get_each_context_4(ctx, each_value_4, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block_4(key, child_ctx));
  }
  dropdown0 = new Dropdown_default({
    props: {
      labelText: "New Filter",
      $$slots: { default: [create_default_slot_1] },
      $$scope: { ctx }
    },
    $$inline: true
  });
  dropdown1 = new Dropdown_default({
    props: {
      labelText: "New Inverted Filter",
      $$slots: { default: [create_default_slot3] },
      $$scope: { ctx }
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t0 = space();
      create_component(dropdown0.$$.fragment);
      t1 = space();
      create_component(dropdown1.$$.fragment);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, t0, anchor);
      mount_component(dropdown0, target, anchor);
      insert_dev(target, t1, anchor);
      mount_component(dropdown1, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*instances, removeFilter*/
      9) {
        each_value_4 = /*instances*/
        ctx2[0];
        validate_each_argument(each_value_4);
        validate_each_keys(ctx2, each_value_4, get_each_context_4, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value_4, each_1_lookup, t0.parentNode, destroy_block, create_each_block_4, t0, get_each_context_4);
      }
      const dropdown0_changes = {};
      if (dirty[1] & /*$$scope*/
      1) {
        dropdown0_changes.$$scope = { dirty, ctx: ctx2 };
      }
      dropdown0.$set(dropdown0_changes);
      const dropdown1_changes = {};
      if (dirty[1] & /*$$scope*/
      1) {
        dropdown1_changes.$$scope = { dirty, ctx: ctx2 };
      }
      dropdown1.$set(dropdown1_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(dropdown0.$$.fragment, local);
      transition_in(dropdown1.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(dropdown0.$$.fragment, local);
      transition_out(dropdown1.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d(detaching);
      }
      if (detaching)
        detach_dev(t0);
      destroy_component(dropdown0, detaching);
      if (detaching)
        detach_dev(t1);
      destroy_component(dropdown1, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment20.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance20($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("FiltersOptions", slots, []);
  let { instances } = $$props;
  const serviceFilterTypes = Object.values(getServices()).flatMap((s) => Object.entries(s.filterTypes).map((m) => [s.name, ...m]));
  function addFilter(filterType, inverted, service = null) {
    instances.push({
      filter: defaultFilter(filterType, service),
      enabled: true,
      inverted
    });
    $$invalidate(0, instances);
  }
  function removeFilter(index) {
    instances.splice(index, 1);
    $$invalidate(0, instances);
  }
  $$self.$$.on_mount.push(function() {
    if (instances === void 0 && !("instances" in $$props || $$self.$$.bound[$$self.$$.props["instances"]])) {
      console.warn("<FiltersOptions> was created without expected prop 'instances'");
    }
  });
  const writable_props = ["instances"];
  Object_15.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<FiltersOptions> was created with unknown prop '${key}'`);
  });
  const click_handler = (instance31, each_value_4, index) => $$invalidate(0, each_value_4[index].enabled = !instance31.enabled, instances);
  const click_handler_1 = (instance31, each_value_4, index) => $$invalidate(0, each_value_4[index].inverted = !instance31.inverted, instances);
  const click_handler_2 = (index) => removeFilter(index);
  function input_input_handler(prop, each_value_4, index) {
    each_value_4[index].filter[prop] = this.value;
    $$invalidate(0, instances);
  }
  function input_input_handler_1(each_value_4, index) {
    each_value_4[index].filter.byUsername = this.value;
    $$invalidate(0, instances);
  }
  function input0_input_handler(each_value_4, index) {
    each_value_4[index].filter.interval = to_number(this.value);
    $$invalidate(0, instances);
  }
  function input1_input_handler(each_value_4, index) {
    each_value_4[index].filter.offset = to_number(this.value);
    $$invalidate(0, instances);
  }
  function input2_change_handler(each_value_4, index) {
    each_value_4[index].filter.includeOffset = this.checked;
    $$invalidate(0, instances);
  }
  const click_handler_3 = (filterType) => addFilter(filterType, false);
  const click_handler_4 = (filterType) => addFilter(filterType[1], false, filterType[0]);
  const click_handler_5 = (filterType) => addFilter(filterType, true);
  const click_handler_6 = (filterType) => addFilter(filterType[1], true, filterType[0]);
  $$self.$$set = ($$props2) => {
    if ("instances" in $$props2)
      $$invalidate(0, instances = $$props2.instances);
  };
  $$self.$capture_state = () => ({
    Dropdown: Dropdown_default,
    filterTypes,
    getFilterName,
    defaultFilter,
    getServices,
    instances,
    serviceFilterTypes,
    addFilter,
    removeFilter
  });
  $$self.$inject_state = ($$props2) => {
    if ("instances" in $$props2)
      $$invalidate(0, instances = $$props2.instances);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    instances,
    serviceFilterTypes,
    addFilter,
    removeFilter,
    click_handler,
    click_handler_1,
    click_handler_2,
    input_input_handler,
    input_input_handler_1,
    input0_input_handler,
    input1_input_handler,
    input2_change_handler,
    click_handler_3,
    click_handler_4,
    click_handler_5,
    click_handler_6
  ];
}
var FiltersOptions = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance20, create_fragment20, safe_not_equal, { instances: 0 }, null, [-1, -1]);
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "FiltersOptions",
      options,
      id: create_fragment20.name
    });
  }
  get instances() {
    throw new Error("<FiltersOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set instances(value) {
    throw new Error("<FiltersOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var FiltersOptions_default = FiltersOptions;

// src/sidebar/BatchActions.svelte
var { Object: Object_16 } = globals;
var file21 = "src/sidebar/BatchActions.svelte";
function get_each_context11(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[6] = list[i];
  return child_ctx;
}
function get_each_context_15(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[19] = list[i];
  child_ctx[21] = i;
  return child_ctx;
}
function create_each_block_15(ctx) {
  let option;
  let t_value = (
    /*t*/
    ctx[19].title + ""
  );
  let t;
  let option_value_value;
  const block = {
    c: function create() {
      option = element("option");
      t = text(t_value);
      option.__value = option_value_value = /*index*/
      ctx[21];
      option.value = option.__value;
      add_location(option, file21, 34, 3, 1422);
    },
    m: function mount(target, anchor) {
      insert_dev(target, option, anchor);
      append_dev(option, t);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*timelines*/
      2 && t_value !== (t_value = /*t*/
      ctx2[19].title + ""))
        set_data_dev(t, t_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(option);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_15.name,
    type: "each",
    source: "(34:2) {#each timelines as t, index}",
    ctx
  });
  return block;
}
function create_each_block11(ctx) {
  let option;
  let t_value = (
    /*action*/
    ctx[6] + ""
  );
  let t;
  let option_value_value;
  const block = {
    c: function create() {
      option = element("option");
      t = text(t_value);
      option.__value = option_value_value = /*action*/
      ctx[6];
      option.value = option.__value;
      add_location(option, file21, 52, 3, 1805);
    },
    m: function mount(target, anchor) {
      insert_dev(target, option, anchor);
      append_dev(option, t);
    },
    p: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(option);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block11.name,
    type: "each",
    source: "(52:2) {#each [...Object.keys(STANDARD_ACTIONS)] as action}",
    ctx
  });
  return block;
}
function create_fragment21(ctx) {
  let label0;
  let t0;
  let select0;
  let t1;
  let div;
  let filtersoptions;
  let updating_instances;
  let t2;
  let label1;
  let t3;
  let input;
  let t4;
  let label2;
  let t5;
  let select1;
  let t6;
  let button;
  let current;
  let mounted;
  let dispose;
  let each_value_1 = (
    /*timelines*/
    ctx[1]
  );
  validate_each_argument(each_value_1);
  let each_blocks_1 = [];
  for (let i = 0; i < each_value_1.length; i += 1) {
    each_blocks_1[i] = create_each_block_15(get_each_context_15(ctx, each_value_1, i));
  }
  function filtersoptions_instances_binding(value) {
    ctx[13](value);
  }
  let filtersoptions_props = {};
  if (
    /*filterInstances*/
    ctx[0] !== void 0
  ) {
    filtersoptions_props.instances = /*filterInstances*/
    ctx[0];
  }
  filtersoptions = new FiltersOptions_default({
    props: filtersoptions_props,
    $$inline: true
  });
  binding_callbacks.push(() => bind(filtersoptions, "instances", filtersoptions_instances_binding));
  let each_value = [...Object.keys(STANDARD_ACTIONS)];
  validate_each_argument(each_value);
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block11(get_each_context11(ctx, each_value, i));
  }
  const block = {
    c: function create() {
      label0 = element("label");
      t0 = text("Timeline\n	");
      select0 = element("select");
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        each_blocks_1[i].c();
      }
      t1 = space();
      div = element("div");
      create_component(filtersoptions.$$.fragment);
      t2 = space();
      label1 = element("label");
      t3 = text("Only shown articles\n	");
      input = element("input");
      t4 = space();
      label2 = element("label");
      t5 = text("Action\n	");
      select1 = element("select");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t6 = space();
      button = element("button");
      button.textContent = "Do Action";
      if (
        /*timelineIndex*/
        ctx[2] === void 0
      )
        add_render_callback(() => (
          /*select0_change_handler*/
          ctx[12].call(select0)
        ));
      add_location(select0, file21, 32, 1, 1351);
      attr_dev(label0, "class", "field");
      add_location(label0, file21, 30, 0, 1318);
      attr_dev(div, "class", "block");
      add_location(div, file21, 39, 0, 1494);
      attr_dev(input, "type", "checkbox");
      add_location(input, file21, 45, 1, 1618);
      attr_dev(label1, "class", "field");
      add_location(label1, file21, 43, 0, 1574);
      if (
        /*action*/
        ctx[6] === void 0
      )
        add_render_callback(() => (
          /*select1_change_handler*/
          ctx[15].call(select1)
        ));
      add_location(select1, file21, 50, 1, 1718);
      attr_dev(label2, "class", "field");
      add_location(label2, file21, 48, 0, 1687);
      add_location(button, file21, 57, 0, 1877);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, label0, anchor);
      append_dev(label0, t0);
      append_dev(label0, select0);
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        if (each_blocks_1[i]) {
          each_blocks_1[i].m(select0, null);
        }
      }
      select_option(
        select0,
        /*timelineIndex*/
        ctx[2],
        true
      );
      insert_dev(target, t1, anchor);
      insert_dev(target, div, anchor);
      mount_component(filtersoptions, div, null);
      insert_dev(target, t2, anchor);
      insert_dev(target, label1, anchor);
      append_dev(label1, t3);
      append_dev(label1, input);
      input.checked = /*onlyListedArticles*/
      ctx[3];
      insert_dev(target, t4, anchor);
      insert_dev(target, label2, anchor);
      append_dev(label2, t5);
      append_dev(label2, select1);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(select1, null);
        }
      }
      select_option(
        select1,
        /*action*/
        ctx[6],
        true
      );
      insert_dev(target, t6, anchor);
      insert_dev(target, button, anchor);
      current = true;
      if (!mounted) {
        dispose = [
          listen_dev(
            select0,
            "change",
            /*select0_change_handler*/
            ctx[12]
          ),
          listen_dev(
            input,
            "change",
            /*input_change_handler*/
            ctx[14]
          ),
          listen_dev(
            select1,
            "change",
            /*select1_change_handler*/
            ctx[15]
          ),
          listen_dev(
            button,
            "click",
            /*doAction*/
            ctx[8],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*timelines*/
      2) {
        each_value_1 = /*timelines*/
        ctx2[1];
        validate_each_argument(each_value_1);
        let i;
        for (i = 0; i < each_value_1.length; i += 1) {
          const child_ctx = get_each_context_15(ctx2, each_value_1, i);
          if (each_blocks_1[i]) {
            each_blocks_1[i].p(child_ctx, dirty);
          } else {
            each_blocks_1[i] = create_each_block_15(child_ctx);
            each_blocks_1[i].c();
            each_blocks_1[i].m(select0, null);
          }
        }
        for (; i < each_blocks_1.length; i += 1) {
          each_blocks_1[i].d(1);
        }
        each_blocks_1.length = each_value_1.length;
      }
      if (dirty & /*timelineIndex*/
      4) {
        select_option(
          select0,
          /*timelineIndex*/
          ctx2[2]
        );
      }
      const filtersoptions_changes = {};
      if (!updating_instances && dirty & /*filterInstances*/
      1) {
        updating_instances = true;
        filtersoptions_changes.instances = /*filterInstances*/
        ctx2[0];
        add_flush_callback(() => updating_instances = false);
      }
      filtersoptions.$set(filtersoptions_changes);
      if (dirty & /*onlyListedArticles*/
      8) {
        input.checked = /*onlyListedArticles*/
        ctx2[3];
      }
      if (dirty & /*Object, STANDARD_ACTIONS*/
      0) {
        each_value = [...Object.keys(STANDARD_ACTIONS)];
        validate_each_argument(each_value);
        let i;
        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context11(ctx2, each_value, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block11(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(select1, null);
          }
        }
        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }
        each_blocks.length = each_value.length;
      }
      if (dirty & /*action, Object, STANDARD_ACTIONS*/
      64) {
        select_option(
          select1,
          /*action*/
          ctx2[6]
        );
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(filtersoptions.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(filtersoptions.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(label0);
      destroy_each(each_blocks_1, detaching);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(div);
      destroy_component(filtersoptions);
      if (detaching)
        detach_dev(t2);
      if (detaching)
        detach_dev(label1);
      if (detaching)
        detach_dev(t4);
      if (detaching)
        detach_dev(label2);
      destroy_each(each_blocks, detaching);
      if (detaching)
        detach_dev(t6);
      if (detaching)
        detach_dev(button);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment21.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance21($$self, $$props, $$invalidate) {
  let $filteredArticles, $$unsubscribe_filteredArticles = noop, $$subscribe_filteredArticles = () => ($$unsubscribe_filteredArticles(), $$unsubscribe_filteredArticles = subscribe(filteredArticles, ($$value) => $$invalidate(16, $filteredArticles = $$value)), filteredArticles);
  let $articles, $$unsubscribe_articles = noop, $$subscribe_articles = () => ($$unsubscribe_articles(), $$unsubscribe_articles = subscribe(articles, ($$value) => $$invalidate(10, $articles = $$value)), articles);
  let $articleIdPairs;
  $$self.$$.on_destroy.push(() => $$unsubscribe_filteredArticles());
  $$self.$$.on_destroy.push(() => $$unsubscribe_articles());
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("BatchActions", slots, []);
  let { timelines: timelines2 } = $$props;
  let { filterInstances } = $$props;
  let timelineIndex = 0;
  let action = STANDARD_ACTIONS.markAsRead.key;
  let onlyListedArticles = true;
  let articleIdPairs = timelines2[timelineIndex].articles;
  validate_store(articleIdPairs, "articleIdPairs");
  component_subscribe($$self, articleIdPairs, (value) => $$invalidate(11, $articleIdPairs = value));
  let articles;
  let articlesWithRefs;
  let filteredArticles;
  function doAction() {
    for (const articleWithRefs of $filteredArticles) {
      articleAction(action, getRootArticle(articleWithRefs).idPair);
    }
  }
  $$self.$$.on_mount.push(function() {
    if (timelines2 === void 0 && !("timelines" in $$props || $$self.$$.bound[$$self.$$.props["timelines"]])) {
      console.warn("<BatchActions> was created without expected prop 'timelines'");
    }
    if (filterInstances === void 0 && !("filterInstances" in $$props || $$self.$$.bound[$$self.$$.props["filterInstances"]])) {
      console.warn("<BatchActions> was created without expected prop 'filterInstances'");
    }
  });
  const writable_props = ["timelines", "filterInstances"];
  Object_16.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<BatchActions> was created with unknown prop '${key}'`);
  });
  function select0_change_handler() {
    timelineIndex = select_value(this);
    $$invalidate(2, timelineIndex);
  }
  function filtersoptions_instances_binding(value) {
    filterInstances = value;
    $$invalidate(0, filterInstances);
  }
  function input_change_handler() {
    onlyListedArticles = this.checked;
    $$invalidate(3, onlyListedArticles);
  }
  function select1_change_handler() {
    action = select_value(this);
    $$invalidate(6, action);
  }
  $$self.$$set = ($$props2) => {
    if ("timelines" in $$props2)
      $$invalidate(1, timelines2 = $$props2.timelines);
    if ("filterInstances" in $$props2)
      $$invalidate(0, filterInstances = $$props2.filterInstances);
  };
  $$self.$capture_state = () => ({
    FiltersOptions: FiltersOptions_default,
    useFilters,
    getWritable,
    derived,
    Article,
    deriveArticleRefs,
    getDerivedArticleWithRefs,
    getRootArticle,
    articleAction,
    STANDARD_ACTIONS,
    timelines: timelines2,
    filterInstances,
    timelineIndex,
    action,
    onlyListedArticles,
    articleIdPairs,
    articles,
    articlesWithRefs,
    filteredArticles,
    doAction,
    $filteredArticles,
    $articles,
    $articleIdPairs
  });
  $$self.$inject_state = ($$props2) => {
    if ("timelines" in $$props2)
      $$invalidate(1, timelines2 = $$props2.timelines);
    if ("filterInstances" in $$props2)
      $$invalidate(0, filterInstances = $$props2.filterInstances);
    if ("timelineIndex" in $$props2)
      $$invalidate(2, timelineIndex = $$props2.timelineIndex);
    if ("action" in $$props2)
      $$invalidate(6, action = $$props2.action);
    if ("onlyListedArticles" in $$props2)
      $$invalidate(3, onlyListedArticles = $$props2.onlyListedArticles);
    if ("articleIdPairs" in $$props2)
      $$invalidate(7, articleIdPairs = $$props2.articleIdPairs);
    if ("articles" in $$props2)
      $$subscribe_articles($$invalidate(4, articles = $$props2.articles));
    if ("articlesWithRefs" in $$props2)
      $$invalidate(9, articlesWithRefs = $$props2.articlesWithRefs);
    if ("filteredArticles" in $$props2)
      $$subscribe_filteredArticles($$invalidate(5, filteredArticles = $$props2.filteredArticles));
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*$articleIdPairs*/
    2048) {
      $:
        $$subscribe_articles($$invalidate(4, articles = derived($articleIdPairs.map(getWritable), (a) => a)));
    }
    if ($$self.$$.dirty & /*$articles*/
    1024) {
      $:
        $$invalidate(9, articlesWithRefs = derived($articles.map(deriveArticleRefs), (a) => a.map(getDerivedArticleWithRefs)));
    }
    if ($$self.$$.dirty & /*articlesWithRefs, filterInstances, onlyListedArticles, timelines, timelineIndex*/
    527) {
      $:
        $$subscribe_filteredArticles($$invalidate(5, filteredArticles = derived(articlesWithRefs, (articlesWithRefs2) => useFilters(articlesWithRefs2, [
          ...filterInstances,
          ...onlyListedArticles ? timelines2[timelineIndex].filters : []
        ]))));
    }
  };
  return [
    filterInstances,
    timelines2,
    timelineIndex,
    onlyListedArticles,
    articles,
    filteredArticles,
    action,
    articleIdPairs,
    doAction,
    articlesWithRefs,
    $articles,
    $articleIdPairs,
    select0_change_handler,
    filtersoptions_instances_binding,
    input_change_handler,
    select1_change_handler
  ];
}
var BatchActions = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance21, create_fragment21, safe_not_equal, { timelines: 1, filterInstances: 0 });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "BatchActions",
      options,
      id: create_fragment21.name
    });
  }
  get timelines() {
    throw new Error("<BatchActions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelines(value) {
    throw new Error("<BatchActions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get filterInstances() {
    throw new Error("<BatchActions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set filterInstances(value) {
    throw new Error("<BatchActions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var BatchActions_default = BatchActions;

// src/sidebar/Sidebar.svelte
var import_faTableColumns = __toESM(require_faTableColumns());

// src/sidebar/TimelineViewEdit.svelte
var { Object: Object_17 } = globals;
var file22 = "src/sidebar/TimelineViewEdit.svelte";
function get_each_context12(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[20] = list[i][0];
  child_ctx[1] = list[i][1];
  const constants_0 = Object.keys(
    /*timelines*/
    child_ctx[2]
  ).filter(function func3(...args) {
    return (
      /*func*/
      ctx[18](
        /*timelineView*/
        child_ctx[1],
        ...args
      )
    );
  });
  child_ctx[21] = constants_0;
  return child_ctx;
}
function get_each_context_16(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[24] = list[i];
  return child_ctx;
}
function get_each_context_22(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[24] = list[i];
  child_ctx[28] = i;
  return child_ctx;
}
function get_each_context_32(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[29] = list[i];
  return child_ctx;
}
function create_each_block_32(ctx) {
  let option;
  let t_value = (
    /*newTimeline*/
    ctx[29] + ""
  );
  let t;
  let option_value_value;
  const block = {
    c: function create() {
      option = element("option");
      t = text(t_value);
      option.__value = option_value_value = /*newTimeline*/
      ctx[29];
      option.value = option.__value;
      add_location(option, file22, 60, 6, 2216);
    },
    m: function mount(target, anchor) {
      insert_dev(target, option, anchor);
      append_dev(option, t);
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*timelines, timelineViews*/
      5 && t_value !== (t_value = /*newTimeline*/
      ctx2[29] + ""))
        set_data_dev(t, t_value);
      if (dirty[0] & /*timelines, timelineViews*/
      5 && option_value_value !== (option_value_value = /*newTimeline*/
      ctx2[29])) {
        prop_dev(option, "__value", option_value_value);
        option.value = option.__value;
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(option);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_32.name,
    type: "each",
    source: "(60:5) {#each newTimelines as newTimeline}",
    ctx
  });
  return block;
}
function create_if_block_113(ctx) {
  let button0;
  let t0;
  let button0_disabled_value;
  let t1;
  let button1;
  let t2;
  let button1_disabled_value;
  let mounted;
  let dispose;
  function click_handler_2() {
    return (
      /*click_handler_2*/
      ctx[14](
        /*viewName*/
        ctx[20],
        /*index*/
        ctx[28]
      )
    );
  }
  function click_handler_3() {
    return (
      /*click_handler_3*/
      ctx[15](
        /*viewName*/
        ctx[20],
        /*index*/
        ctx[28]
      )
    );
  }
  const block = {
    c: function create() {
      button0 = element("button");
      t0 = text("\u2193");
      t1 = space();
      button1 = element("button");
      t2 = text("\u2191");
      button0.disabled = button0_disabled_value = /*index*/
      ctx[28] === /*timelineView*/
      ctx[1].timelineIds.length - 1;
      add_location(button0, file22, 64, 5, 2345);
      button1.disabled = button1_disabled_value = /*index*/
      ctx[28] === 0;
      add_location(button1, file22, 65, 5, 2480);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button0, anchor);
      append_dev(button0, t0);
      insert_dev(target, t1, anchor);
      insert_dev(target, button1, anchor);
      append_dev(button1, t2);
      if (!mounted) {
        dispose = [
          listen_dev(button0, "click", click_handler_2, false, false, false, false),
          listen_dev(button1, "click", click_handler_3, false, false, false, false)
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty[0] & /*timelineViews, timelines*/
      5 && button0_disabled_value !== (button0_disabled_value = /*index*/
      ctx[28] === /*timelineView*/
      ctx[1].timelineIds.length - 1)) {
        prop_dev(button0, "disabled", button0_disabled_value);
      }
      if (dirty[0] & /*timelineViews, timelines*/
      5 && button1_disabled_value !== (button1_disabled_value = /*index*/
      ctx[28] === 0)) {
        prop_dev(button1, "disabled", button1_disabled_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button0);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(button1);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_113.name,
    type: "if",
    source: "(64:4) {#if timelineView.timelineIds.length > 1}",
    ctx
  });
  return block;
}
function create_each_block_22(key_1, ctx) {
  let div;
  let select;
  let option;
  let t0_value = (
    /*id*/
    ctx[24] + ""
  );
  let t0;
  let option_value_value;
  let select_value_value;
  let t1;
  let t2;
  let button;
  let mounted;
  let dispose;
  let each_value_3 = (
    /*newTimelines*/
    ctx[21]
  );
  validate_each_argument(each_value_3);
  let each_blocks = [];
  for (let i = 0; i < each_value_3.length; i += 1) {
    each_blocks[i] = create_each_block_32(get_each_context_32(ctx, each_value_3, i));
  }
  function input_handler(...args) {
    return (
      /*input_handler*/
      ctx[13](
        /*viewName*/
        ctx[20],
        /*index*/
        ctx[28],
        ...args
      )
    );
  }
  let if_block = (
    /*timelineView*/
    ctx[1].timelineIds.length > 1 && create_if_block_113(ctx)
  );
  function click_handler_4() {
    return (
      /*click_handler_4*/
      ctx[16](
        /*viewName*/
        ctx[20],
        /*index*/
        ctx[28]
      )
    );
  }
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      div = element("div");
      select = element("select");
      option = element("option");
      t0 = text(t0_value);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t1 = space();
      if (if_block)
        if_block.c();
      t2 = space();
      button = element("button");
      button.textContent = "Remove";
      option.__value = option_value_value = /*id*/
      ctx[24];
      option.value = option.__value;
      add_location(option, file22, 58, 5, 2136);
      add_location(select, file22, 57, 4, 2052);
      add_location(button, file22, 67, 4, 2589);
      attr_dev(div, "class", "buttons has-addons");
      add_location(div, file22, 56, 3, 2015);
      this.first = div;
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, select);
      append_dev(select, option);
      append_dev(option, t0);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(select, null);
        }
      }
      select_option(
        select,
        /*id*/
        ctx[24]
      );
      append_dev(div, t1);
      if (if_block)
        if_block.m(div, null);
      append_dev(div, t2);
      append_dev(div, button);
      if (!mounted) {
        dispose = [
          listen_dev(select, "input", input_handler, false, false, false, false),
          listen_dev(button, "click", click_handler_4, false, false, false, false)
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty[0] & /*timelineViews*/
      1 && t0_value !== (t0_value = /*id*/
      ctx[24] + ""))
        set_data_dev(t0, t0_value);
      if (dirty[0] & /*timelineViews, timelines*/
      5 && option_value_value !== (option_value_value = /*id*/
      ctx[24])) {
        prop_dev(option, "__value", option_value_value);
        option.value = option.__value;
      }
      if (dirty[0] & /*timelines, timelineViews*/
      5) {
        each_value_3 = /*newTimelines*/
        ctx[21];
        validate_each_argument(each_value_3);
        let i;
        for (i = 0; i < each_value_3.length; i += 1) {
          const child_ctx = get_each_context_32(ctx, each_value_3, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block_32(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(select, null);
          }
        }
        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }
        each_blocks.length = each_value_3.length;
      }
      if (dirty[0] & /*timelineViews, timelines*/
      5 && select_value_value !== (select_value_value = /*id*/
      ctx[24])) {
        select_option(
          select,
          /*id*/
          ctx[24]
        );
      }
      if (
        /*timelineView*/
        ctx[1].timelineIds.length > 1
      ) {
        if (if_block) {
          if_block.p(ctx, dirty);
        } else {
          if_block = create_if_block_113(ctx);
          if_block.c();
          if_block.m(div, t2);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      destroy_each(each_blocks, detaching);
      if (if_block)
        if_block.d();
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_22.name,
    type: "each",
    source: "(56:2) {#each timelineView.timelineIds as id, index (id)}",
    ctx
  });
  return block;
}
function create_if_block14(ctx) {
  let dropdown;
  let current;
  dropdown = new Dropdown_default({
    props: {
      labelText: "New timeline",
      $$slots: { default: [create_default_slot4] },
      $$scope: { ctx }
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      create_component(dropdown.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(dropdown, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const dropdown_changes = {};
      if (dirty[0] & /*timelines, timelineViews*/
      5 | dirty[1] & /*$$scope*/
      2) {
        dropdown_changes.$$scope = { dirty, ctx: ctx2 };
      }
      dropdown.$set(dropdown_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(dropdown.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(dropdown.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(dropdown, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block14.name,
    type: "if",
    source: "(71:2) {#if newTimelines.length}",
    ctx
  });
  return block;
}
function create_each_block_16(ctx) {
  let div;
  let button;
  let t0_value = (
    /*id*/
    ctx[24] + ""
  );
  let t0;
  let t1;
  let mounted;
  let dispose;
  function click_handler_5() {
    return (
      /*click_handler_5*/
      ctx[17](
        /*viewName*/
        ctx[20],
        /*id*/
        ctx[24]
      )
    );
  }
  const block = {
    c: function create() {
      div = element("div");
      button = element("button");
      t0 = text(t0_value);
      t1 = space();
      add_location(button, file22, 74, 6, 2813);
      attr_dev(div, "class", "control");
      add_location(div, file22, 73, 5, 2785);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, button);
      append_dev(button, t0);
      append_dev(div, t1);
      if (!mounted) {
        dispose = listen_dev(button, "click", click_handler_5, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty[0] & /*timelines, timelineViews*/
      5 && t0_value !== (t0_value = /*id*/
      ctx[24] + ""))
        set_data_dev(t0, t0_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_16.name,
    type: "each",
    source: "(73:4) {#each newTimelines as id}",
    ctx
  });
  return block;
}
function create_default_slot4(ctx) {
  let each_1_anchor;
  let each_value_1 = (
    /*newTimelines*/
    ctx[21]
  );
  validate_each_argument(each_value_1);
  let each_blocks = [];
  for (let i = 0; i < each_value_1.length; i += 1) {
    each_blocks[i] = create_each_block_16(get_each_context_16(ctx, each_value_1, i));
  }
  const block = {
    c: function create() {
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      each_1_anchor = empty();
    },
    m: function mount(target, anchor) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, each_1_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*addTimeline, timelineViews, timelines*/
      37) {
        each_value_1 = /*newTimelines*/
        ctx2[21];
        validate_each_argument(each_value_1);
        let i;
        for (i = 0; i < each_value_1.length; i += 1) {
          const child_ctx = get_each_context_16(ctx2, each_value_1, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block_16(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
          }
        }
        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }
        each_blocks.length = each_value_1.length;
      }
    },
    d: function destroy(detaching) {
      destroy_each(each_blocks, detaching);
      if (detaching)
        detach_dev(each_1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_default_slot4.name,
    type: "slot",
    source: "(72:3) <Dropdown labelText='New timeline'>",
    ctx
  });
  return block;
}
function create_each_block12(ctx) {
  let label;
  let t0_value = (
    /*viewName*/
    ctx[20] + ""
  );
  let t0;
  let t1;
  let button0;
  let t3;
  let button1;
  let t5;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let t6;
  let t7;
  let current;
  let mounted;
  let dispose;
  function click_handler() {
    return (
      /*click_handler*/
      ctx[11](
        /*viewName*/
        ctx[20]
      )
    );
  }
  function click_handler_1() {
    return (
      /*click_handler_1*/
      ctx[12](
        /*viewName*/
        ctx[20]
      )
    );
  }
  let each_value_2 = (
    /*timelineView*/
    ctx[1].timelineIds
  );
  validate_each_argument(each_value_2);
  const get_key = (ctx2) => (
    /*id*/
    ctx2[24]
  );
  validate_each_keys(ctx, each_value_2, get_each_context_22, get_key);
  for (let i = 0; i < each_value_2.length; i += 1) {
    let child_ctx = get_each_context_22(ctx, each_value_2, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block_22(key, child_ctx));
  }
  let if_block = (
    /*newTimelines*/
    ctx[21].length && create_if_block14(ctx)
  );
  const block = {
    c: function create() {
      label = element("label");
      t0 = text(t0_value);
      t1 = space();
      button0 = element("button");
      button0.textContent = "Set View";
      t3 = space();
      button1 = element("button");
      button1.textContent = "Remove View";
      t5 = space();
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t6 = space();
      if (if_block)
        if_block.c();
      t7 = space();
      add_location(button0, file22, 53, 2, 1829);
      add_location(button1, file22, 54, 2, 1892);
      attr_dev(label, "class", "field");
      add_location(label, file22, 51, 1, 1792);
    },
    m: function mount(target, anchor) {
      insert_dev(target, label, anchor);
      append_dev(label, t0);
      append_dev(label, t1);
      append_dev(label, button0);
      append_dev(label, t3);
      append_dev(label, button1);
      append_dev(label, t5);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(label, null);
        }
      }
      append_dev(label, t6);
      if (if_block)
        if_block.m(label, null);
      append_dev(label, t7);
      current = true;
      if (!mounted) {
        dispose = [
          listen_dev(button0, "click", click_handler, false, false, false, false),
          listen_dev(button1, "click", click_handler_1, false, false, false, false)
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if ((!current || dirty[0] & /*timelineViews*/
      1) && t0_value !== (t0_value = /*viewName*/
      ctx[20] + ""))
        set_data_dev(t0, t0_value);
      if (dirty[0] & /*removeTimeline, timelineViews, moveTimeline, replaceTimeline, timelines*/
      453) {
        each_value_2 = /*timelineView*/
        ctx[1].timelineIds;
        validate_each_argument(each_value_2);
        validate_each_keys(ctx, each_value_2, get_each_context_22, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value_2, each_1_lookup, label, destroy_block, create_each_block_22, t6, get_each_context_22);
      }
      if (
        /*newTimelines*/
        ctx[21].length
      ) {
        if (if_block) {
          if_block.p(ctx, dirty);
          if (dirty[0] & /*timelines, timelineViews*/
          5) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block14(ctx);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(label, t7);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(label);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
      if (if_block)
        if_block.d();
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block12.name,
    type: "each",
    source: "(50:0) {#each Object.entries(timelineViews) as [viewName, timelineView]}",
    ctx
  });
  return block;
}
function create_fragment22(ctx) {
  let t0;
  let div;
  let input;
  let t1;
  let button;
  let current;
  let mounted;
  let dispose;
  let each_value = Object.entries(
    /*timelineViews*/
    ctx[0]
  );
  validate_each_argument(each_value);
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block12(get_each_context12(ctx, each_value, i));
  }
  const out = (i) => transition_out(each_blocks[i], 1, 1, () => {
    each_blocks[i] = null;
  });
  const block = {
    c: function create() {
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t0 = space();
      div = element("div");
      input = element("input");
      t1 = space();
      button = element("button");
      button.textContent = "Add";
      add_location(input, file22, 83, 1, 2971);
      add_location(button, file22, 84, 1, 3006);
      add_location(div, file22, 82, 0, 2964);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, t0, anchor);
      insert_dev(target, div, anchor);
      append_dev(div, input);
      set_input_value(
        input,
        /*newViewName*/
        ctx[3]
      );
      append_dev(div, t1);
      append_dev(div, button);
      current = true;
      if (!mounted) {
        dispose = [
          listen_dev(
            input,
            "input",
            /*input_input_handler*/
            ctx[19]
          ),
          listen_dev(
            button,
            "click",
            /*addView*/
            ctx[4],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*timelines, timelineViews, addTimeline, removeTimeline, moveTimeline, replaceTimeline, removeView, setView*/
      2021) {
        each_value = Object.entries(
          /*timelineViews*/
          ctx2[0]
        );
        validate_each_argument(each_value);
        let i;
        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context12(ctx2, each_value, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
            transition_in(each_blocks[i], 1);
          } else {
            each_blocks[i] = create_each_block12(child_ctx);
            each_blocks[i].c();
            transition_in(each_blocks[i], 1);
            each_blocks[i].m(t0.parentNode, t0);
          }
        }
        group_outros();
        for (i = each_value.length; i < each_blocks.length; i += 1) {
          out(i);
        }
        check_outros();
      }
      if (dirty[0] & /*newViewName*/
      8 && input.value !== /*newViewName*/
      ctx2[3]) {
        set_input_value(
          input,
          /*newViewName*/
          ctx2[3]
        );
      }
    },
    i: function intro(local) {
      if (current)
        return;
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o: function outro(local) {
      each_blocks = each_blocks.filter(Boolean);
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      destroy_each(each_blocks, detaching);
      if (detaching)
        detach_dev(t0);
      if (detaching)
        detach_dev(div);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment22.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance22($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("TimelineViewEdit", slots, []);
  let { timelineViews: timelineViews2 } = $$props;
  let { timelineView: timelineView2 } = $$props;
  let { timelines: timelines2 } = $$props;
  let newViewName = "";
  function addView() {
    if (newViewName.length === 0 || Object.hasOwn(timelineViews2, newViewName))
      return;
    $$invalidate(
      0,
      timelineViews2[newViewName] = {
        timelineIds: [],
        fullscreen: {
          index: null,
          columnCount: null,
          container: null
        }
      },
      timelineViews2
    );
    updateMainStorage("timelineViews", timelineViews2);
  }
  function addTimeline(view, timelineId) {
    timelineViews2[view].timelineIds.push(timelineId);
    updateMainStorage("timelineViews", timelineViews2);
  }
  function removeTimeline(view, index) {
    timelineViews2[view].timelineIds.splice(index, 1);
    updateMainStorage("timelineViews", timelineViews2);
  }
  function moveTimeline(view, index, up) {
    const removed = timelineViews2[view].timelineIds.splice(index, 1);
    if (up)
      timelineViews2[view].timelineIds.splice(index - 1, 0, removed[0]);
    else
      timelineViews2[view].timelineIds.splice(index + 1, 0, removed[0]);
    updateMainStorage("timelineViews", timelineViews2);
  }
  function replaceTimeline(view, index, newTimeline) {
    timelineViews2[view].timelineIds.splice(index, 1, newTimeline);
    updateMainStorage("timelineViews", timelineViews2);
  }
  function removeView(view) {
    delete timelineViews2[view];
    updateMainStorage("timelineViews", timelineViews2);
  }
  function setView(view) {
    $$invalidate(1, timelineView2 = timelineViews2[view]);
    updateMainStorage("defaultTimelineView", view);
  }
  $$self.$$.on_mount.push(function() {
    if (timelineViews2 === void 0 && !("timelineViews" in $$props || $$self.$$.bound[$$self.$$.props["timelineViews"]])) {
      console.warn("<TimelineViewEdit> was created without expected prop 'timelineViews'");
    }
    if (timelineView2 === void 0 && !("timelineView" in $$props || $$self.$$.bound[$$self.$$.props["timelineView"]])) {
      console.warn("<TimelineViewEdit> was created without expected prop 'timelineView'");
    }
    if (timelines2 === void 0 && !("timelines" in $$props || $$self.$$.bound[$$self.$$.props["timelines"]])) {
      console.warn("<TimelineViewEdit> was created without expected prop 'timelines'");
    }
  });
  const writable_props = ["timelineViews", "timelineView", "timelines"];
  Object_17.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<TimelineViewEdit> was created with unknown prop '${key}'`);
  });
  const click_handler = (viewName) => setView(viewName);
  const click_handler_1 = (viewName) => removeView(viewName);
  const input_handler = (viewName, index, e) => replaceTimeline(viewName, index, e.detail);
  const click_handler_2 = (viewName, index) => moveTimeline(viewName, index, false);
  const click_handler_3 = (viewName, index) => moveTimeline(viewName, index, true);
  const click_handler_4 = (viewName, index) => removeTimeline(viewName, index);
  const click_handler_5 = (viewName, id) => addTimeline(viewName, id);
  const func3 = (timelineView3, t) => !timelineView3.timelineIds.includes(t);
  function input_input_handler() {
    newViewName = this.value;
    $$invalidate(3, newViewName);
  }
  $$self.$$set = ($$props2) => {
    if ("timelineViews" in $$props2)
      $$invalidate(0, timelineViews2 = $$props2.timelineViews);
    if ("timelineView" in $$props2)
      $$invalidate(1, timelineView2 = $$props2.timelineView);
    if ("timelines" in $$props2)
      $$invalidate(2, timelines2 = $$props2.timelines);
  };
  $$self.$capture_state = () => ({
    updateMainStorage,
    Dropdown: Dropdown_default,
    timelineViews: timelineViews2,
    timelineView: timelineView2,
    timelines: timelines2,
    newViewName,
    addView,
    addTimeline,
    removeTimeline,
    moveTimeline,
    replaceTimeline,
    removeView,
    setView
  });
  $$self.$inject_state = ($$props2) => {
    if ("timelineViews" in $$props2)
      $$invalidate(0, timelineViews2 = $$props2.timelineViews);
    if ("timelineView" in $$props2)
      $$invalidate(1, timelineView2 = $$props2.timelineView);
    if ("timelines" in $$props2)
      $$invalidate(2, timelines2 = $$props2.timelines);
    if ("newViewName" in $$props2)
      $$invalidate(3, newViewName = $$props2.newViewName);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    timelineViews2,
    timelineView2,
    timelines2,
    newViewName,
    addView,
    addTimeline,
    removeTimeline,
    moveTimeline,
    replaceTimeline,
    removeView,
    setView,
    click_handler,
    click_handler_1,
    input_handler,
    click_handler_2,
    click_handler_3,
    click_handler_4,
    click_handler_5,
    func3,
    input_input_handler
  ];
}
var TimelineViewEdit = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(
      this,
      options,
      instance22,
      create_fragment22,
      safe_not_equal,
      {
        timelineViews: 0,
        timelineView: 1,
        timelines: 2
      },
      null,
      [-1, -1]
    );
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "TimelineViewEdit",
      options,
      id: create_fragment22.name
    });
  }
  get timelineViews() {
    throw new Error("<TimelineViewEdit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineViews(value) {
    throw new Error("<TimelineViewEdit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get timelineView() {
    throw new Error("<TimelineViewEdit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineView(value) {
    throw new Error("<TimelineViewEdit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get timelines() {
    throw new Error("<TimelineViewEdit>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelines(value) {
    throw new Error("<TimelineViewEdit>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var TimelineViewEdit_default = TimelineViewEdit;

// src/sidebar/Sidebar.svelte
var { Object: Object_18 } = globals;
var file23 = "src/sidebar/Sidebar.svelte";
function get_each_context13(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[18] = list[i][0];
  child_ctx[19] = list[i][1];
  return child_ctx;
}
function get_each_context_17(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[22] = list[i].icon;
  child_ctx[7] = list[i].menu;
  child_ctx[23] = list[i].title;
  return child_ctx;
}
function create_if_block_114(ctx) {
  let div;
  let show_if;
  let current_block_type_index;
  let if_block;
  let current;
  const if_block_creators = [create_if_block_28, create_if_block_35, create_if_block_44, create_if_block_53];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (dirty & /*SidebarMenu, menu*/
    192)
      show_if = null;
    if (
      /*menu*/
      ctx2[7] === /*SidebarMenu*/
      ctx2[6].TimelineEdit
    )
      return 0;
    if (
      /*menu*/
      ctx2[7] === /*SidebarMenu*/
      ctx2[6].BatchActions
    )
      return 1;
    if (
      /*menu*/
      ctx2[7] === /*SidebarMenu*/
      ctx2[6].Undoables
    )
      return 2;
    if (show_if == null)
      show_if = !!!Object.values(
        /*SidebarMenu*/
        ctx2[6]
      ).includes(
        /*menu*/
        ctx2[7]
      );
    if (show_if)
      return 3;
    return -1;
  }
  if (~(current_block_type_index = select_block_type(ctx, -1))) {
    if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  }
  const block = {
    c: function create() {
      div = element("div");
      if (if_block)
        if_block.c();
      attr_dev(div, "class", "sidebarMenu svelte-ckjq5v");
      add_location(div, file23, 81, 2, 2372);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      if (~current_block_type_index) {
        if_blocks[current_block_type_index].m(div, null);
      }
      current = true;
    },
    p: function update3(ctx2, dirty) {
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx2, dirty);
      if (current_block_type_index === previous_block_index) {
        if (~current_block_type_index) {
          if_blocks[current_block_type_index].p(ctx2, dirty);
        }
      } else {
        if (if_block) {
          group_outros();
          transition_out(if_blocks[previous_block_index], 1, 1, () => {
            if_blocks[previous_block_index] = null;
          });
          check_outros();
        }
        if (~current_block_type_index) {
          if_block = if_blocks[current_block_type_index];
          if (!if_block) {
            if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
            if_block.c();
          } else {
            if_block.p(ctx2, dirty);
          }
          transition_in(if_block, 1);
          if_block.m(div, null);
        } else {
          if_block = null;
        }
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      if (~current_block_type_index) {
        if_blocks[current_block_type_index].d();
      }
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_114.name,
    type: "if",
    source: "(81:1) {#if menu !== null}",
    ctx
  });
  return block;
}
function create_if_block_53(ctx) {
  let switch_instance;
  let switch_instance_anchor;
  let current;
  var switch_value = (
    /*menu*/
    ctx[7]
  );
  function switch_props(ctx2) {
    return { $$inline: true };
  }
  if (switch_value) {
    switch_instance = construct_svelte_component_dev(switch_value, switch_props(ctx));
  }
  const block = {
    c: function create() {
      if (switch_instance)
        create_component(switch_instance.$$.fragment);
      switch_instance_anchor = empty();
    },
    m: function mount(target, anchor) {
      if (switch_instance)
        mount_component(switch_instance, target, anchor);
      insert_dev(target, switch_instance_anchor, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*menu*/
      128 && switch_value !== (switch_value = /*menu*/
      ctx2[7])) {
        if (switch_instance) {
          group_outros();
          const old_component = switch_instance;
          transition_out(old_component.$$.fragment, 1, 0, () => {
            destroy_component(old_component, 1);
          });
          check_outros();
        }
        if (switch_value) {
          switch_instance = construct_svelte_component_dev(switch_value, switch_props(ctx2));
          create_component(switch_instance.$$.fragment);
          transition_in(switch_instance.$$.fragment, 1);
          mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
        } else {
          switch_instance = null;
        }
      } else if (switch_value) {
      }
    },
    i: function intro(local) {
      if (current)
        return;
      if (switch_instance)
        transition_in(switch_instance.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      if (switch_instance)
        transition_out(switch_instance.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(switch_instance_anchor);
      if (switch_instance)
        destroy_component(switch_instance, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_53.name,
    type: "if",
    source: "(108:56) ",
    ctx
  });
  return block;
}
function create_if_block_44(ctx) {
  let undoables2;
  let current;
  undoables2 = new Undoables_default({
    props: {
      setModalTimeline: (
        /*setModalTimeline*/
        ctx[4]
      )
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      create_component(undoables2.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(undoables2, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const undoables_changes = {};
      if (dirty & /*setModalTimeline*/
      16)
        undoables_changes.setModalTimeline = /*setModalTimeline*/
        ctx2[4];
      undoables2.$set(undoables_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(undoables2.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(undoables2.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(undoables2, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_44.name,
    type: "if",
    source: "(104:44) ",
    ctx
  });
  return block;
}
function create_if_block_35(ctx) {
  let div;
  let batchactions;
  let updating_filterInstances;
  let current;
  function batchactions_filterInstances_binding(value) {
    ctx[13](value);
  }
  let batchactions_props = { timelines: (
    /*timelines*/
    ctx[0]
  ) };
  if (
    /*batchActionFilters*/
    ctx[1] !== void 0
  ) {
    batchactions_props.filterInstances = /*batchActionFilters*/
    ctx[1];
  }
  batchactions = new BatchActions_default({
    props: batchactions_props,
    $$inline: true
  });
  binding_callbacks.push(() => bind(batchactions, "filterInstances", batchactions_filterInstances_binding));
  const block = {
    c: function create() {
      div = element("div");
      create_component(batchactions.$$.fragment);
      attr_dev(div, "class", "box");
      add_location(div, file23, 97, 4, 2736);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      mount_component(batchactions, div, null);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const batchactions_changes = {};
      if (dirty & /*timelines*/
      1)
        batchactions_changes.timelines = /*timelines*/
        ctx2[0];
      if (!updating_filterInstances && dirty & /*batchActionFilters*/
      2) {
        updating_filterInstances = true;
        batchactions_changes.filterInstances = /*batchActionFilters*/
        ctx2[1];
        add_flush_callback(() => updating_filterInstances = false);
      }
      batchactions.$set(batchactions_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(batchactions.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(batchactions.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      destroy_component(batchactions);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_35.name,
    type: "if",
    source: "(97:47) ",
    ctx
  });
  return block;
}
function create_if_block_28(ctx) {
  let div0;
  let timelineeditmenu;
  let t;
  let div1;
  let timelineviewedit;
  let updating_timelineViews;
  let updating_timelineView;
  let updating_timelines;
  let current;
  timelineeditmenu = new TimelineEditMenu_default({
    props: {
      setModalTimeline: (
        /*setModalTimeline*/
        ctx[4]
      ),
      addTimeline: (
        /*addTimeline*/
        ctx[5]
      )
    },
    $$inline: true
  });
  function timelineviewedit_timelineViews_binding(value) {
    ctx[10](value);
  }
  function timelineviewedit_timelineView_binding(value) {
    ctx[11](value);
  }
  function timelineviewedit_timelines_binding(value) {
    ctx[12](value);
  }
  let timelineviewedit_props = {};
  if (
    /*timelineViews*/
    ctx[2] !== void 0
  ) {
    timelineviewedit_props.timelineViews = /*timelineViews*/
    ctx[2];
  }
  if (
    /*timelineView*/
    ctx[3] !== void 0
  ) {
    timelineviewedit_props.timelineView = /*timelineView*/
    ctx[3];
  }
  if (
    /*timelines*/
    ctx[0] !== void 0
  ) {
    timelineviewedit_props.timelines = /*timelines*/
    ctx[0];
  }
  timelineviewedit = new TimelineViewEdit_default({
    props: timelineviewedit_props,
    $$inline: true
  });
  binding_callbacks.push(() => bind(timelineviewedit, "timelineViews", timelineviewedit_timelineViews_binding));
  binding_callbacks.push(() => bind(timelineviewedit, "timelineView", timelineviewedit_timelineView_binding));
  binding_callbacks.push(() => bind(timelineviewedit, "timelines", timelineviewedit_timelines_binding));
  const block = {
    c: function create() {
      div0 = element("div");
      create_component(timelineeditmenu.$$.fragment);
      t = space();
      div1 = element("div");
      create_component(timelineviewedit.$$.fragment);
      attr_dev(div0, "class", "box");
      add_location(div0, file23, 83, 4, 2445);
      attr_dev(div1, "class", "box");
      add_location(div1, file23, 89, 4, 2554);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div0, anchor);
      mount_component(timelineeditmenu, div0, null);
      insert_dev(target, t, anchor);
      insert_dev(target, div1, anchor);
      mount_component(timelineviewedit, div1, null);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const timelineeditmenu_changes = {};
      if (dirty & /*setModalTimeline*/
      16)
        timelineeditmenu_changes.setModalTimeline = /*setModalTimeline*/
        ctx2[4];
      if (dirty & /*addTimeline*/
      32)
        timelineeditmenu_changes.addTimeline = /*addTimeline*/
        ctx2[5];
      timelineeditmenu.$set(timelineeditmenu_changes);
      const timelineviewedit_changes = {};
      if (!updating_timelineViews && dirty & /*timelineViews*/
      4) {
        updating_timelineViews = true;
        timelineviewedit_changes.timelineViews = /*timelineViews*/
        ctx2[2];
        add_flush_callback(() => updating_timelineViews = false);
      }
      if (!updating_timelineView && dirty & /*timelineView*/
      8) {
        updating_timelineView = true;
        timelineviewedit_changes.timelineView = /*timelineView*/
        ctx2[3];
        add_flush_callback(() => updating_timelineView = false);
      }
      if (!updating_timelines && dirty & /*timelines*/
      1) {
        updating_timelines = true;
        timelineviewedit_changes.timelines = /*timelines*/
        ctx2[0];
        add_flush_callback(() => updating_timelines = false);
      }
      timelineviewedit.$set(timelineviewedit_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(timelineeditmenu.$$.fragment, local);
      transition_in(timelineviewedit.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(timelineeditmenu.$$.fragment, local);
      transition_out(timelineviewedit.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div0);
      destroy_component(timelineeditmenu);
      if (detaching)
        detach_dev(t);
      if (detaching)
        detach_dev(div1);
      destroy_component(timelineviewedit);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_28.name,
    type: "if",
    source: "(83:3) {#if menu === SidebarMenu.TimelineEdit}",
    ctx
  });
  return block;
}
function create_if_block15(ctx) {
  let button;
  let fa;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: { icon: faAngleDoubleLeft, size: "2x" },
    $$inline: true
  });
  const block = {
    c: function create() {
      button = element("button");
      create_component(fa.$$.fragment);
      attr_dev(button, "class", "borderless-button svelte-ckjq5v");
      attr_dev(button, "title", "Expand sidebar");
      add_location(button, file23, 115, 4, 3129);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      mount_component(fa, button, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler*/
          ctx[14],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block15.name,
    type: "if",
    source: "(115:3) {#if menu !== null}",
    ctx
  });
  return block;
}
function create_each_block_17(ctx) {
  let button;
  let fa;
  let button_title_value;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: { icon: (
      /*icon*/
      ctx[22]
    ), size: "2x" },
    $$inline: true
  });
  function click_handler_1() {
    return (
      /*click_handler_1*/
      ctx[15](
        /*menu*/
        ctx[7]
      )
    );
  }
  const block = {
    c: function create() {
      button = element("button");
      create_component(fa.$$.fragment);
      attr_dev(button, "class", "borderless-button svelte-ckjq5v");
      attr_dev(button, "title", button_title_value = /*title*/
      ctx[23]);
      add_location(button, file23, 120, 4, 3333);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      mount_component(fa, button, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(button, "click", click_handler_1, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_17.name,
    type: "each",
    source: "(120:3) {#each buttons as {icon, menu, title}}",
    ctx
  });
  return block;
}
function create_each_block13(ctx) {
  let button;
  let fa;
  let t;
  let button_title_value;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: { icon: import_faTableColumns.faTableColumns, size: "2x" },
    $$inline: true
  });
  function click_handler_2() {
    return (
      /*click_handler_2*/
      ctx[16](
        /*view*/
        ctx[19]
      )
    );
  }
  const block = {
    c: function create() {
      button = element("button");
      create_component(fa.$$.fragment);
      t = space();
      attr_dev(button, "class", "borderless-button svelte-ckjq5v");
      attr_dev(button, "title", button_title_value = `Set view: ${/*name*/
      ctx[18]}`);
      add_location(button, file23, 125, 4, 3536);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      mount_component(fa, button, null);
      append_dev(button, t);
      current = true;
      if (!mounted) {
        dispose = listen_dev(button, "click", click_handler_2, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (!current || dirty & /*timelineViews*/
      4 && button_title_value !== (button_title_value = `Set view: ${/*name*/
      ctx[18]}`)) {
        attr_dev(button, "title", button_title_value);
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block13.name,
    type: "each",
    source: "(125:3) {#each Object.entries(timelineViews) as [name, view]}",
    ctx
  });
  return block;
}
function create_fragment23(ctx) {
  let nav;
  let t0;
  let div2;
  let div0;
  let t1;
  let t2;
  let t3;
  let div1;
  let button0;
  let fa0;
  let t4;
  let a;
  let button1;
  let fa1;
  let current;
  let mounted;
  let dispose;
  let if_block0 = (
    /*menu*/
    ctx[7] !== null && create_if_block_114(ctx)
  );
  let if_block1 = (
    /*menu*/
    ctx[7] !== null && create_if_block15(ctx)
  );
  let each_value_1 = (
    /*buttons*/
    ctx[9]
  );
  validate_each_argument(each_value_1);
  let each_blocks_1 = [];
  for (let i = 0; i < each_value_1.length; i += 1) {
    each_blocks_1[i] = create_each_block_17(get_each_context_17(ctx, each_value_1, i));
  }
  const out = (i) => transition_out(each_blocks_1[i], 1, 1, () => {
    each_blocks_1[i] = null;
  });
  let each_value = Object.entries(
    /*timelineViews*/
    ctx[2]
  );
  validate_each_argument(each_value);
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block13(get_each_context13(ctx, each_value, i));
  }
  const out_1 = (i) => transition_out(each_blocks[i], 1, 1, () => {
    each_blocks[i] = null;
  });
  fa0 = new fa_default({
    props: { icon: faCog, size: "2x" },
    $$inline: true
  });
  fa1 = new fa_default({
    props: { icon: faGithub, size: "2x" },
    $$inline: true
  });
  const block = {
    c: function create() {
      nav = element("nav");
      if (if_block0)
        if_block0.c();
      t0 = space();
      div2 = element("div");
      div0 = element("div");
      if (if_block1)
        if_block1.c();
      t1 = space();
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        each_blocks_1[i].c();
      }
      t2 = space();
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t3 = space();
      div1 = element("div");
      button0 = element("button");
      create_component(fa0.$$.fragment);
      t4 = space();
      a = element("a");
      button1 = element("button");
      create_component(fa1.$$.fragment);
      attr_dev(div0, "class", "svelte-ckjq5v");
      add_location(div0, file23, 113, 2, 3096);
      attr_dev(button0, "class", "borderless-button svelte-ckjq5v");
      attr_dev(button0, "title", "Settings");
      add_location(button0, file23, 131, 3, 3726);
      attr_dev(button1, "class", "borderless-button svelte-ckjq5v");
      add_location(button1, file23, 135, 4, 3952);
      attr_dev(a, "href", "https://github.com/misabiko/SoshalThingSvelte");
      attr_dev(a, "title", "Github");
      add_location(a, file23, 134, 3, 3876);
      attr_dev(div1, "class", "svelte-ckjq5v");
      add_location(div1, file23, 130, 2, 3717);
      attr_dev(div2, "id", "sidebarButtons");
      attr_dev(div2, "class", "svelte-ckjq5v");
      add_location(div2, file23, 112, 1, 3068);
      attr_dev(nav, "id", "sidebar");
      attr_dev(nav, "class", "svelte-ckjq5v");
      add_location(nav, file23, 79, 0, 2330);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, nav, anchor);
      if (if_block0)
        if_block0.m(nav, null);
      append_dev(nav, t0);
      append_dev(nav, div2);
      append_dev(div2, div0);
      if (if_block1)
        if_block1.m(div0, null);
      append_dev(div0, t1);
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        if (each_blocks_1[i]) {
          each_blocks_1[i].m(div0, null);
        }
      }
      append_dev(div0, t2);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div0, null);
        }
      }
      append_dev(div2, t3);
      append_dev(div2, div1);
      append_dev(div1, button0);
      mount_component(fa0, button0, null);
      append_dev(div1, t4);
      append_dev(div1, a);
      append_dev(a, button1);
      mount_component(fa1, button1, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button0,
          "click",
          /*click_handler_3*/
          ctx[17],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, [dirty]) {
      if (
        /*menu*/
        ctx2[7] !== null
      ) {
        if (if_block0) {
          if_block0.p(ctx2, dirty);
          if (dirty & /*menu*/
          128) {
            transition_in(if_block0, 1);
          }
        } else {
          if_block0 = create_if_block_114(ctx2);
          if_block0.c();
          transition_in(if_block0, 1);
          if_block0.m(nav, t0);
        }
      } else if (if_block0) {
        group_outros();
        transition_out(if_block0, 1, 1, () => {
          if_block0 = null;
        });
        check_outros();
      }
      if (
        /*menu*/
        ctx2[7] !== null
      ) {
        if (if_block1) {
          if_block1.p(ctx2, dirty);
          if (dirty & /*menu*/
          128) {
            transition_in(if_block1, 1);
          }
        } else {
          if_block1 = create_if_block15(ctx2);
          if_block1.c();
          transition_in(if_block1, 1);
          if_block1.m(div0, t1);
        }
      } else if (if_block1) {
        group_outros();
        transition_out(if_block1, 1, 1, () => {
          if_block1 = null;
        });
        check_outros();
      }
      if (dirty & /*buttons, toggleSidebarMenu*/
      768) {
        each_value_1 = /*buttons*/
        ctx2[9];
        validate_each_argument(each_value_1);
        let i;
        for (i = 0; i < each_value_1.length; i += 1) {
          const child_ctx = get_each_context_17(ctx2, each_value_1, i);
          if (each_blocks_1[i]) {
            each_blocks_1[i].p(child_ctx, dirty);
            transition_in(each_blocks_1[i], 1);
          } else {
            each_blocks_1[i] = create_each_block_17(child_ctx);
            each_blocks_1[i].c();
            transition_in(each_blocks_1[i], 1);
            each_blocks_1[i].m(div0, t2);
          }
        }
        group_outros();
        for (i = each_value_1.length; i < each_blocks_1.length; i += 1) {
          out(i);
        }
        check_outros();
      }
      if (dirty & /*Object, timelineViews, timelineView, faTableColumns*/
      12) {
        each_value = Object.entries(
          /*timelineViews*/
          ctx2[2]
        );
        validate_each_argument(each_value);
        let i;
        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context13(ctx2, each_value, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
            transition_in(each_blocks[i], 1);
          } else {
            each_blocks[i] = create_each_block13(child_ctx);
            each_blocks[i].c();
            transition_in(each_blocks[i], 1);
            each_blocks[i].m(div0, null);
          }
        }
        group_outros();
        for (i = each_value.length; i < each_blocks.length; i += 1) {
          out_1(i);
        }
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block0);
      transition_in(if_block1);
      for (let i = 0; i < each_value_1.length; i += 1) {
        transition_in(each_blocks_1[i]);
      }
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      transition_in(fa0.$$.fragment, local);
      transition_in(fa1.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block0);
      transition_out(if_block1);
      each_blocks_1 = each_blocks_1.filter(Boolean);
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        transition_out(each_blocks_1[i]);
      }
      each_blocks = each_blocks.filter(Boolean);
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      transition_out(fa0.$$.fragment, local);
      transition_out(fa1.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(nav);
      if (if_block0)
        if_block0.d();
      if (if_block1)
        if_block1.d();
      destroy_each(each_blocks_1, detaching);
      destroy_each(each_blocks, detaching);
      destroy_component(fa0);
      destroy_component(fa1);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment23.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance23($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("Sidebar", slots, []);
  var SidebarMenu;
  (function(SidebarMenu2) {
    SidebarMenu2[SidebarMenu2["TimelineEdit"] = 0] = "TimelineEdit";
    SidebarMenu2[SidebarMenu2["BatchActions"] = 1] = "BatchActions";
    SidebarMenu2[SidebarMenu2["Undoables"] = 2] = "Undoables";
  })(SidebarMenu || (SidebarMenu = {}));
  let menu = null;
  let { setModalTimeline } = $$props;
  let { addTimeline } = $$props;
  let { timelines: timelines2 } = $$props;
  let { batchActionFilters } = $$props;
  let { timelineViews: timelineViews2 } = $$props;
  let { timelineView: timelineView2 } = $$props;
  function toggleSidebarMenu(newMenu) {
    $$invalidate(7, menu = menu === newMenu ? null : newMenu);
  }
  const buttons = [
    {
      icon: faPlus,
      menu: SidebarMenu.TimelineEdit,
      title: "Add new timeline"
    },
    {
      icon: faBarsProgress,
      menu: Endpoints_default,
      title: "Endpoints"
    },
    {
      icon: faRotateLeft,
      menu: SidebarMenu.Undoables,
      title: "Undoables"
    },
    {
      icon: faSpinner,
      menu: MediaLoader_default,
      title: "Loading medias"
    },
    {
      icon: faB,
      menu: SidebarMenu.BatchActions,
      title: "Batch actions"
    }
  ];
  $$self.$$.on_mount.push(function() {
    if (setModalTimeline === void 0 && !("setModalTimeline" in $$props || $$self.$$.bound[$$self.$$.props["setModalTimeline"]])) {
      console.warn("<Sidebar> was created without expected prop 'setModalTimeline'");
    }
    if (addTimeline === void 0 && !("addTimeline" in $$props || $$self.$$.bound[$$self.$$.props["addTimeline"]])) {
      console.warn("<Sidebar> was created without expected prop 'addTimeline'");
    }
    if (timelines2 === void 0 && !("timelines" in $$props || $$self.$$.bound[$$self.$$.props["timelines"]])) {
      console.warn("<Sidebar> was created without expected prop 'timelines'");
    }
    if (batchActionFilters === void 0 && !("batchActionFilters" in $$props || $$self.$$.bound[$$self.$$.props["batchActionFilters"]])) {
      console.warn("<Sidebar> was created without expected prop 'batchActionFilters'");
    }
    if (timelineViews2 === void 0 && !("timelineViews" in $$props || $$self.$$.bound[$$self.$$.props["timelineViews"]])) {
      console.warn("<Sidebar> was created without expected prop 'timelineViews'");
    }
    if (timelineView2 === void 0 && !("timelineView" in $$props || $$self.$$.bound[$$self.$$.props["timelineView"]])) {
      console.warn("<Sidebar> was created without expected prop 'timelineView'");
    }
  });
  const writable_props = [
    "setModalTimeline",
    "addTimeline",
    "timelines",
    "batchActionFilters",
    "timelineViews",
    "timelineView"
  ];
  Object_18.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<Sidebar> was created with unknown prop '${key}'`);
  });
  function timelineviewedit_timelineViews_binding(value) {
    timelineViews2 = value;
    $$invalidate(2, timelineViews2);
  }
  function timelineviewedit_timelineView_binding(value) {
    timelineView2 = value;
    $$invalidate(3, timelineView2);
  }
  function timelineviewedit_timelines_binding(value) {
    timelines2 = value;
    $$invalidate(0, timelines2);
  }
  function batchactions_filterInstances_binding(value) {
    batchActionFilters = value;
    $$invalidate(1, batchActionFilters);
  }
  const click_handler = () => $$invalidate(7, menu = null);
  const click_handler_1 = (menu2) => toggleSidebarMenu(menu2);
  const click_handler_2 = (view) => $$invalidate(3, timelineView2 = view);
  const click_handler_3 = () => toggleSidebarMenu(SettingsMenu_default);
  $$self.$$set = ($$props2) => {
    if ("setModalTimeline" in $$props2)
      $$invalidate(4, setModalTimeline = $$props2.setModalTimeline);
    if ("addTimeline" in $$props2)
      $$invalidate(5, addTimeline = $$props2.addTimeline);
    if ("timelines" in $$props2)
      $$invalidate(0, timelines2 = $$props2.timelines);
    if ("batchActionFilters" in $$props2)
      $$invalidate(1, batchActionFilters = $$props2.batchActionFilters);
    if ("timelineViews" in $$props2)
      $$invalidate(2, timelineViews2 = $$props2.timelineViews);
    if ("timelineView" in $$props2)
      $$invalidate(3, timelineView2 = $$props2.timelineView);
  };
  $$self.$capture_state = () => ({
    Fa: fa_default,
    faAngleDoubleLeft,
    faB,
    faBarsProgress,
    faCog,
    faPlus,
    faRotateLeft,
    faSpinner,
    faGithub,
    MediaLoader: MediaLoader_default,
    Undoables: Undoables_default,
    Endpoints: Endpoints_default,
    SettingsMenu: SettingsMenu_default,
    TimelineEditMenu: TimelineEditMenu_default,
    BatchActions: BatchActions_default,
    faTableColumns: import_faTableColumns.faTableColumns,
    TimelineViewEdit: TimelineViewEdit_default,
    SidebarMenu,
    menu,
    setModalTimeline,
    addTimeline,
    timelines: timelines2,
    batchActionFilters,
    timelineViews: timelineViews2,
    timelineView: timelineView2,
    toggleSidebarMenu,
    buttons
  });
  $$self.$inject_state = ($$props2) => {
    if ("SidebarMenu" in $$props2)
      $$invalidate(6, SidebarMenu = $$props2.SidebarMenu);
    if ("menu" in $$props2)
      $$invalidate(7, menu = $$props2.menu);
    if ("setModalTimeline" in $$props2)
      $$invalidate(4, setModalTimeline = $$props2.setModalTimeline);
    if ("addTimeline" in $$props2)
      $$invalidate(5, addTimeline = $$props2.addTimeline);
    if ("timelines" in $$props2)
      $$invalidate(0, timelines2 = $$props2.timelines);
    if ("batchActionFilters" in $$props2)
      $$invalidate(1, batchActionFilters = $$props2.batchActionFilters);
    if ("timelineViews" in $$props2)
      $$invalidate(2, timelineViews2 = $$props2.timelineViews);
    if ("timelineView" in $$props2)
      $$invalidate(3, timelineView2 = $$props2.timelineView);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    timelines2,
    batchActionFilters,
    timelineViews2,
    timelineView2,
    setModalTimeline,
    addTimeline,
    SidebarMenu,
    menu,
    toggleSidebarMenu,
    buttons,
    timelineviewedit_timelineViews_binding,
    timelineviewedit_timelineView_binding,
    timelineviewedit_timelines_binding,
    batchactions_filterInstances_binding,
    click_handler,
    click_handler_1,
    click_handler_2,
    click_handler_3
  ];
}
var Sidebar = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance23, create_fragment23, safe_not_equal, {
      setModalTimeline: 4,
      addTimeline: 5,
      timelines: 0,
      batchActionFilters: 1,
      timelineViews: 2,
      timelineView: 3
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Sidebar",
      options,
      id: create_fragment23.name
    });
  }
  get setModalTimeline() {
    throw new Error("<Sidebar>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set setModalTimeline(value) {
    throw new Error("<Sidebar>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get addTimeline() {
    throw new Error("<Sidebar>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set addTimeline(value) {
    throw new Error("<Sidebar>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get timelines() {
    throw new Error("<Sidebar>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelines(value) {
    throw new Error("<Sidebar>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get batchActionFilters() {
    throw new Error("<Sidebar>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set batchActionFilters(value) {
    throw new Error("<Sidebar>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get timelineViews() {
    throw new Error("<Sidebar>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineViews(value) {
    throw new Error("<Sidebar>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get timelineView() {
    throw new Error("<Sidebar>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineView(value) {
    throw new Error("<Sidebar>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var Sidebar_default = Sidebar;

// src/timelines/TimelineHeader.svelte
var file24 = "src/timelines/TimelineHeader.svelte";
function create_if_block_54(ctx) {
  let div;
  let button0;
  let fa0;
  let t0;
  let t1;
  let button1;
  let fa1;
  let current;
  let mounted;
  let dispose;
  fa0 = new fa_default({
    props: { icon: faEyeSlash, size: "large" },
    $$inline: true
  });
  let if_block = (
    /*favviewerMaximized*/
    ctx[1] !== void 0 && create_if_block_63(ctx)
  );
  fa1 = new fa_default({
    props: { icon: faEllipsisV, size: "large" },
    $$inline: true
  });
  const block = {
    c: function create() {
      div = element("div");
      button0 = element("button");
      create_component(fa0.$$.fragment);
      t0 = space();
      if (if_block)
        if_block.c();
      t1 = space();
      button1 = element("button");
      create_component(fa1.$$.fragment);
      attr_dev(button0, "class", "borderless-button svelte-5e6bsw");
      attr_dev(button0, "title", "Toggle SoshalThing");
      add_location(button0, file24, 62, 4, 1647);
      attr_dev(button1, "class", "borderless-button svelte-5e6bsw");
      attr_dev(button1, "title", "Show Sidebar");
      add_location(button1, file24, 73, 4, 2200);
      attr_dev(div, "class", "timelineButtons svelte-5e6bsw");
      add_location(div, file24, 61, 3, 1613);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, button0);
      mount_component(fa0, button0, null);
      append_dev(div, t0);
      if (if_block)
        if_block.m(div, null);
      append_dev(div, t1);
      append_dev(div, button1);
      mount_component(fa1, button1, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen_dev(
            button0,
            "click",
            /*click_handler*/
            ctx[14],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            button1,
            "click",
            /*click_handler_2*/
            ctx[16],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (
        /*favviewerMaximized*/
        ctx2[1] !== void 0
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
          if (dirty & /*favviewerMaximized*/
          2) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block_63(ctx2);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(div, t1);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa0.$$.fragment, local);
      transition_in(if_block);
      transition_in(fa1.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa0.$$.fragment, local);
      transition_out(if_block);
      transition_out(fa1.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      destroy_component(fa0);
      if (if_block)
        if_block.d();
      destroy_component(fa1);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_54.name,
    type: "if",
    source: "(61:2) {#if favviewerButtons}",
    ctx
  });
  return block;
}
function create_if_block_63(ctx) {
  let button;
  let fa;
  let button_title_value;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: {
      icon: (
        /*favviewerMaximized*/
        ctx[1] ? faMinimize : faMaximize
      ),
      size: "large"
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      button = element("button");
      create_component(fa.$$.fragment);
      attr_dev(button, "class", "borderless-button svelte-5e6bsw");
      attr_dev(button, "title", button_title_value = /*favviewerMaximized*/
      ctx[1] ? "Minimize SoshalThing" : "Maximize SoshalThing");
      add_location(button, file24, 66, 5, 1865);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      mount_component(fa, button, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler_1*/
          ctx[15],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      const fa_changes = {};
      if (dirty & /*favviewerMaximized*/
      2)
        fa_changes.icon = /*favviewerMaximized*/
        ctx2[1] ? faMinimize : faMaximize;
      fa.$set(fa_changes);
      if (!current || dirty & /*favviewerMaximized*/
      2 && button_title_value !== (button_title_value = /*favviewerMaximized*/
      ctx2[1] ? "Minimize SoshalThing" : "Maximize SoshalThing")) {
        attr_dev(button, "title", button_title_value);
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_63.name,
    type: "if",
    source: "(66:4) {#if favviewerMaximized !== undefined}",
    ctx
  });
  return block;
}
function create_if_block_45(ctx) {
  let button;
  let fa;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: { icon: faArrowUp, size: "large" },
    $$inline: true
  });
  const block = {
    c: function create() {
      button = element("button");
      create_component(fa.$$.fragment);
      attr_dev(button, "class", "borderless-button svelte-5e6bsw");
      attr_dev(button, "title", "Load Top");
      add_location(button, file24, 84, 3, 2651);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      mount_component(fa, button, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler_4*/
          ctx[18],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_45.name,
    type: "if",
    source: "(84:2) {#if availableRefreshTypes.has(RefreshType.LoadTop)}",
    ctx
  });
  return block;
}
function create_if_block_36(ctx) {
  let button;
  let fa;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: { icon: faArrowDown, size: "large" },
    $$inline: true
  });
  const block = {
    c: function create() {
      button = element("button");
      create_component(fa.$$.fragment);
      attr_dev(button, "class", "borderless-button svelte-5e6bsw");
      attr_dev(button, "title", "Load Bottom");
      add_location(button, file24, 90, 3, 2876);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      mount_component(fa, button, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler_5*/
          ctx[19],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_36.name,
    type: "if",
    source: "(90:2) {#if availableRefreshTypes.has(RefreshType.LoadBottom)}",
    ctx
  });
  return block;
}
function create_if_block_29(ctx) {
  let button;
  let fa;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: { icon: faSyncAlt, size: "large" },
    $$inline: true
  });
  const block = {
    c: function create() {
      button = element("button");
      create_component(fa.$$.fragment);
      attr_dev(button, "class", "borderless-button svelte-5e6bsw");
      attr_dev(button, "title", "Refresh");
      add_location(button, file24, 96, 3, 3106);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      mount_component(fa, button, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler_6*/
          ctx[20],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_29.name,
    type: "if",
    source: "(96:2) {#if availableRefreshTypes.has(RefreshType.Refresh)}",
    ctx
  });
  return block;
}
function create_if_block_115(ctx) {
  let button;
  let fa;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: { icon: faScaleBalanced, size: "large" },
    $$inline: true
  });
  const block = {
    c: function create() {
      button = element("button");
      create_component(fa.$$.fragment);
      attr_dev(button, "class", "borderless-button svelte-5e6bsw");
      attr_dev(button, "title", "Organize Container");
      add_location(button, file24, 107, 3, 3580);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      mount_component(fa, button, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler_7*/
          ctx[21],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: noop,
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_115.name,
    type: "if",
    source: "(107:2) {#if data.container === MasonryContainer}",
    ctx
  });
  return block;
}
function create_if_block16(ctx) {
  let button;
  let fa;
  let button_title_value;
  let current;
  let mounted;
  let dispose;
  fa = new fa_default({
    props: {
      icon: (
        /*fullscreen*/
        ctx[7] ? faColumns : faExpandAlt
      ),
      size: "large"
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      button = element("button");
      create_component(fa.$$.fragment);
      attr_dev(button, "class", "borderless-button svelte-5e6bsw");
      attr_dev(button, "title", button_title_value = /*fullscreen*/
      ctx[7] ? "Disable fullscreen" : "Make timeline fullscreen");
      add_location(button, file24, 113, 3, 3800);
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      mount_component(fa, button, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          function() {
            if (is_function(
              /*toggleFullscreen*/
              ctx[10]
            ))
              ctx[10].apply(this, arguments);
          },
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      const fa_changes = {};
      if (dirty & /*fullscreen*/
      128)
        fa_changes.icon = /*fullscreen*/
        ctx[7] ? faColumns : faExpandAlt;
      fa.$set(fa_changes);
      if (!current || dirty & /*fullscreen*/
      128 && button_title_value !== (button_title_value = /*fullscreen*/
      ctx[7] ? "Disable fullscreen" : "Make timeline fullscreen")) {
        attr_dev(button, "title", button_title_value);
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(fa.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(fa.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(button);
      destroy_component(fa);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block16.name,
    type: "if",
    source: "(113:2) {#if toggleFullscreen}",
    ctx
  });
  return block;
}
function create_fragment24(ctx) {
  let div2;
  let div0;
  let strong;
  let t0_value = (
    /*data*/
    ctx[5].title + /*data*/
    (ctx[5].showArticleCount ? " - " + /*articleCountLabel*/
    ctx[8] : "")
  );
  let t0;
  let t1;
  let t2;
  let div1;
  let button0;
  let fa0;
  let t3;
  let show_if_2 = (
    /*availableRefreshTypes*/
    ctx[9].has(2 /* LoadTop */)
  );
  let t4;
  let show_if_1 = (
    /*availableRefreshTypes*/
    ctx[9].has(3 /* LoadBottom */)
  );
  let t5;
  let show_if = (
    /*availableRefreshTypes*/
    ctx[9].has(1 /* Refresh */)
  );
  let t6;
  let button1;
  let fa1;
  let t7;
  let button2;
  let fa2;
  let t8;
  let t9;
  let current;
  let mounted;
  let dispose;
  let if_block0 = (
    /*favviewerButtons*/
    ctx[6] && create_if_block_54(ctx)
  );
  fa0 = new fa_default({
    props: { icon: faEllipsisV, size: "large" },
    $$inline: true
  });
  let if_block1 = show_if_2 && create_if_block_45(ctx);
  let if_block2 = show_if_1 && create_if_block_36(ctx);
  let if_block3 = show_if && create_if_block_29(ctx);
  fa1 = new fa_default({
    props: { icon: faScroll, size: "large" },
    $$inline: true
  });
  fa2 = new fa_default({
    props: { icon: faRandom, size: "large" },
    $$inline: true
  });
  let if_block4 = (
    /*data*/
    ctx[5].container === MasonryContainer_default && create_if_block_115(ctx)
  );
  let if_block5 = (
    /*toggleFullscreen*/
    ctx[10] && create_if_block16(ctx)
  );
  const block = {
    c: function create() {
      div2 = element("div");
      div0 = element("div");
      strong = element("strong");
      t0 = text(t0_value);
      t1 = space();
      if (if_block0)
        if_block0.c();
      t2 = space();
      div1 = element("div");
      button0 = element("button");
      create_component(fa0.$$.fragment);
      t3 = space();
      if (if_block1)
        if_block1.c();
      t4 = space();
      if (if_block2)
        if_block2.c();
      t5 = space();
      if (if_block3)
        if_block3.c();
      t6 = space();
      button1 = element("button");
      create_component(fa1.$$.fragment);
      t7 = space();
      button2 = element("button");
      create_component(fa2.$$.fragment);
      t8 = space();
      if (if_block4)
        if_block4.c();
      t9 = space();
      if (if_block5)
        if_block5.c();
      attr_dev(strong, "class", "svelte-5e6bsw");
      add_location(strong, file24, 59, 2, 1496);
      attr_dev(div0, "class", "timelineLeftHeader svelte-5e6bsw");
      add_location(div0, file24, 58, 1, 1461);
      attr_dev(button0, "class", "borderless-button svelte-5e6bsw");
      attr_dev(button0, "title", "Expand options");
      add_location(button0, file24, 80, 2, 2436);
      attr_dev(button1, "class", "borderless-button timelineAutoscroll svelte-5e6bsw");
      attr_dev(button1, "title", "Autoscroll");
      add_location(button1, file24, 100, 2, 3266);
      attr_dev(button2, "class", "borderless-button svelte-5e6bsw");
      attr_dev(button2, "title", "Shuffle");
      add_location(button2, file24, 103, 2, 3413);
      attr_dev(div1, "class", "timelineRightHeader timelineButtons svelte-5e6bsw");
      add_location(div1, file24, 79, 1, 2384);
      attr_dev(div2, "class", "timelineHeader svelte-5e6bsw");
      add_location(div2, file24, 57, 0, 1431);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div2, anchor);
      append_dev(div2, div0);
      append_dev(div0, strong);
      append_dev(strong, t0);
      append_dev(div0, t1);
      if (if_block0)
        if_block0.m(div0, null);
      append_dev(div2, t2);
      append_dev(div2, div1);
      append_dev(div1, button0);
      mount_component(fa0, button0, null);
      append_dev(div1, t3);
      if (if_block1)
        if_block1.m(div1, null);
      append_dev(div1, t4);
      if (if_block2)
        if_block2.m(div1, null);
      append_dev(div1, t5);
      if (if_block3)
        if_block3.m(div1, null);
      append_dev(div1, t6);
      append_dev(div1, button1);
      mount_component(fa1, button1, null);
      append_dev(div1, t7);
      append_dev(div1, button2);
      mount_component(fa2, button2, null);
      append_dev(div1, t8);
      if (if_block4)
        if_block4.m(div1, null);
      append_dev(div1, t9);
      if (if_block5)
        if_block5.m(div1, null);
      current = true;
      if (!mounted) {
        dispose = [
          listen_dev(
            button0,
            "click",
            /*click_handler_3*/
            ctx[17],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            button1,
            "click",
            function() {
              if (is_function(
                /*autoscroll*/
                ctx[12]
              ))
                ctx[12].apply(this, arguments);
            },
            false,
            false,
            false,
            false
          ),
          listen_dev(
            button2,
            "click",
            function() {
              if (is_function(
                /*shuffle*/
                ctx[11]
              ))
                ctx[11].apply(this, arguments);
            },
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, [dirty]) {
      ctx = new_ctx;
      if ((!current || dirty & /*data, articleCountLabel*/
      288) && t0_value !== (t0_value = /*data*/
      ctx[5].title + /*data*/
      (ctx[5].showArticleCount ? " - " + /*articleCountLabel*/
      ctx[8] : "")))
        set_data_dev(t0, t0_value);
      if (
        /*favviewerButtons*/
        ctx[6]
      ) {
        if (if_block0) {
          if_block0.p(ctx, dirty);
          if (dirty & /*favviewerButtons*/
          64) {
            transition_in(if_block0, 1);
          }
        } else {
          if_block0 = create_if_block_54(ctx);
          if_block0.c();
          transition_in(if_block0, 1);
          if_block0.m(div0, null);
        }
      } else if (if_block0) {
        group_outros();
        transition_out(if_block0, 1, 1, () => {
          if_block0 = null;
        });
        check_outros();
      }
      if (dirty & /*availableRefreshTypes*/
      512)
        show_if_2 = /*availableRefreshTypes*/
        ctx[9].has(2 /* LoadTop */);
      if (show_if_2) {
        if (if_block1) {
          if_block1.p(ctx, dirty);
          if (dirty & /*availableRefreshTypes*/
          512) {
            transition_in(if_block1, 1);
          }
        } else {
          if_block1 = create_if_block_45(ctx);
          if_block1.c();
          transition_in(if_block1, 1);
          if_block1.m(div1, t4);
        }
      } else if (if_block1) {
        group_outros();
        transition_out(if_block1, 1, 1, () => {
          if_block1 = null;
        });
        check_outros();
      }
      if (dirty & /*availableRefreshTypes*/
      512)
        show_if_1 = /*availableRefreshTypes*/
        ctx[9].has(3 /* LoadBottom */);
      if (show_if_1) {
        if (if_block2) {
          if_block2.p(ctx, dirty);
          if (dirty & /*availableRefreshTypes*/
          512) {
            transition_in(if_block2, 1);
          }
        } else {
          if_block2 = create_if_block_36(ctx);
          if_block2.c();
          transition_in(if_block2, 1);
          if_block2.m(div1, t5);
        }
      } else if (if_block2) {
        group_outros();
        transition_out(if_block2, 1, 1, () => {
          if_block2 = null;
        });
        check_outros();
      }
      if (dirty & /*availableRefreshTypes*/
      512)
        show_if = /*availableRefreshTypes*/
        ctx[9].has(1 /* Refresh */);
      if (show_if) {
        if (if_block3) {
          if_block3.p(ctx, dirty);
          if (dirty & /*availableRefreshTypes*/
          512) {
            transition_in(if_block3, 1);
          }
        } else {
          if_block3 = create_if_block_29(ctx);
          if_block3.c();
          transition_in(if_block3, 1);
          if_block3.m(div1, t6);
        }
      } else if (if_block3) {
        group_outros();
        transition_out(if_block3, 1, 1, () => {
          if_block3 = null;
        });
        check_outros();
      }
      if (
        /*data*/
        ctx[5].container === MasonryContainer_default
      ) {
        if (if_block4) {
          if_block4.p(ctx, dirty);
          if (dirty & /*data*/
          32) {
            transition_in(if_block4, 1);
          }
        } else {
          if_block4 = create_if_block_115(ctx);
          if_block4.c();
          transition_in(if_block4, 1);
          if_block4.m(div1, t9);
        }
      } else if (if_block4) {
        group_outros();
        transition_out(if_block4, 1, 1, () => {
          if_block4 = null;
        });
        check_outros();
      }
      if (
        /*toggleFullscreen*/
        ctx[10]
      ) {
        if (if_block5) {
          if_block5.p(ctx, dirty);
          if (dirty & /*toggleFullscreen*/
          1024) {
            transition_in(if_block5, 1);
          }
        } else {
          if_block5 = create_if_block16(ctx);
          if_block5.c();
          transition_in(if_block5, 1);
          if_block5.m(div1, null);
        }
      } else if (if_block5) {
        group_outros();
        transition_out(if_block5, 1, 1, () => {
          if_block5 = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block0);
      transition_in(fa0.$$.fragment, local);
      transition_in(if_block1);
      transition_in(if_block2);
      transition_in(if_block3);
      transition_in(fa1.$$.fragment, local);
      transition_in(fa2.$$.fragment, local);
      transition_in(if_block4);
      transition_in(if_block5);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block0);
      transition_out(fa0.$$.fragment, local);
      transition_out(if_block1);
      transition_out(if_block2);
      transition_out(if_block3);
      transition_out(fa1.$$.fragment, local);
      transition_out(fa2.$$.fragment, local);
      transition_out(if_block4);
      transition_out(if_block5);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div2);
      if (if_block0)
        if_block0.d();
      destroy_component(fa0);
      if (if_block1)
        if_block1.d();
      if (if_block2)
        if_block2.d();
      if (if_block3)
        if_block3.d();
      destroy_component(fa1);
      destroy_component(fa2);
      if (if_block4)
        if_block4.d();
      if (if_block5)
        if_block5.d();
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment24.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance24($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("TimelineHeader", slots, []);
  let { data } = $$props;
  let { favviewerButtons } = $$props;
  let { favviewerHidden } = $$props;
  let { favviewerMaximized = void 0 } = $$props;
  let { fullscreen: fullscreen2 = void 0 } = $$props;
  let { articleCountLabel } = $$props;
  let { availableRefreshTypes } = $$props;
  let { containerRebalance } = $$props;
  let { showSidebar } = $$props;
  let { showOptions } = $$props;
  let { toggleFullscreen = void 0 } = $$props;
  let { shuffle } = $$props;
  let { autoscroll } = $$props;
  let { refresh } = $$props;
  $$self.$$.on_mount.push(function() {
    if (data === void 0 && !("data" in $$props || $$self.$$.bound[$$self.$$.props["data"]])) {
      console.warn("<TimelineHeader> was created without expected prop 'data'");
    }
    if (favviewerButtons === void 0 && !("favviewerButtons" in $$props || $$self.$$.bound[$$self.$$.props["favviewerButtons"]])) {
      console.warn("<TimelineHeader> was created without expected prop 'favviewerButtons'");
    }
    if (favviewerHidden === void 0 && !("favviewerHidden" in $$props || $$self.$$.bound[$$self.$$.props["favviewerHidden"]])) {
      console.warn("<TimelineHeader> was created without expected prop 'favviewerHidden'");
    }
    if (articleCountLabel === void 0 && !("articleCountLabel" in $$props || $$self.$$.bound[$$self.$$.props["articleCountLabel"]])) {
      console.warn("<TimelineHeader> was created without expected prop 'articleCountLabel'");
    }
    if (availableRefreshTypes === void 0 && !("availableRefreshTypes" in $$props || $$self.$$.bound[$$self.$$.props["availableRefreshTypes"]])) {
      console.warn("<TimelineHeader> was created without expected prop 'availableRefreshTypes'");
    }
    if (containerRebalance === void 0 && !("containerRebalance" in $$props || $$self.$$.bound[$$self.$$.props["containerRebalance"]])) {
      console.warn("<TimelineHeader> was created without expected prop 'containerRebalance'");
    }
    if (showSidebar === void 0 && !("showSidebar" in $$props || $$self.$$.bound[$$self.$$.props["showSidebar"]])) {
      console.warn("<TimelineHeader> was created without expected prop 'showSidebar'");
    }
    if (showOptions === void 0 && !("showOptions" in $$props || $$self.$$.bound[$$self.$$.props["showOptions"]])) {
      console.warn("<TimelineHeader> was created without expected prop 'showOptions'");
    }
    if (shuffle === void 0 && !("shuffle" in $$props || $$self.$$.bound[$$self.$$.props["shuffle"]])) {
      console.warn("<TimelineHeader> was created without expected prop 'shuffle'");
    }
    if (autoscroll === void 0 && !("autoscroll" in $$props || $$self.$$.bound[$$self.$$.props["autoscroll"]])) {
      console.warn("<TimelineHeader> was created without expected prop 'autoscroll'");
    }
    if (refresh === void 0 && !("refresh" in $$props || $$self.$$.bound[$$self.$$.props["refresh"]])) {
      console.warn("<TimelineHeader> was created without expected prop 'refresh'");
    }
  });
  const writable_props = [
    "data",
    "favviewerButtons",
    "favviewerHidden",
    "favviewerMaximized",
    "fullscreen",
    "articleCountLabel",
    "availableRefreshTypes",
    "containerRebalance",
    "showSidebar",
    "showOptions",
    "toggleFullscreen",
    "shuffle",
    "autoscroll",
    "refresh"
  ];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<TimelineHeader> was created with unknown prop '${key}'`);
  });
  const click_handler = () => $$invalidate(0, favviewerHidden = !favviewerHidden);
  const click_handler_1 = () => {
    $$invalidate(1, favviewerMaximized = !favviewerMaximized);
    updateMaximized(favviewerMaximized);
  };
  const click_handler_2 = () => $$invalidate(3, showSidebar = !showSidebar);
  const click_handler_3 = () => $$invalidate(4, showOptions = !showOptions);
  const click_handler_4 = () => refresh(2 /* LoadTop */);
  const click_handler_5 = () => refresh(3 /* LoadBottom */);
  const click_handler_6 = () => refresh(1 /* Refresh */);
  const click_handler_7 = () => $$invalidate(2, containerRebalance = !containerRebalance);
  $$self.$$set = ($$props2) => {
    if ("data" in $$props2)
      $$invalidate(5, data = $$props2.data);
    if ("favviewerButtons" in $$props2)
      $$invalidate(6, favviewerButtons = $$props2.favviewerButtons);
    if ("favviewerHidden" in $$props2)
      $$invalidate(0, favviewerHidden = $$props2.favviewerHidden);
    if ("favviewerMaximized" in $$props2)
      $$invalidate(1, favviewerMaximized = $$props2.favviewerMaximized);
    if ("fullscreen" in $$props2)
      $$invalidate(7, fullscreen2 = $$props2.fullscreen);
    if ("articleCountLabel" in $$props2)
      $$invalidate(8, articleCountLabel = $$props2.articleCountLabel);
    if ("availableRefreshTypes" in $$props2)
      $$invalidate(9, availableRefreshTypes = $$props2.availableRefreshTypes);
    if ("containerRebalance" in $$props2)
      $$invalidate(2, containerRebalance = $$props2.containerRebalance);
    if ("showSidebar" in $$props2)
      $$invalidate(3, showSidebar = $$props2.showSidebar);
    if ("showOptions" in $$props2)
      $$invalidate(4, showOptions = $$props2.showOptions);
    if ("toggleFullscreen" in $$props2)
      $$invalidate(10, toggleFullscreen = $$props2.toggleFullscreen);
    if ("shuffle" in $$props2)
      $$invalidate(11, shuffle = $$props2.shuffle);
    if ("autoscroll" in $$props2)
      $$invalidate(12, autoscroll = $$props2.autoscroll);
    if ("refresh" in $$props2)
      $$invalidate(13, refresh = $$props2.refresh);
  };
  $$self.$capture_state = () => ({
    Fa: fa_default,
    faArrowDown,
    faArrowUp,
    faColumns,
    faEllipsisV,
    faExpandAlt,
    faEyeSlash,
    faMaximize,
    faMinimize,
    faRandom,
    faScaleBalanced,
    faScroll,
    faSyncAlt,
    MasonryContainer: MasonryContainer_default,
    RefreshType,
    updateMaximized,
    data,
    favviewerButtons,
    favviewerHidden,
    favviewerMaximized,
    fullscreen: fullscreen2,
    articleCountLabel,
    availableRefreshTypes,
    containerRebalance,
    showSidebar,
    showOptions,
    toggleFullscreen,
    shuffle,
    autoscroll,
    refresh
  });
  $$self.$inject_state = ($$props2) => {
    if ("data" in $$props2)
      $$invalidate(5, data = $$props2.data);
    if ("favviewerButtons" in $$props2)
      $$invalidate(6, favviewerButtons = $$props2.favviewerButtons);
    if ("favviewerHidden" in $$props2)
      $$invalidate(0, favviewerHidden = $$props2.favviewerHidden);
    if ("favviewerMaximized" in $$props2)
      $$invalidate(1, favviewerMaximized = $$props2.favviewerMaximized);
    if ("fullscreen" in $$props2)
      $$invalidate(7, fullscreen2 = $$props2.fullscreen);
    if ("articleCountLabel" in $$props2)
      $$invalidate(8, articleCountLabel = $$props2.articleCountLabel);
    if ("availableRefreshTypes" in $$props2)
      $$invalidate(9, availableRefreshTypes = $$props2.availableRefreshTypes);
    if ("containerRebalance" in $$props2)
      $$invalidate(2, containerRebalance = $$props2.containerRebalance);
    if ("showSidebar" in $$props2)
      $$invalidate(3, showSidebar = $$props2.showSidebar);
    if ("showOptions" in $$props2)
      $$invalidate(4, showOptions = $$props2.showOptions);
    if ("toggleFullscreen" in $$props2)
      $$invalidate(10, toggleFullscreen = $$props2.toggleFullscreen);
    if ("shuffle" in $$props2)
      $$invalidate(11, shuffle = $$props2.shuffle);
    if ("autoscroll" in $$props2)
      $$invalidate(12, autoscroll = $$props2.autoscroll);
    if ("refresh" in $$props2)
      $$invalidate(13, refresh = $$props2.refresh);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    favviewerHidden,
    favviewerMaximized,
    containerRebalance,
    showSidebar,
    showOptions,
    data,
    favviewerButtons,
    fullscreen2,
    articleCountLabel,
    availableRefreshTypes,
    toggleFullscreen,
    shuffle,
    autoscroll,
    refresh,
    click_handler,
    click_handler_1,
    click_handler_2,
    click_handler_3,
    click_handler_4,
    click_handler_5,
    click_handler_6,
    click_handler_7
  ];
}
var TimelineHeader = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance24, create_fragment24, safe_not_equal, {
      data: 5,
      favviewerButtons: 6,
      favviewerHidden: 0,
      favviewerMaximized: 1,
      fullscreen: 7,
      articleCountLabel: 8,
      availableRefreshTypes: 9,
      containerRebalance: 2,
      showSidebar: 3,
      showOptions: 4,
      toggleFullscreen: 10,
      shuffle: 11,
      autoscroll: 12,
      refresh: 13
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "TimelineHeader",
      options,
      id: create_fragment24.name
    });
  }
  get data() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set data(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get favviewerButtons() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set favviewerButtons(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get favviewerHidden() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set favviewerHidden(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get favviewerMaximized() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set favviewerMaximized(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get fullscreen() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set fullscreen(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get articleCountLabel() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set articleCountLabel(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get availableRefreshTypes() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set availableRefreshTypes(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get containerRebalance() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set containerRebalance(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get showSidebar() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set showSidebar(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get showOptions() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set showOptions(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get toggleFullscreen() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set toggleFullscreen(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get shuffle() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set shuffle(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get autoscroll() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set autoscroll(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get refresh() {
    throw new Error("<TimelineHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set refresh(value) {
    throw new Error("<TimelineHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var TimelineHeader_default = TimelineHeader;

// src/sorting/SortOptions.svelte
var { Object: Object_19 } = globals;
var file25 = "src/sorting/SortOptions.svelte";
function get_each_context14(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[10] = list[i];
  return child_ctx;
}
function get_each_context_18(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[10] = list[i];
  return child_ctx;
}
function get_each_context_23(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[15] = list[i];
  return child_ctx;
}
function get_each_context_33(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[10] = list[i];
  return child_ctx;
}
function get_each_context_42(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[15] = list[i];
  return child_ctx;
}
function create_each_block_42(ctx) {
  let a;
  let t_value = `${methodName(
    /*method*/
    ctx[10]
  )} - ${directionLabel(
    /*method*/
    ctx[10],
    /*reversed*/
    ctx[15]
  )}`;
  let t;
  let mounted;
  let dispose;
  function click_handler() {
    return (
      /*click_handler*/
      ctx[4](
        /*method*/
        ctx[10],
        /*reversed*/
        ctx[15]
      )
    );
  }
  const block = {
    c: function create() {
      a = element("a");
      t = text(t_value);
      attr_dev(a, "class", "dropdown-item");
      add_location(a, file25, 37, 6, 1338);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a, anchor);
      append_dev(a, t);
      if (!mounted) {
        dispose = listen_dev(a, "click", click_handler, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_42.name,
    type: "each",
    source: "(36:5) {#each [false, true] as reversed}",
    ctx
  });
  return block;
}
function create_each_block_33(ctx) {
  let each_1_anchor;
  let each_value_4 = [false, true];
  validate_each_argument(each_value_4);
  let each_blocks = [];
  for (let i = 0; i < 2; i += 1) {
    each_blocks[i] = create_each_block_42(get_each_context_42(ctx, each_value_4, i));
  }
  const block = {
    c: function create() {
      for (let i = 0; i < 2; i += 1) {
        each_blocks[i].c();
      }
      each_1_anchor = empty();
    },
    m: function mount(target, anchor) {
      for (let i = 0; i < 2; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, each_1_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*sortInfo, genericSortMethods, methodName, directionLabel*/
      1) {
        each_value_4 = [false, true];
        validate_each_argument(each_value_4);
        let i;
        for (i = 0; i < 2; i += 1) {
          const child_ctx = get_each_context_42(ctx2, each_value_4, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block_42(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
          }
        }
        for (; i < 2; i += 1) {
          each_blocks[i].d(1);
        }
      }
    },
    d: function destroy(detaching) {
      destroy_each(each_blocks, detaching);
      if (detaching)
        detach_dev(each_1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_33.name,
    type: "each",
    source: "(35:4) {#each genericSortMethods as method}",
    ctx
  });
  return block;
}
function create_each_block_23(ctx) {
  let a;
  let t0_value = `${/*method*/
  ctx[10][2].name} - ${/*method*/
  ctx[10][2].directionLabel(
    /*reversed*/
    ctx[15]
  )}`;
  let t0;
  let t1;
  let mounted;
  let dispose;
  function click_handler_1() {
    return (
      /*click_handler_1*/
      ctx[5](
        /*method*/
        ctx[10],
        /*reversed*/
        ctx[15]
      )
    );
  }
  const block = {
    c: function create() {
      a = element("a");
      t0 = text(t0_value);
      t1 = space();
      attr_dev(a, "class", "dropdown-item");
      add_location(a, file25, 45, 6, 1715);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a, anchor);
      append_dev(a, t0);
      append_dev(a, t1);
      if (!mounted) {
        dispose = listen_dev(a, "click", click_handler_1, false, false, false, false);
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_23.name,
    type: "each",
    source: "(44:5) {#each [false, true] as reversed}",
    ctx
  });
  return block;
}
function create_each_block_18(ctx) {
  let each_1_anchor;
  let each_value_2 = [false, true];
  validate_each_argument(each_value_2);
  let each_blocks = [];
  for (let i = 0; i < 2; i += 1) {
    each_blocks[i] = create_each_block_23(get_each_context_23(ctx, each_value_2, i));
  }
  const block = {
    c: function create() {
      for (let i = 0; i < 2; i += 1) {
        each_blocks[i].c();
      }
      each_1_anchor = empty();
    },
    m: function mount(target, anchor) {
      for (let i = 0; i < 2; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, each_1_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*sortInfo, SortMethod, serviceSortMethods*/
      9) {
        each_value_2 = [false, true];
        validate_each_argument(each_value_2);
        let i;
        for (i = 0; i < 2; i += 1) {
          const child_ctx = get_each_context_23(ctx2, each_value_2, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block_23(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
          }
        }
        for (; i < 2; i += 1) {
          each_blocks[i].d(1);
        }
      }
    },
    d: function destroy(detaching) {
      destroy_each(each_blocks, detaching);
      if (detaching)
        detach_dev(each_1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block_18.name,
    type: "each",
    source: "(43:4) {#each serviceSortMethods as method}",
    ctx
  });
  return block;
}
function create_default_slot_12(ctx) {
  let t0;
  let t1;
  let a;
  let mounted;
  let dispose;
  let each_value_3 = genericSortMethods;
  validate_each_argument(each_value_3);
  let each_blocks_1 = [];
  for (let i = 0; i < each_value_3.length; i += 1) {
    each_blocks_1[i] = create_each_block_33(get_each_context_33(ctx, each_value_3, i));
  }
  let each_value_1 = (
    /*serviceSortMethods*/
    ctx[3]
  );
  validate_each_argument(each_value_1);
  let each_blocks = [];
  for (let i = 0; i < each_value_1.length; i += 1) {
    each_blocks[i] = create_each_block_18(get_each_context_18(ctx, each_value_1, i));
  }
  const block = {
    c: function create() {
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        each_blocks_1[i].c();
      }
      t0 = space();
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t1 = space();
      a = element("a");
      a.textContent = "Unsorted";
      attr_dev(a, "class", "dropdown-item");
      add_location(a, file25, 58, 4, 2107);
    },
    m: function mount(target, anchor) {
      for (let i = 0; i < each_blocks_1.length; i += 1) {
        if (each_blocks_1[i]) {
          each_blocks_1[i].m(target, anchor);
        }
      }
      insert_dev(target, t0, anchor);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, t1, anchor);
      insert_dev(target, a, anchor);
      if (!mounted) {
        dispose = listen_dev(
          a,
          "click",
          /*click_handler_2*/
          ctx[6],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*sortInfo, genericSortMethods, methodName, directionLabel*/
      1) {
        each_value_3 = genericSortMethods;
        validate_each_argument(each_value_3);
        let i;
        for (i = 0; i < each_value_3.length; i += 1) {
          const child_ctx = get_each_context_33(ctx2, each_value_3, i);
          if (each_blocks_1[i]) {
            each_blocks_1[i].p(child_ctx, dirty);
          } else {
            each_blocks_1[i] = create_each_block_33(child_ctx);
            each_blocks_1[i].c();
            each_blocks_1[i].m(t0.parentNode, t0);
          }
        }
        for (; i < each_blocks_1.length; i += 1) {
          each_blocks_1[i].d(1);
        }
        each_blocks_1.length = each_value_3.length;
      }
      if (dirty & /*sortInfo, SortMethod, serviceSortMethods*/
      9) {
        each_value_1 = /*serviceSortMethods*/
        ctx2[3];
        validate_each_argument(each_value_1);
        let i;
        for (i = 0; i < each_value_1.length; i += 1) {
          const child_ctx = get_each_context_18(ctx2, each_value_1, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block_18(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(t1.parentNode, t1);
          }
        }
        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }
        each_blocks.length = each_value_1.length;
      }
    },
    d: function destroy(detaching) {
      destroy_each(each_blocks_1, detaching);
      if (detaching)
        detach_dev(t0);
      destroy_each(each_blocks, detaching);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(a);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_default_slot_12.name,
    type: "slot",
    source: "(34:3) <Dropdown labelText={currentMethodName}>",
    ctx
  });
  return block;
}
function create_else_block12(ctx) {
  let t_value = (
    /*sortInfo*/
    ctx[0].reversed ? "Reversed" : "Normal"
  );
  let t;
  const block = {
    c: function create() {
      t = text(t_value);
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*sortInfo*/
      1 && t_value !== (t_value = /*sortInfo*/
      ctx2[0].reversed ? "Reversed" : "Normal"))
        set_data_dev(t, t_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block12.name,
    type: "else",
    source: "(68:4) {:else}",
    ctx
  });
  return block;
}
function create_if_block_116(ctx) {
  let t_value = directionLabel(
    /*sortInfo*/
    ctx[0].method,
    /*sortInfo*/
    ctx[0].reversed
  ) + "";
  let t;
  const block = {
    c: function create() {
      t = text(t_value);
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*sortInfo*/
      1 && t_value !== (t_value = directionLabel(
        /*sortInfo*/
        ctx2[0].method,
        /*sortInfo*/
        ctx2[0].reversed
      ) + ""))
        set_data_dev(t, t_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_116.name,
    type: "if",
    source: "(66:4) {#if sortInfo.method !== undefined}",
    ctx
  });
  return block;
}
function create_if_block17(ctx) {
  let div;
  let dropdown;
  let current;
  dropdown = new Dropdown_default({
    props: {
      labelText: "Sort once",
      $$slots: { default: [create_default_slot5] },
      $$scope: { ctx }
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      div = element("div");
      create_component(dropdown.$$.fragment);
      attr_dev(div, "class", "control");
      add_location(div, file25, 73, 3, 2564);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      mount_component(dropdown, div, null);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const dropdown_changes = {};
      if (dirty & /*$$scope, sortOnce*/
      4194306) {
        dropdown_changes.$$scope = { dirty, ctx: ctx2 };
      }
      dropdown.$set(dropdown_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(dropdown.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(dropdown.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      destroy_component(dropdown);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block17.name,
    type: "if",
    source: "(73:2) {#if sortInfo.method === undefined}",
    ctx
  });
  return block;
}
function create_each_block14(ctx) {
  let a0;
  let t0_value = `${methodName(
    /*method*/
    ctx[10]
  )} - ${directionLabel(
    /*method*/
    ctx[10],
    false
  )}`;
  let t0;
  let t1;
  let a1;
  let t2_value = `${methodName(
    /*method*/
    ctx[10]
  )} - ${directionLabel(
    /*method*/
    ctx[10],
    true
  )}`;
  let t2;
  let t3;
  let mounted;
  let dispose;
  function click_handler_4() {
    return (
      /*click_handler_4*/
      ctx[8](
        /*method*/
        ctx[10]
      )
    );
  }
  function click_handler_5() {
    return (
      /*click_handler_5*/
      ctx[9](
        /*method*/
        ctx[10]
      )
    );
  }
  const block = {
    c: function create() {
      a0 = element("a");
      t0 = text(t0_value);
      t1 = space();
      a1 = element("a");
      t2 = text(t2_value);
      t3 = space();
      attr_dev(a0, "class", "dropdown-item");
      add_location(a0, file25, 77, 6, 2723);
      attr_dev(a1, "class", "dropdown-item");
      add_location(a1, file25, 81, 6, 2929);
    },
    m: function mount(target, anchor) {
      insert_dev(target, a0, anchor);
      append_dev(a0, t0);
      insert_dev(target, t1, anchor);
      insert_dev(target, a1, anchor);
      append_dev(a1, t2);
      append_dev(a1, t3);
      if (!mounted) {
        dispose = [
          listen_dev(a0, "click", click_handler_4, false, false, false, false),
          listen_dev(a1, "click", click_handler_5, false, false, false, false)
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(a0);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(a1);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block14.name,
    type: "each",
    source: "(76:5) {#each genericSortMethods as method}",
    ctx
  });
  return block;
}
function create_default_slot5(ctx) {
  let each_1_anchor;
  let each_value = genericSortMethods;
  validate_each_argument(each_value);
  let each_blocks = [];
  for (let i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block14(get_each_context14(ctx, each_value, i));
  }
  const block = {
    c: function create() {
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      each_1_anchor = empty();
    },
    m: function mount(target, anchor) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, each_1_anchor, anchor);
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*sortOnce, genericSortMethods, methodName, directionLabel*/
      2) {
        each_value = genericSortMethods;
        validate_each_argument(each_value);
        let i;
        for (i = 0; i < each_value.length; i += 1) {
          const child_ctx = get_each_context14(ctx2, each_value, i);
          if (each_blocks[i]) {
            each_blocks[i].p(child_ctx, dirty);
          } else {
            each_blocks[i] = create_each_block14(child_ctx);
            each_blocks[i].c();
            each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
          }
        }
        for (; i < each_blocks.length; i += 1) {
          each_blocks[i].d(1);
        }
        each_blocks.length = each_value.length;
      }
    },
    d: function destroy(detaching) {
      destroy_each(each_blocks, detaching);
      if (detaching)
        detach_dev(each_1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_default_slot5.name,
    type: "slot",
    source: "(75:4) <Dropdown labelText='Sort once'>",
    ctx
  });
  return block;
}
function create_fragment25(ctx) {
  let div4;
  let div0;
  let label;
  let t1;
  let div3;
  let div1;
  let dropdown;
  let t2;
  let div2;
  let button;
  let t3;
  let current;
  let mounted;
  let dispose;
  dropdown = new Dropdown_default({
    props: {
      labelText: (
        /*currentMethodName*/
        ctx[2]
      ),
      $$slots: { default: [create_default_slot_12] },
      $$scope: { ctx }
    },
    $$inline: true
  });
  function select_block_type(ctx2, dirty) {
    if (
      /*sortInfo*/
      ctx2[0].method !== void 0
    )
      return create_if_block_116;
    return create_else_block12;
  }
  let current_block_type = select_block_type(ctx, -1);
  let if_block0 = current_block_type(ctx);
  let if_block1 = (
    /*sortInfo*/
    ctx[0].method === void 0 && create_if_block17(ctx)
  );
  const block = {
    c: function create() {
      div4 = element("div");
      div0 = element("div");
      label = element("label");
      label.textContent = "Sort Method";
      t1 = space();
      div3 = element("div");
      div1 = element("div");
      create_component(dropdown.$$.fragment);
      t2 = space();
      div2 = element("div");
      button = element("button");
      if_block0.c();
      t3 = space();
      if (if_block1)
        if_block1.c();
      attr_dev(label, "class", "label");
      add_location(label, file25, 27, 2, 1050);
      attr_dev(div0, "class", "field-label is-normal");
      add_location(div0, file25, 25, 1, 953);
      attr_dev(div1, "class", "control");
      add_location(div1, file25, 32, 2, 1134);
      attr_dev(button, "class", "button");
      add_location(button, file25, 64, 3, 2252);
      attr_dev(div2, "class", "control");
      add_location(div2, file25, 63, 2, 2227);
      attr_dev(div3, "class", "field-body");
      add_location(div3, file25, 31, 1, 1107);
      attr_dev(div4, "class", "block field has-addons");
      add_location(div4, file25, 24, 0, 915);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div4, anchor);
      append_dev(div4, div0);
      append_dev(div0, label);
      append_dev(div4, t1);
      append_dev(div4, div3);
      append_dev(div3, div1);
      mount_component(dropdown, div1, null);
      append_dev(div3, t2);
      append_dev(div3, div2);
      append_dev(div2, button);
      if_block0.m(button, null);
      append_dev(div3, t3);
      if (if_block1)
        if_block1.m(div3, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler_3*/
          ctx[7],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, [dirty]) {
      const dropdown_changes = {};
      if (dirty & /*currentMethodName*/
      4)
        dropdown_changes.labelText = /*currentMethodName*/
        ctx2[2];
      if (dirty & /*$$scope, sortInfo*/
      4194305) {
        dropdown_changes.$$scope = { dirty, ctx: ctx2 };
      }
      dropdown.$set(dropdown_changes);
      if (current_block_type === (current_block_type = select_block_type(ctx2, dirty)) && if_block0) {
        if_block0.p(ctx2, dirty);
      } else {
        if_block0.d(1);
        if_block0 = current_block_type(ctx2);
        if (if_block0) {
          if_block0.c();
          if_block0.m(button, null);
        }
      }
      if (
        /*sortInfo*/
        ctx2[0].method === void 0
      ) {
        if (if_block1) {
          if_block1.p(ctx2, dirty);
          if (dirty & /*sortInfo*/
          1) {
            transition_in(if_block1, 1);
          }
        } else {
          if_block1 = create_if_block17(ctx2);
          if_block1.c();
          transition_in(if_block1, 1);
          if_block1.m(div3, null);
        }
      } else if (if_block1) {
        group_outros();
        transition_out(if_block1, 1, 1, () => {
          if_block1 = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(dropdown.$$.fragment, local);
      transition_in(if_block1);
      current = true;
    },
    o: function outro(local) {
      transition_out(dropdown.$$.fragment, local);
      transition_out(if_block1);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div4);
      destroy_component(dropdown);
      if_block0.d();
      if (if_block1)
        if_block1.d();
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment25.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance25($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("SortOptions", slots, []);
  let { sortInfo } = $$props;
  let { sortOnce } = $$props;
  const serviceSortMethods = Object.values(getServices()).flatMap((s) => Object.entries(s.sortMethods).map((m) => [s.name, ...m]));
  let currentMethodName;
  $$self.$$.on_mount.push(function() {
    if (sortInfo === void 0 && !("sortInfo" in $$props || $$self.$$.bound[$$self.$$.props["sortInfo"]])) {
      console.warn("<SortOptions> was created without expected prop 'sortInfo'");
    }
    if (sortOnce === void 0 && !("sortOnce" in $$props || $$self.$$.bound[$$self.$$.props["sortOnce"]])) {
      console.warn("<SortOptions> was created without expected prop 'sortOnce'");
    }
  });
  const writable_props = ["sortInfo", "sortOnce"];
  Object_19.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<SortOptions> was created with unknown prop '${key}'`);
  });
  const click_handler = (method, reversed) => {
    $$invalidate(0, sortInfo.method = method, sortInfo);
    $$invalidate(0, sortInfo.customMethod = null, sortInfo);
    $$invalidate(0, sortInfo.reversed = reversed, sortInfo);
  };
  const click_handler_1 = (method, reversed) => {
    $$invalidate(0, sortInfo.method = 4 /* Custom */, sortInfo);
    $$invalidate(0, sortInfo.customMethod = { method: method[1], service: method[0] }, sortInfo);
    $$invalidate(0, sortInfo.reversed = reversed, sortInfo);
  };
  const click_handler_2 = () => $$invalidate(0, sortInfo.method = void 0, sortInfo);
  const click_handler_3 = () => $$invalidate(0, sortInfo.reversed = !sortInfo.reversed, sortInfo);
  const click_handler_4 = (method) => sortOnce(method, false);
  const click_handler_5 = (method) => sortOnce(method, true);
  $$self.$$set = ($$props2) => {
    if ("sortInfo" in $$props2)
      $$invalidate(0, sortInfo = $$props2.sortInfo);
    if ("sortOnce" in $$props2)
      $$invalidate(1, sortOnce = $$props2.sortOnce);
  };
  $$self.$capture_state = () => ({
    methodName,
    SortMethod,
    Dropdown: Dropdown_default,
    directionLabel,
    genericSortMethods,
    getServices,
    sortInfo,
    sortOnce,
    serviceSortMethods,
    currentMethodName
  });
  $$self.$inject_state = ($$props2) => {
    if ("sortInfo" in $$props2)
      $$invalidate(0, sortInfo = $$props2.sortInfo);
    if ("sortOnce" in $$props2)
      $$invalidate(1, sortOnce = $$props2.sortOnce);
    if ("currentMethodName" in $$props2)
      $$invalidate(2, currentMethodName = $$props2.currentMethodName);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*sortInfo*/
    1) {
      $: {
        switch (sortInfo.method) {
          case null:
          case void 0:
            $$invalidate(2, currentMethodName = "Unsorted");
            break;
          case 4 /* Custom */:
            $$invalidate(2, currentMethodName = `${sortInfo.customMethod.service} - ${getServices()[sortInfo.customMethod.service].sortMethods[sortInfo.customMethod.method].name}`);
            break;
          default:
            $$invalidate(2, currentMethodName = methodName(sortInfo.method));
        }
      }
    }
  };
  return [
    sortInfo,
    sortOnce,
    currentMethodName,
    serviceSortMethods,
    click_handler,
    click_handler_1,
    click_handler_2,
    click_handler_3,
    click_handler_4,
    click_handler_5
  ];
}
var SortOptions = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance25, create_fragment25, safe_not_equal, { sortInfo: 0, sortOnce: 1 });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "SortOptions",
      options,
      id: create_fragment25.name
    });
  }
  get sortInfo() {
    throw new Error("<SortOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set sortInfo(value) {
    throw new Error("<SortOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get sortOnce() {
    throw new Error("<SortOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set sortOnce(value) {
    throw new Error("<SortOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var SortOptions_default = SortOptions;

// src/timelines/TimelineOptions.svelte
var { console: console_13 } = globals;
var file26 = "src/timelines/TimelineOptions.svelte";
function get_each_context15(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[36] = list[i];
  return child_ctx;
}
function create_if_block_55(ctx) {
  let label;
  let t0;
  let input;
  let input_checked_value;
  let t1;
  let mounted;
  let dispose;
  let if_block = (
    /*fullscreen*/
    ctx[1].container && create_if_block_64(ctx)
  );
  const block = {
    c: function create() {
      label = element("label");
      t0 = text("Fullscreen Container\n				");
      input = element("input");
      t1 = space();
      if (if_block)
        if_block.c();
      attr_dev(input, "type", "checkbox");
      input.checked = input_checked_value = !!/*fullscreen*/
      ctx[1].container;
      add_location(input, file26, 76, 4, 2310);
      attr_dev(label, "class", "field");
      add_location(label, file26, 74, 3, 2259);
    },
    m: function mount(target, anchor) {
      insert_dev(target, label, anchor);
      append_dev(label, t0);
      append_dev(label, input);
      append_dev(label, t1);
      if (if_block)
        if_block.m(label, null);
      if (!mounted) {
        dispose = listen_dev(
          input,
          "input",
          /*input_handler*/
          ctx[10],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*fullscreen*/
      2 && input_checked_value !== (input_checked_value = !!/*fullscreen*/
      ctx2[1].container)) {
        prop_dev(input, "checked", input_checked_value);
      }
      if (
        /*fullscreen*/
        ctx2[1].container
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
        } else {
          if_block = create_if_block_64(ctx2);
          if_block.c();
          if_block.m(label, null);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(label);
      if (if_block)
        if_block.d();
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_55.name,
    type: "if",
    source: "(74:2) {#if fullscreen !== undefined}",
    ctx
  });
  return block;
}
function create_if_block_64(ctx) {
  let select;
  let option0;
  let t0;
  let option1;
  let t1;
  let option2;
  let t2;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      select = element("select");
      option0 = element("option");
      t0 = text("Column");
      option1 = element("option");
      t1 = text("Row");
      option2 = element("option");
      t2 = text("Masonry");
      option0.__value = ColumnContainer_default;
      option0.value = option0.__value;
      add_location(option0, file26, 82, 6, 2581);
      option1.__value = RowContainer_default;
      option1.value = option1.__value;
      add_location(option1, file26, 83, 6, 2635);
      option2.__value = MasonryContainer_default;
      option2.value = option2.__value;
      add_location(option2, file26, 84, 6, 2683);
      if (
        /*fullscreen*/
        ctx[1].container === void 0
      )
        add_render_callback(() => (
          /*select_change_handler*/
          ctx[11].call(select)
        ));
      add_location(select, file26, 78, 5, 2461);
    },
    m: function mount(target, anchor) {
      insert_dev(target, select, anchor);
      append_dev(select, option0);
      append_dev(option0, t0);
      append_dev(select, option1);
      append_dev(option1, t1);
      append_dev(select, option2);
      append_dev(option2, t2);
      select_option(
        select,
        /*fullscreen*/
        ctx[1].container,
        true
      );
      if (!mounted) {
        dispose = [
          listen_dev(
            select,
            "change",
            /*select_change_handler*/
            ctx[11]
          ),
          listen_dev(
            select,
            "input",
            /*input_handler_1*/
            ctx[12],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*fullscreen*/
      2) {
        select_option(
          select,
          /*fullscreen*/
          ctx2[1].container
        );
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(select);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_64.name,
    type: "if",
    source: "(78:4) {#if fullscreen.container}",
    ctx
  });
  return block;
}
function create_if_block_210(ctx) {
  let label0;
  let t0_value = `${/*fullscreen*/
  ctx[1]?.columnCount !== null ? "Timeline " : ""}Column Count`;
  let t0;
  let t1;
  let input0;
  let input0_min_value;
  let t2;
  let button0;
  let t4;
  let button1;
  let t6;
  let t7;
  let label1;
  let t8;
  let input1;
  let mounted;
  let dispose;
  let if_block = (
    /*fullscreen*/
    ctx[1] !== void 0 && create_if_block_37(ctx)
  );
  const block = {
    c: function create() {
      label0 = element("label");
      t0 = text(t0_value);
      t1 = space();
      input0 = element("input");
      t2 = space();
      button0 = element("button");
      button0.textContent = "+";
      t4 = space();
      button1 = element("button");
      button1.textContent = "-";
      t6 = space();
      if (if_block)
        if_block.c();
      t7 = space();
      label1 = element("label");
      t8 = text("Right to left\n				");
      input1 = element("input");
      attr_dev(input0, "class", "input");
      attr_dev(input0, "type", "number");
      attr_dev(input0, "min", input0_min_value = 1);
      add_location(input0, file26, 92, 4, 2952);
      add_location(button0, file26, 93, 4, 3031);
      add_location(button1, file26, 96, 4, 3101);
      attr_dev(label0, "class", "field");
      add_location(label0, file26, 90, 3, 2851);
      attr_dev(input1, "type", "checkbox");
      add_location(input1, file26, 124, 4, 4084);
      attr_dev(label1, "class", "field");
      add_location(label1, file26, 122, 3, 4040);
    },
    m: function mount(target, anchor) {
      insert_dev(target, label0, anchor);
      append_dev(label0, t0);
      append_dev(label0, t1);
      append_dev(label0, input0);
      set_input_value(
        input0,
        /*data*/
        ctx[0].columnCount
      );
      append_dev(label0, t2);
      append_dev(label0, button0);
      append_dev(label0, t4);
      append_dev(label0, button1);
      insert_dev(target, t6, anchor);
      if (if_block)
        if_block.m(target, anchor);
      insert_dev(target, t7, anchor);
      insert_dev(target, label1, anchor);
      append_dev(label1, t8);
      append_dev(label1, input1);
      input1.checked = /*data*/
      ctx[0].rtl;
      if (!mounted) {
        dispose = [
          listen_dev(
            input0,
            "input",
            /*input0_input_handler*/
            ctx[13]
          ),
          listen_dev(
            button0,
            "click",
            /*click_handler*/
            ctx[14],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            button1,
            "click",
            /*click_handler_1*/
            ctx[15],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            input1,
            "change",
            /*input1_change_handler*/
            ctx[21]
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*fullscreen*/
      2 && t0_value !== (t0_value = `${/*fullscreen*/
      ctx2[1]?.columnCount !== null ? "Timeline " : ""}Column Count`))
        set_data_dev(t0, t0_value);
      if (dirty[0] & /*data*/
      1 && to_number(input0.value) !== /*data*/
      ctx2[0].columnCount) {
        set_input_value(
          input0,
          /*data*/
          ctx2[0].columnCount
        );
      }
      if (
        /*fullscreen*/
        ctx2[1] !== void 0
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
        } else {
          if_block = create_if_block_37(ctx2);
          if_block.c();
          if_block.m(t7.parentNode, t7);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
      if (dirty[0] & /*data*/
      1) {
        input1.checked = /*data*/
        ctx2[0].rtl;
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(label0);
      if (detaching)
        detach_dev(t6);
      if (if_block)
        if_block.d(detaching);
      if (detaching)
        detach_dev(t7);
      if (detaching)
        detach_dev(label1);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_210.name,
    type: "if",
    source: "(90:2) {#if (fullscreen?.container ?? data.container) !== ColumnContainer}",
    ctx
  });
  return block;
}
function create_if_block_37(ctx) {
  let label;
  let t0;
  let input;
  let input_checked_value;
  let t1;
  let mounted;
  let dispose;
  let if_block = (
    /*fullscreen*/
    ctx[1].columnCount !== null && create_if_block_46(ctx)
  );
  const block = {
    c: function create() {
      label = element("label");
      t0 = text("Fullscreen Column Count\n					");
      input = element("input");
      t1 = space();
      if (if_block)
        if_block.c();
      attr_dev(input, "type", "checkbox");
      input.checked = input_checked_value = /*fullscreen*/
      ctx[1].columnCount !== null;
      add_location(input, file26, 103, 5, 3301);
      attr_dev(label, "class", "field");
      add_location(label, file26, 101, 4, 3245);
    },
    m: function mount(target, anchor) {
      insert_dev(target, label, anchor);
      append_dev(label, t0);
      append_dev(label, input);
      append_dev(label, t1);
      if (if_block)
        if_block.m(label, null);
      if (!mounted) {
        dispose = listen_dev(
          input,
          "input",
          /*input_handler_2*/
          ctx[16],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*fullscreen*/
      2 && input_checked_value !== (input_checked_value = /*fullscreen*/
      ctx2[1].columnCount !== null)) {
        prop_dev(input, "checked", input_checked_value);
      }
      if (
        /*fullscreen*/
        ctx2[1].columnCount !== null
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
        } else {
          if_block = create_if_block_46(ctx2);
          if_block.c();
          if_block.m(label, null);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(label);
      if (if_block)
        if_block.d();
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_37.name,
    type: "if",
    source: "(101:3) {#if fullscreen !== undefined}",
    ctx
  });
  return block;
}
function create_if_block_46(ctx) {
  let input;
  let input_min_value;
  let input_value_value;
  let t0;
  let button0;
  let t2;
  let button1;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      input = element("input");
      t0 = space();
      button0 = element("button");
      button0.textContent = "+";
      t2 = space();
      button1 = element("button");
      button1.textContent = "-";
      attr_dev(input, "class", "input");
      attr_dev(input, "type", "number");
      attr_dev(input, "min", input_min_value = 1);
      input.value = input_value_value = /*fullscreen*/
      ctx[1].columnCount;
      add_location(input, file26, 105, 6, 3476);
      add_location(button0, file26, 113, 6, 3736);
      add_location(button1, file26, 116, 6, 3857);
    },
    m: function mount(target, anchor) {
      insert_dev(target, input, anchor);
      insert_dev(target, t0, anchor);
      insert_dev(target, button0, anchor);
      insert_dev(target, t2, anchor);
      insert_dev(target, button1, anchor);
      if (!mounted) {
        dispose = [
          listen_dev(
            input,
            "change",
            /*change_handler*/
            ctx[17],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            input,
            "change",
            /*change_handler_1*/
            ctx[18],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            button0,
            "click",
            /*click_handler_2*/
            ctx[19],
            false,
            false,
            false,
            false
          ),
          listen_dev(
            button1,
            "click",
            /*click_handler_3*/
            ctx[20],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*fullscreen*/
      2 && input_value_value !== (input_value_value = /*fullscreen*/
      ctx2[1].columnCount) && input.value !== input_value_value) {
        prop_dev(input, "value", input_value_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(input);
      if (detaching)
        detach_dev(t0);
      if (detaching)
        detach_dev(button0);
      if (detaching)
        detach_dev(t2);
      if (detaching)
        detach_dev(button1);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_46.name,
    type: "if",
    source: "(105:5) {#if fullscreen.columnCount !== null}",
    ctx
  });
  return block;
}
function create_if_block_117(ctx) {
  let label;
  let t;
  let input;
  let input_min_value;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      label = element("label");
      t = text("Timeline Width\n				");
      input = element("input");
      attr_dev(input, "class", "input");
      attr_dev(input, "type", "number");
      attr_dev(input, "min", input_min_value = 1);
      add_location(input, file26, 130, 4, 4234);
      attr_dev(label, "class", "field");
      add_location(label, file26, 128, 3, 4189);
    },
    m: function mount(target, anchor) {
      insert_dev(target, label, anchor);
      append_dev(label, t);
      append_dev(label, input);
      set_input_value(
        input,
        /*data*/
        ctx[0].width
      );
      if (!mounted) {
        dispose = listen_dev(
          input,
          "input",
          /*input_input_handler*/
          ctx[22]
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*data*/
      1 && to_number(input.value) !== /*data*/
      ctx2[0].width) {
        set_input_value(
          input,
          /*data*/
          ctx2[0].width
        );
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(label);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_117.name,
    type: "if",
    source: "(128:2) {#if fullscreen === undefined}",
    ctx
  });
  return block;
}
function create_if_block18(ctx) {
  let div0;
  let label0;
  let t0;
  let input0;
  let t1;
  let div1;
  let label1;
  let t2;
  let input1;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      div0 = element("div");
      label0 = element("label");
      t0 = text("Compact articles\n					");
      input0 = element("input");
      t1 = space();
      div1 = element("div");
      label1 = element("label");
      t2 = text("Hide text\n					");
      input1 = element("input");
      attr_dev(input0, "type", "checkbox");
      add_location(input0, file26, 177, 5, 5528);
      add_location(label0, file26, 175, 4, 5493);
      attr_dev(div0, "class", "field");
      add_location(div0, file26, 174, 3, 5469);
      attr_dev(input1, "type", "checkbox");
      add_location(input1, file26, 183, 5, 5659);
      add_location(label1, file26, 181, 4, 5631);
      attr_dev(div1, "class", "field");
      add_location(div1, file26, 180, 3, 5607);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div0, anchor);
      append_dev(div0, label0);
      append_dev(label0, t0);
      append_dev(label0, input0);
      input0.checked = /*data*/
      ctx[0].compact;
      insert_dev(target, t1, anchor);
      insert_dev(target, div1, anchor);
      append_dev(div1, label1);
      append_dev(label1, t2);
      append_dev(label1, input1);
      input1.checked = /*data*/
      ctx[0].hideText;
      if (!mounted) {
        dispose = [
          listen_dev(
            input0,
            "change",
            /*input0_change_handler_1*/
            ctx[30]
          ),
          listen_dev(
            input1,
            "change",
            /*input1_change_handler_1*/
            ctx[31]
          )
        ];
        mounted = true;
      }
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*data*/
      1) {
        input0.checked = /*data*/
        ctx2[0].compact;
      }
      if (dirty[0] & /*data*/
      1) {
        input1.checked = /*data*/
        ctx2[0].hideText;
      }
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div0);
      if (detaching)
        detach_dev(t1);
      if (detaching)
        detach_dev(div1);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block18.name,
    type: "if",
    source: "(174:2) {#if data.articleView === SocialArticleView}",
    ctx
  });
  return block;
}
function create_each_block15(key_1, ctx) {
  let li;
  let t_value = (
    /*endpoint*/
    (ctx[36].name || /*endpoint*/
    ctx[36].endpoint.name) + ""
  );
  let t;
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      li = element("li");
      t = text(t_value);
      add_location(li, file26, 197, 5, 6005);
      this.first = li;
    },
    m: function mount(target, anchor) {
      insert_dev(target, li, anchor);
      append_dev(li, t);
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (dirty[0] & /*data*/
      1 && t_value !== (t_value = /*endpoint*/
      (ctx[36].name || /*endpoint*/
      ctx[36].endpoint.name) + ""))
        set_data_dev(t, t_value);
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(li);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block15.name,
    type: "each",
    source: "(197:4) {#each data.endpoints as endpoint (endpoint)}",
    ctx
  });
  return block;
}
function create_fragment26(ctx) {
  let div11;
  let div0;
  let p;
  let t0;
  let t1;
  let label0;
  let t2;
  let input0;
  let t3;
  let button0;
  let t5;
  let div1;
  let label1;
  let t6_value = `${/*fullscreen*/
  ctx[1]?.container !== null ? "Timeline " : ""}Container`;
  let t6;
  let t7;
  let select0;
  let option0;
  let t8;
  let option1;
  let t9;
  let option2;
  let t10;
  let t11;
  let t12;
  let t13;
  let t14;
  let label2;
  let t15;
  let input1;
  let input1_min_value;
  let t16;
  let label4;
  let t17;
  let label3;
  let t18;
  let input2;
  let t19;
  let input3;
  let input3_min_value;
  let t20;
  let div5;
  let label5;
  let t21;
  let select1;
  let option3;
  let t22;
  let option4;
  let t23;
  let t24;
  let div2;
  let label6;
  let t25;
  let input4;
  let t26;
  let div3;
  let label7;
  let t27;
  let input5;
  let t28;
  let div4;
  let label8;
  let t29;
  let input6;
  let t30;
  let t31;
  let label9;
  let t32;
  let input7;
  let input7_min_value;
  let t33;
  let div6;
  let label10;
  let t34;
  let ul;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let t35;
  let div8;
  let filtersoptions;
  let updating_instances;
  let t36;
  let div7;
  let button1;
  let t38;
  let div9;
  let sortoptions;
  let updating_sortInfo;
  let t39;
  let div10;
  let button2;
  let current;
  let mounted;
  let dispose;
  let if_block0 = (
    /*fullscreen*/
    ctx[1] !== void 0 && create_if_block_55(ctx)
  );
  let if_block1 = (
    /*fullscreen*/
    (ctx[1]?.container ?? /*data*/
    ctx[0].container) !== ColumnContainer_default && create_if_block_210(ctx)
  );
  let if_block2 = (
    /*fullscreen*/
    ctx[1] === void 0 && create_if_block_117(ctx)
  );
  let if_block3 = (
    /*data*/
    ctx[0].articleView === SocialArticleView_default && create_if_block18(ctx)
  );
  let each_value = (
    /*data*/
    ctx[0].endpoints
  );
  validate_each_argument(each_value);
  const get_key = (ctx2) => (
    /*endpoint*/
    ctx2[36]
  );
  validate_each_keys(ctx, each_value, get_each_context15, get_key);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context15(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block15(key, child_ctx));
  }
  function filtersoptions_instances_binding(value) {
    ctx[33](value);
  }
  let filtersoptions_props = {};
  if (
    /*data*/
    ctx[0].filters !== void 0
  ) {
    filtersoptions_props.instances = /*data*/
    ctx[0].filters;
  }
  filtersoptions = new FiltersOptions_default({
    props: filtersoptions_props,
    $$inline: true
  });
  binding_callbacks.push(() => bind(filtersoptions, "instances", filtersoptions_instances_binding));
  function sortoptions_sortInfo_binding(value) {
    ctx[34](value);
  }
  let sortoptions_props = { sortOnce: (
    /*sortOnce*/
    ctx[3]
  ) };
  if (
    /*data*/
    ctx[0].sortInfo !== void 0
  ) {
    sortoptions_props.sortInfo = /*data*/
    ctx[0].sortInfo;
  }
  sortoptions = new SortOptions_default({ props: sortoptions_props, $$inline: true });
  binding_callbacks.push(() => bind(sortoptions, "sortInfo", sortoptions_sortInfo_binding));
  const block = {
    c: function create() {
      div11 = element("div");
      div0 = element("div");
      p = element("p");
      t0 = text(
        /*articleCountLabel*/
        ctx[4]
      );
      t1 = space();
      label0 = element("label");
      t2 = text("Show article count on header\n			");
      input0 = element("input");
      t3 = space();
      button0 = element("button");
      button0.textContent = "Remove timeline";
      t5 = space();
      div1 = element("div");
      label1 = element("label");
      t6 = text(t6_value);
      t7 = space();
      select0 = element("select");
      option0 = element("option");
      t8 = text("Column");
      option1 = element("option");
      t9 = text("Row");
      option2 = element("option");
      t10 = text("Masonry");
      t11 = space();
      if (if_block0)
        if_block0.c();
      t12 = space();
      if (if_block1)
        if_block1.c();
      t13 = space();
      if (if_block2)
        if_block2.c();
      t14 = space();
      label2 = element("label");
      t15 = text("AutoScroll Speed\n			");
      input1 = element("input");
      t16 = space();
      label4 = element("label");
      t17 = text("Section\n			");
      label3 = element("label");
      t18 = text("Section articles\n				");
      input2 = element("input");
      t19 = space();
      input3 = element("input");
      t20 = space();
      div5 = element("div");
      label5 = element("label");
      t21 = text("Article View\n			");
      select1 = element("select");
      option3 = element("option");
      t22 = text("Social");
      option4 = element("option");
      t23 = text("Gallery");
      t24 = space();
      div2 = element("div");
      label6 = element("label");
      t25 = text("Show all animated as gifs\n				");
      input4 = element("input");
      t26 = space();
      div3 = element("div");
      label7 = element("label");
      t27 = text("Hide filtered out articles\n				");
      input5 = element("input");
      t28 = space();
      div4 = element("div");
      label8 = element("label");
      t29 = text("Merge duplicate reposts\n				");
      input6 = element("input");
      t30 = space();
      if (if_block3)
        if_block3.c();
      t31 = space();
      label9 = element("label");
      t32 = text("Max media count\n			");
      input7 = element("input");
      t33 = space();
      div6 = element("div");
      label10 = element("label");
      t34 = text("Endpoints\n			");
      ul = element("ul");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t35 = space();
      div8 = element("div");
      create_component(filtersoptions.$$.fragment);
      t36 = space();
      div7 = element("div");
      button1 = element("button");
      button1.textContent = "Remove filtered articles";
      t38 = space();
      div9 = element("div");
      create_component(sortoptions.$$.fragment);
      t39 = space();
      div10 = element("div");
      button2 = element("button");
      button2.textContent = "Log Timeline Data";
      add_location(p, file26, 55, 2, 1643);
      attr_dev(input0, "type", "checkbox");
      add_location(input0, file26, 58, 3, 1729);
      attr_dev(label0, "class", "field");
      add_location(label0, file26, 56, 2, 1672);
      attr_dev(button0, "type", "is-danger");
      add_location(button0, file26, 60, 2, 1804);
      attr_dev(div0, "class", "box svelte-1wzl4m1");
      add_location(div0, file26, 54, 1, 1623);
      option0.__value = ColumnContainer_default;
      option0.value = option0.__value;
      add_location(option0, file26, 68, 4, 2051);
      option1.__value = RowContainer_default;
      option1.value = option1.__value;
      add_location(option1, file26, 69, 4, 2103);
      option2.__value = MasonryContainer_default;
      option2.value = option2.__value;
      add_location(option2, file26, 70, 4, 2149);
      if (
        /*data*/
        ctx[0].container === void 0
      )
        add_render_callback(() => (
          /*select0_change_handler*/
          ctx[9].call(select0)
        ));
      add_location(select0, file26, 67, 3, 2010);
      attr_dev(label1, "class", "field");
      add_location(label1, file26, 65, 2, 1916);
      attr_dev(input1, "class", "input");
      attr_dev(input1, "type", "number");
      attr_dev(input1, "min", input1_min_value = 0);
      add_location(input1, file26, 135, 3, 4370);
      attr_dev(label2, "class", "field");
      add_location(label2, file26, 133, 2, 4325);
      attr_dev(input2, "type", "checkbox");
      add_location(input2, file26, 142, 4, 4559);
      add_location(label3, file26, 140, 3, 4526);
      attr_dev(input3, "class", "input");
      attr_dev(input3, "type", "number");
      attr_dev(input3, "min", input3_min_value = 0);
      add_location(input3, file26, 144, 3, 4638);
      attr_dev(label4, "class", "field");
      add_location(label4, file26, 138, 2, 4490);
      attr_dev(div1, "class", "box svelte-1wzl4m1");
      add_location(div1, file26, 64, 1, 1896);
      option3.__value = SocialArticleView_default;
      option3.value = option3.__value;
      add_location(option3, file26, 151, 4, 4839);
      option4.__value = GalleryArticleView_default;
      option4.value = option4.__value;
      add_location(option4, file26, 152, 4, 4893);
      if (
        /*data*/
        ctx[0].articleView === void 0
      )
        add_render_callback(() => (
          /*select1_change_handler*/
          ctx[26].call(select1)
        ));
      add_location(select1, file26, 150, 3, 4796);
      attr_dev(label5, "class", "field");
      add_location(label5, file26, 148, 2, 4755);
      attr_dev(input4, "type", "checkbox");
      add_location(input4, file26, 158, 4, 5036);
      add_location(label6, file26, 156, 3, 4994);
      attr_dev(div2, "class", "field");
      add_location(div2, file26, 155, 2, 4971);
      attr_dev(input5, "type", "checkbox");
      add_location(input5, file26, 164, 4, 5185);
      add_location(label7, file26, 162, 3, 5142);
      attr_dev(div3, "class", "field");
      add_location(div3, file26, 161, 2, 5119);
      attr_dev(input6, "type", "checkbox");
      add_location(input6, file26, 170, 4, 5340);
      add_location(label8, file26, 168, 3, 5300);
      attr_dev(div4, "class", "field");
      add_location(div4, file26, 167, 2, 5277);
      attr_dev(input7, "class", "input");
      attr_dev(input7, "type", "number");
      attr_dev(input7, "min", input7_min_value = 1);
      add_location(input7, file26, 189, 3, 5790);
      attr_dev(label9, "class", "field");
      add_location(label9, file26, 187, 2, 5746);
      attr_dev(div5, "class", "box svelte-1wzl4m1");
      add_location(div5, file26, 147, 1, 4735);
      add_location(ul, file26, 195, 3, 5945);
      attr_dev(label10, "class", "field");
      add_location(label10, file26, 193, 2, 5907);
      attr_dev(div6, "class", "box svelte-1wzl4m1");
      add_location(div6, file26, 192, 1, 5887);
      add_location(button1, file26, 206, 3, 6235);
      attr_dev(div7, "class", "control");
      add_location(div7, file26, 205, 2, 6210);
      attr_dev(div8, "class", "box svelte-1wzl4m1");
      add_location(div8, file26, 203, 1, 6140);
      attr_dev(div9, "class", "box svelte-1wzl4m1");
      add_location(div9, file26, 209, 1, 6321);
      add_location(button2, file26, 213, 2, 6426);
      attr_dev(div10, "class", "box svelte-1wzl4m1");
      add_location(div10, file26, 212, 1, 6406);
      attr_dev(div11, "class", "timelineOptions svelte-1wzl4m1");
      add_location(div11, file26, 53, 0, 1592);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div11, anchor);
      append_dev(div11, div0);
      append_dev(div0, p);
      append_dev(p, t0);
      append_dev(div0, t1);
      append_dev(div0, label0);
      append_dev(label0, t2);
      append_dev(label0, input0);
      input0.checked = /*data*/
      ctx[0].showArticleCount;
      append_dev(div0, t3);
      append_dev(div0, button0);
      append_dev(div11, t5);
      append_dev(div11, div1);
      append_dev(div1, label1);
      append_dev(label1, t6);
      append_dev(label1, t7);
      append_dev(label1, select0);
      append_dev(select0, option0);
      append_dev(option0, t8);
      append_dev(select0, option1);
      append_dev(option1, t9);
      append_dev(select0, option2);
      append_dev(option2, t10);
      select_option(
        select0,
        /*data*/
        ctx[0].container,
        true
      );
      append_dev(div1, t11);
      if (if_block0)
        if_block0.m(div1, null);
      append_dev(div1, t12);
      if (if_block1)
        if_block1.m(div1, null);
      append_dev(div1, t13);
      if (if_block2)
        if_block2.m(div1, null);
      append_dev(div1, t14);
      append_dev(div1, label2);
      append_dev(label2, t15);
      append_dev(label2, input1);
      set_input_value(
        input1,
        /*data*/
        ctx[0].scrollSpeed
      );
      append_dev(div1, t16);
      append_dev(div1, label4);
      append_dev(label4, t17);
      append_dev(label4, label3);
      append_dev(label3, t18);
      append_dev(label3, input2);
      input2.checked = /*data*/
      ctx[0].section.useSection;
      append_dev(label4, t19);
      append_dev(label4, input3);
      set_input_value(
        input3,
        /*data*/
        ctx[0].section.count
      );
      append_dev(div11, t20);
      append_dev(div11, div5);
      append_dev(div5, label5);
      append_dev(label5, t21);
      append_dev(label5, select1);
      append_dev(select1, option3);
      append_dev(option3, t22);
      append_dev(select1, option4);
      append_dev(option4, t23);
      select_option(
        select1,
        /*data*/
        ctx[0].articleView,
        true
      );
      append_dev(div5, t24);
      append_dev(div5, div2);
      append_dev(div2, label6);
      append_dev(label6, t25);
      append_dev(label6, input4);
      input4.checked = /*data*/
      ctx[0].animatedAsGifs;
      append_dev(div5, t26);
      append_dev(div5, div3);
      append_dev(div3, label7);
      append_dev(label7, t27);
      append_dev(label7, input5);
      input5.checked = /*data*/
      ctx[0].hideFilteredOutArticles;
      append_dev(div5, t28);
      append_dev(div5, div4);
      append_dev(div4, label8);
      append_dev(label8, t29);
      append_dev(label8, input6);
      input6.checked = /*data*/
      ctx[0].mergeReposts;
      append_dev(div5, t30);
      if (if_block3)
        if_block3.m(div5, null);
      append_dev(div5, t31);
      append_dev(div5, label9);
      append_dev(label9, t32);
      append_dev(label9, input7);
      set_input_value(
        input7,
        /*data*/
        ctx[0].maxMediaCount
      );
      append_dev(div11, t33);
      append_dev(div11, div6);
      append_dev(div6, label10);
      append_dev(label10, t34);
      append_dev(label10, ul);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(ul, null);
        }
      }
      append_dev(div11, t35);
      append_dev(div11, div8);
      mount_component(filtersoptions, div8, null);
      append_dev(div8, t36);
      append_dev(div8, div7);
      append_dev(div7, button1);
      append_dev(div11, t38);
      append_dev(div11, div9);
      mount_component(sortoptions, div9, null);
      append_dev(div11, t39);
      append_dev(div11, div10);
      append_dev(div10, button2);
      current = true;
      if (!mounted) {
        dispose = [
          listen_dev(
            input0,
            "change",
            /*input0_change_handler*/
            ctx[8]
          ),
          listen_dev(
            button0,
            "click",
            function() {
              if (is_function(
                /*removeTimeline*/
                ctx[2]
              ))
                ctx[2].apply(this, arguments);
            },
            false,
            false,
            false,
            false
          ),
          listen_dev(
            select0,
            "change",
            /*select0_change_handler*/
            ctx[9]
          ),
          listen_dev(
            input1,
            "input",
            /*input1_input_handler*/
            ctx[23]
          ),
          listen_dev(
            input2,
            "change",
            /*input2_change_handler*/
            ctx[24]
          ),
          listen_dev(
            input3,
            "input",
            /*input3_input_handler*/
            ctx[25]
          ),
          listen_dev(
            select1,
            "change",
            /*select1_change_handler*/
            ctx[26]
          ),
          listen_dev(
            input4,
            "change",
            /*input4_change_handler*/
            ctx[27]
          ),
          listen_dev(
            input5,
            "change",
            /*input5_change_handler*/
            ctx[28]
          ),
          listen_dev(
            input6,
            "change",
            /*input6_change_handler*/
            ctx[29]
          ),
          listen_dev(
            input7,
            "input",
            /*input7_input_handler*/
            ctx[32]
          ),
          listen_dev(
            button1,
            "click",
            function() {
              if (is_function(
                /*removeFiltered*/
                ctx[5]
              ))
                ctx[5].apply(this, arguments);
            },
            false,
            false,
            false,
            false
          ),
          listen_dev(
            button2,
            "click",
            /*click_handler_4*/
            ctx[35],
            false,
            false,
            false,
            false
          )
        ];
        mounted = true;
      }
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      if (!current || dirty[0] & /*articleCountLabel*/
      16)
        set_data_dev(
          t0,
          /*articleCountLabel*/
          ctx[4]
        );
      if (dirty[0] & /*data*/
      1) {
        input0.checked = /*data*/
        ctx[0].showArticleCount;
      }
      if ((!current || dirty[0] & /*fullscreen*/
      2) && t6_value !== (t6_value = `${/*fullscreen*/
      ctx[1]?.container !== null ? "Timeline " : ""}Container`))
        set_data_dev(t6, t6_value);
      if (dirty[0] & /*data*/
      1) {
        select_option(
          select0,
          /*data*/
          ctx[0].container
        );
      }
      if (
        /*fullscreen*/
        ctx[1] !== void 0
      ) {
        if (if_block0) {
          if_block0.p(ctx, dirty);
        } else {
          if_block0 = create_if_block_55(ctx);
          if_block0.c();
          if_block0.m(div1, t12);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      if (
        /*fullscreen*/
        (ctx[1]?.container ?? /*data*/
        ctx[0].container) !== ColumnContainer_default
      ) {
        if (if_block1) {
          if_block1.p(ctx, dirty);
        } else {
          if_block1 = create_if_block_210(ctx);
          if_block1.c();
          if_block1.m(div1, t13);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
      if (
        /*fullscreen*/
        ctx[1] === void 0
      ) {
        if (if_block2) {
          if_block2.p(ctx, dirty);
        } else {
          if_block2 = create_if_block_117(ctx);
          if_block2.c();
          if_block2.m(div1, t14);
        }
      } else if (if_block2) {
        if_block2.d(1);
        if_block2 = null;
      }
      if (dirty[0] & /*data*/
      1 && to_number(input1.value) !== /*data*/
      ctx[0].scrollSpeed) {
        set_input_value(
          input1,
          /*data*/
          ctx[0].scrollSpeed
        );
      }
      if (dirty[0] & /*data*/
      1) {
        input2.checked = /*data*/
        ctx[0].section.useSection;
      }
      if (dirty[0] & /*data*/
      1 && to_number(input3.value) !== /*data*/
      ctx[0].section.count) {
        set_input_value(
          input3,
          /*data*/
          ctx[0].section.count
        );
      }
      if (dirty[0] & /*data*/
      1) {
        select_option(
          select1,
          /*data*/
          ctx[0].articleView
        );
      }
      if (dirty[0] & /*data*/
      1) {
        input4.checked = /*data*/
        ctx[0].animatedAsGifs;
      }
      if (dirty[0] & /*data*/
      1) {
        input5.checked = /*data*/
        ctx[0].hideFilteredOutArticles;
      }
      if (dirty[0] & /*data*/
      1) {
        input6.checked = /*data*/
        ctx[0].mergeReposts;
      }
      if (
        /*data*/
        ctx[0].articleView === SocialArticleView_default
      ) {
        if (if_block3) {
          if_block3.p(ctx, dirty);
        } else {
          if_block3 = create_if_block18(ctx);
          if_block3.c();
          if_block3.m(div5, t31);
        }
      } else if (if_block3) {
        if_block3.d(1);
        if_block3 = null;
      }
      if (dirty[0] & /*data*/
      1 && to_number(input7.value) !== /*data*/
      ctx[0].maxMediaCount) {
        set_input_value(
          input7,
          /*data*/
          ctx[0].maxMediaCount
        );
      }
      if (dirty[0] & /*data*/
      1) {
        each_value = /*data*/
        ctx[0].endpoints;
        validate_each_argument(each_value);
        validate_each_keys(ctx, each_value, get_each_context15, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, ul, destroy_block, create_each_block15, null, get_each_context15);
      }
      const filtersoptions_changes = {};
      if (!updating_instances && dirty[0] & /*data*/
      1) {
        updating_instances = true;
        filtersoptions_changes.instances = /*data*/
        ctx[0].filters;
        add_flush_callback(() => updating_instances = false);
      }
      filtersoptions.$set(filtersoptions_changes);
      const sortoptions_changes = {};
      if (dirty[0] & /*sortOnce*/
      8)
        sortoptions_changes.sortOnce = /*sortOnce*/
        ctx[3];
      if (!updating_sortInfo && dirty[0] & /*data*/
      1) {
        updating_sortInfo = true;
        sortoptions_changes.sortInfo = /*data*/
        ctx[0].sortInfo;
        add_flush_callback(() => updating_sortInfo = false);
      }
      sortoptions.$set(sortoptions_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(filtersoptions.$$.fragment, local);
      transition_in(sortoptions.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(filtersoptions.$$.fragment, local);
      transition_out(sortoptions.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div11);
      if (if_block0)
        if_block0.d();
      if (if_block1)
        if_block1.d();
      if (if_block2)
        if_block2.d();
      if (if_block3)
        if_block3.d();
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
      destroy_component(filtersoptions);
      destroy_component(sortoptions);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment26.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance26($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("TimelineOptions", slots, []);
  let { data } = $$props;
  let { fullscreen: fullscreen2 = void 0 } = $$props;
  let { removeTimeline } = $$props;
  let { sortOnce } = $$props;
  let { articleCountLabel } = $$props;
  let { removeFiltered } = $$props;
  function setFullscreenContainer(checked) {
    if (checked)
      $$invalidate(1, fullscreen2.container ??= data.container, fullscreen2);
    else
      $$invalidate(1, fullscreen2.container = null, fullscreen2);
    updateFullscreenStorage(fullscreen2);
  }
  function setFullscreenColumnCount(checked) {
    if (checked)
      $$invalidate(1, fullscreen2.columnCount ??= data.columnCount, fullscreen2);
    else
      $$invalidate(1, fullscreen2.columnCount = null, fullscreen2);
    updateFullscreenStorage(fullscreen2);
  }
  $$self.$$.on_mount.push(function() {
    if (data === void 0 && !("data" in $$props || $$self.$$.bound[$$self.$$.props["data"]])) {
      console_13.warn("<TimelineOptions> was created without expected prop 'data'");
    }
    if (removeTimeline === void 0 && !("removeTimeline" in $$props || $$self.$$.bound[$$self.$$.props["removeTimeline"]])) {
      console_13.warn("<TimelineOptions> was created without expected prop 'removeTimeline'");
    }
    if (sortOnce === void 0 && !("sortOnce" in $$props || $$self.$$.bound[$$self.$$.props["sortOnce"]])) {
      console_13.warn("<TimelineOptions> was created without expected prop 'sortOnce'");
    }
    if (articleCountLabel === void 0 && !("articleCountLabel" in $$props || $$self.$$.bound[$$self.$$.props["articleCountLabel"]])) {
      console_13.warn("<TimelineOptions> was created without expected prop 'articleCountLabel'");
    }
    if (removeFiltered === void 0 && !("removeFiltered" in $$props || $$self.$$.bound[$$self.$$.props["removeFiltered"]])) {
      console_13.warn("<TimelineOptions> was created without expected prop 'removeFiltered'");
    }
  });
  const writable_props = [
    "data",
    "fullscreen",
    "removeTimeline",
    "sortOnce",
    "articleCountLabel",
    "removeFiltered"
  ];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console_13.warn(`<TimelineOptions> was created with unknown prop '${key}'`);
  });
  function input0_change_handler() {
    data.showArticleCount = this.checked;
    $$invalidate(0, data);
  }
  function select0_change_handler() {
    data.container = select_value(this);
    $$invalidate(0, data);
  }
  const input_handler = (e) => setFullscreenContainer(e.target.checked);
  function select_change_handler() {
    fullscreen2.container = select_value(this);
    $$invalidate(1, fullscreen2);
  }
  const input_handler_1 = () => updateFullscreenStorage(fullscreen2);
  function input0_input_handler() {
    data.columnCount = to_number(this.value);
    $$invalidate(0, data);
  }
  const click_handler = () => $$invalidate(0, data.columnCount++, data);
  const click_handler_1 = () => {
    if (data.columnCount > 1)
      $$invalidate(0, data.columnCount--, data);
  };
  const input_handler_2 = (e) => setFullscreenColumnCount(e.target.checked);
  const change_handler = (e) => {
    if (e.value)
      $$invalidate(1, fullscreen2.columnCount = parseInt(e.value), fullscreen2);
  };
  const change_handler_1 = () => updateFullscreenStorage(fullscreen2);
  const click_handler_2 = () => {
    $$invalidate(1, fullscreen2.columnCount++, fullscreen2);
    updateFullscreenStorage(fullscreen2);
  };
  const click_handler_3 = () => {
    if (fullscreen2.columnCount > 1)
      $$invalidate(1, fullscreen2.columnCount--, fullscreen2);
    updateFullscreenStorage(fullscreen2);
  };
  function input1_change_handler() {
    data.rtl = this.checked;
    $$invalidate(0, data);
  }
  function input_input_handler() {
    data.width = to_number(this.value);
    $$invalidate(0, data);
  }
  function input1_input_handler() {
    data.scrollSpeed = to_number(this.value);
    $$invalidate(0, data);
  }
  function input2_change_handler() {
    data.section.useSection = this.checked;
    $$invalidate(0, data);
  }
  function input3_input_handler() {
    data.section.count = to_number(this.value);
    $$invalidate(0, data);
  }
  function select1_change_handler() {
    data.articleView = select_value(this);
    $$invalidate(0, data);
  }
  function input4_change_handler() {
    data.animatedAsGifs = this.checked;
    $$invalidate(0, data);
  }
  function input5_change_handler() {
    data.hideFilteredOutArticles = this.checked;
    $$invalidate(0, data);
  }
  function input6_change_handler() {
    data.mergeReposts = this.checked;
    $$invalidate(0, data);
  }
  function input0_change_handler_1() {
    data.compact = this.checked;
    $$invalidate(0, data);
  }
  function input1_change_handler_1() {
    data.hideText = this.checked;
    $$invalidate(0, data);
  }
  function input7_input_handler() {
    data.maxMediaCount = to_number(this.value);
    $$invalidate(0, data);
  }
  function filtersoptions_instances_binding(value) {
    if ($$self.$$.not_equal(data.filters, value)) {
      data.filters = value;
      $$invalidate(0, data);
    }
  }
  function sortoptions_sortInfo_binding(value) {
    if ($$self.$$.not_equal(data.sortInfo, value)) {
      data.sortInfo = value;
      $$invalidate(0, data);
    }
  }
  const click_handler_4 = () => console.log(data);
  $$self.$$set = ($$props2) => {
    if ("data" in $$props2)
      $$invalidate(0, data = $$props2.data);
    if ("fullscreen" in $$props2)
      $$invalidate(1, fullscreen2 = $$props2.fullscreen);
    if ("removeTimeline" in $$props2)
      $$invalidate(2, removeTimeline = $$props2.removeTimeline);
    if ("sortOnce" in $$props2)
      $$invalidate(3, sortOnce = $$props2.sortOnce);
    if ("articleCountLabel" in $$props2)
      $$invalidate(4, articleCountLabel = $$props2.articleCountLabel);
    if ("removeFiltered" in $$props2)
      $$invalidate(5, removeFiltered = $$props2.removeFiltered);
  };
  $$self.$capture_state = () => ({
    ColumnContainer: ColumnContainer_default,
    RowContainer: RowContainer_default,
    MasonryContainer: MasonryContainer_default,
    SocialArticleView: SocialArticleView_default,
    GalleryArticleView: GalleryArticleView_default,
    FiltersOptions: FiltersOptions_default,
    SortOptions: SortOptions_default,
    SortMethod,
    updateFullscreenStorage,
    data,
    fullscreen: fullscreen2,
    removeTimeline,
    sortOnce,
    articleCountLabel,
    removeFiltered,
    setFullscreenContainer,
    setFullscreenColumnCount
  });
  $$self.$inject_state = ($$props2) => {
    if ("data" in $$props2)
      $$invalidate(0, data = $$props2.data);
    if ("fullscreen" in $$props2)
      $$invalidate(1, fullscreen2 = $$props2.fullscreen);
    if ("removeTimeline" in $$props2)
      $$invalidate(2, removeTimeline = $$props2.removeTimeline);
    if ("sortOnce" in $$props2)
      $$invalidate(3, sortOnce = $$props2.sortOnce);
    if ("articleCountLabel" in $$props2)
      $$invalidate(4, articleCountLabel = $$props2.articleCountLabel);
    if ("removeFiltered" in $$props2)
      $$invalidate(5, removeFiltered = $$props2.removeFiltered);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    data,
    fullscreen2,
    removeTimeline,
    sortOnce,
    articleCountLabel,
    removeFiltered,
    setFullscreenContainer,
    setFullscreenColumnCount,
    input0_change_handler,
    select0_change_handler,
    input_handler,
    select_change_handler,
    input_handler_1,
    input0_input_handler,
    click_handler,
    click_handler_1,
    input_handler_2,
    change_handler,
    change_handler_1,
    click_handler_2,
    click_handler_3,
    input1_change_handler,
    input_input_handler,
    input1_input_handler,
    input2_change_handler,
    input3_input_handler,
    select1_change_handler,
    input4_change_handler,
    input5_change_handler,
    input6_change_handler,
    input0_change_handler_1,
    input1_change_handler_1,
    input7_input_handler,
    filtersoptions_instances_binding,
    sortoptions_sortInfo_binding,
    click_handler_4
  ];
}
var TimelineOptions = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(
      this,
      options,
      instance26,
      create_fragment26,
      safe_not_equal,
      {
        data: 0,
        fullscreen: 1,
        removeTimeline: 2,
        sortOnce: 3,
        articleCountLabel: 4,
        removeFiltered: 5
      },
      null,
      [-1, -1]
    );
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "TimelineOptions",
      options,
      id: create_fragment26.name
    });
  }
  get data() {
    throw new Error("<TimelineOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set data(value) {
    throw new Error("<TimelineOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get fullscreen() {
    throw new Error("<TimelineOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set fullscreen(value) {
    throw new Error("<TimelineOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get removeTimeline() {
    throw new Error("<TimelineOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set removeTimeline(value) {
    throw new Error("<TimelineOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get sortOnce() {
    throw new Error("<TimelineOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set sortOnce(value) {
    throw new Error("<TimelineOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get articleCountLabel() {
    throw new Error("<TimelineOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set articleCountLabel(value) {
    throw new Error("<TimelineOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get removeFiltered() {
    throw new Error("<TimelineOptions>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set removeFiltered(value) {
    throw new Error("<TimelineOptions>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var TimelineOptions_default = TimelineOptions;

// src/timelines/Timeline.svelte
var { console: console_14 } = globals;
var file27 = "src/timelines/Timeline.svelte";
function create_if_block_118(ctx) {
  let timelineoptions;
  let updating_data;
  let updating_fullscreen;
  let current;
  function timelineoptions_data_binding(value) {
    ctx[35](value);
  }
  function timelineoptions_fullscreen_binding(value) {
    ctx[36](value);
  }
  let timelineoptions_props = {
    sortOnce: (
      /*sortOnce*/
      ctx[21]
    ),
    removeTimeline: (
      /*removeTimeline*/
      ctx[7]
    ),
    articleCountLabel: (
      /*articleCountLabel*/
      ctx[14]
    ),
    removeFiltered: (
      /*removeFiltered*/
      ctx[22]
    )
  };
  if (
    /*data*/
    ctx[0] !== void 0
  ) {
    timelineoptions_props.data = /*data*/
    ctx[0];
  }
  if (
    /*fullscreen*/
    ctx[1] !== void 0
  ) {
    timelineoptions_props.fullscreen = /*fullscreen*/
    ctx[1];
  }
  timelineoptions = new TimelineOptions_default({
    props: timelineoptions_props,
    $$inline: true
  });
  binding_callbacks.push(() => bind(timelineoptions, "data", timelineoptions_data_binding));
  binding_callbacks.push(() => bind(timelineoptions, "fullscreen", timelineoptions_fullscreen_binding));
  const block = {
    c: function create() {
      create_component(timelineoptions.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(timelineoptions, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const timelineoptions_changes = {};
      if (dirty[0] & /*removeTimeline*/
      128)
        timelineoptions_changes.removeTimeline = /*removeTimeline*/
        ctx2[7];
      if (dirty[0] & /*articleCountLabel*/
      16384)
        timelineoptions_changes.articleCountLabel = /*articleCountLabel*/
        ctx2[14];
      if (!updating_data && dirty[0] & /*data*/
      1) {
        updating_data = true;
        timelineoptions_changes.data = /*data*/
        ctx2[0];
        add_flush_callback(() => updating_data = false);
      }
      if (!updating_fullscreen && dirty[0] & /*fullscreen*/
      2) {
        updating_fullscreen = true;
        timelineoptions_changes.fullscreen = /*fullscreen*/
        ctx2[1];
        add_flush_callback(() => updating_fullscreen = false);
      }
      timelineoptions.$set(timelineoptions_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(timelineoptions.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(timelineoptions.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(timelineoptions, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_118.name,
    type: "if",
    source: "(285:1) {#if showOptions}",
    ctx
  });
  return block;
}
function create_else_block13(ctx) {
  let div;
  let p;
  let t;
  const block = {
    c: function create() {
      div = element("div");
      p = element("p");
      t = text(
        /*articleCountLabel*/
        ctx[14]
      );
      attr_dev(p, "class", "noArticleText svelte-13oda6d");
      add_location(p, file27, 302, 3, 10871);
      attr_dev(div, "class", "articlesContainer");
      add_location(div, file27, 301, 2, 10836);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, p);
      append_dev(p, t);
    },
    p: function update3(ctx2, dirty) {
      if (dirty[0] & /*articleCountLabel*/
      16384)
        set_data_dev(
          t,
          /*articleCountLabel*/
          ctx2[14]
        );
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block13.name,
    type: "else",
    source: "(301:1) {:else}",
    ctx
  });
  return block;
}
function create_if_block19(ctx) {
  let switch_instance;
  let updating_containerRef;
  let switch_instance_anchor;
  let current;
  function switch_instance_containerRef_binding(value) {
    ctx[37](value);
  }
  var switch_value = (
    /*fullscreen*/
    ctx[1]?.container ?? /*data*/
    ctx[0].container
  );
  function switch_props(ctx2) {
    let switch_instance_props = { props: (
      /*containerProps*/
      ctx2[16]
    ) };
    if (
      /*containerRef*/
      ctx2[11] !== void 0
    ) {
      switch_instance_props.containerRef = /*containerRef*/
      ctx2[11];
    }
    return {
      props: switch_instance_props,
      $$inline: true
    };
  }
  if (switch_value) {
    switch_instance = construct_svelte_component_dev(switch_value, switch_props(ctx));
    binding_callbacks.push(() => bind(switch_instance, "containerRef", switch_instance_containerRef_binding));
  }
  const block = {
    c: function create() {
      if (switch_instance)
        create_component(switch_instance.$$.fragment);
      switch_instance_anchor = empty();
    },
    m: function mount(target, anchor) {
      if (switch_instance)
        mount_component(switch_instance, target, anchor);
      insert_dev(target, switch_instance_anchor, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const switch_instance_changes = {};
      if (dirty[0] & /*containerProps*/
      65536)
        switch_instance_changes.props = /*containerProps*/
        ctx2[16];
      if (!updating_containerRef && dirty[0] & /*containerRef*/
      2048) {
        updating_containerRef = true;
        switch_instance_changes.containerRef = /*containerRef*/
        ctx2[11];
        add_flush_callback(() => updating_containerRef = false);
      }
      if (dirty[0] & /*fullscreen, data*/
      3 && switch_value !== (switch_value = /*fullscreen*/
      ctx2[1]?.container ?? /*data*/
      ctx2[0].container)) {
        if (switch_instance) {
          group_outros();
          const old_component = switch_instance;
          transition_out(old_component.$$.fragment, 1, 0, () => {
            destroy_component(old_component, 1);
          });
          check_outros();
        }
        if (switch_value) {
          switch_instance = construct_svelte_component_dev(switch_value, switch_props(ctx2));
          binding_callbacks.push(() => bind(switch_instance, "containerRef", switch_instance_containerRef_binding));
          create_component(switch_instance.$$.fragment);
          transition_in(switch_instance.$$.fragment, 1);
          mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
        } else {
          switch_instance = null;
        }
      } else if (switch_value) {
        switch_instance.$set(switch_instance_changes);
      }
    },
    i: function intro(local) {
      if (current)
        return;
      if (switch_instance)
        transition_in(switch_instance.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      if (switch_instance)
        transition_out(switch_instance.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(switch_instance_anchor);
      if (switch_instance)
        destroy_component(switch_instance, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block19.name,
    type: "if",
    source: "(295:1) {#if $filteredArticles.length}",
    ctx
  });
  return block;
}
function create_fragment27(ctx) {
  let div;
  let timelineheader;
  let updating_data;
  let updating_availableRefreshTypes;
  let updating_containerRebalance;
  let updating_showSidebar;
  let updating_showOptions;
  let updating_favviewerButtons;
  let updating_favviewerHidden;
  let updating_favviewerMaximized;
  let t0;
  let t1;
  let current_block_type_index;
  let if_block1;
  let div_style_value;
  let current;
  function timelineheader_data_binding(value) {
    ctx[27](value);
  }
  function timelineheader_availableRefreshTypes_binding(value) {
    ctx[28](value);
  }
  function timelineheader_containerRebalance_binding(value) {
    ctx[29](value);
  }
  function timelineheader_showSidebar_binding(value) {
    ctx[30](value);
  }
  function timelineheader_showOptions_binding(value) {
    ctx[31](value);
  }
  function timelineheader_favviewerButtons_binding(value) {
    ctx[32](value);
  }
  function timelineheader_favviewerHidden_binding(value) {
    ctx[33](value);
  }
  function timelineheader_favviewerMaximized_binding(value) {
    ctx[34](value);
  }
  let timelineheader_props = {
    fullscreen: (
      /*fullscreen*/
      ctx[1]
    ),
    articleCountLabel: (
      /*articleCountLabel*/
      ctx[14]
    ),
    shuffle: (
      /*shuffle*/
      ctx[18]
    ),
    autoscroll: (
      /*autoscroll*/
      ctx[19]
    ),
    refresh: (
      /*refresh*/
      ctx[20]
    ),
    toggleFullscreen: (
      /*toggleFullscreen*/
      ctx[6]
    )
  };
  if (
    /*data*/
    ctx[0] !== void 0
  ) {
    timelineheader_props.data = /*data*/
    ctx[0];
  }
  if (
    /*availableRefreshTypes*/
    ctx[15] !== void 0
  ) {
    timelineheader_props.availableRefreshTypes = /*availableRefreshTypes*/
    ctx[15];
  }
  if (
    /*containerRebalance*/
    ctx[8] !== void 0
  ) {
    timelineheader_props.containerRebalance = /*containerRebalance*/
    ctx[8];
  }
  if (
    /*showSidebar*/
    ctx[5] !== void 0
  ) {
    timelineheader_props.showSidebar = /*showSidebar*/
    ctx[5];
  }
  if (
    /*showOptions*/
    ctx[10] !== void 0
  ) {
    timelineheader_props.showOptions = /*showOptions*/
    ctx[10];
  }
  if (
    /*favviewerButtons*/
    ctx[2] !== void 0
  ) {
    timelineheader_props.favviewerButtons = /*favviewerButtons*/
    ctx[2];
  }
  if (
    /*favviewerHidden*/
    ctx[3] !== void 0
  ) {
    timelineheader_props.favviewerHidden = /*favviewerHidden*/
    ctx[3];
  }
  if (
    /*favviewerMaximized*/
    ctx[4] !== void 0
  ) {
    timelineheader_props.favviewerMaximized = /*favviewerMaximized*/
    ctx[4];
  }
  timelineheader = new TimelineHeader_default({
    props: timelineheader_props,
    $$inline: true
  });
  binding_callbacks.push(() => bind(timelineheader, "data", timelineheader_data_binding));
  binding_callbacks.push(() => bind(timelineheader, "availableRefreshTypes", timelineheader_availableRefreshTypes_binding));
  binding_callbacks.push(() => bind(timelineheader, "containerRebalance", timelineheader_containerRebalance_binding));
  binding_callbacks.push(() => bind(timelineheader, "showSidebar", timelineheader_showSidebar_binding));
  binding_callbacks.push(() => bind(timelineheader, "showOptions", timelineheader_showOptions_binding));
  binding_callbacks.push(() => bind(timelineheader, "favviewerButtons", timelineheader_favviewerButtons_binding));
  binding_callbacks.push(() => bind(timelineheader, "favviewerHidden", timelineheader_favviewerHidden_binding));
  binding_callbacks.push(() => bind(timelineheader, "favviewerMaximized", timelineheader_favviewerMaximized_binding));
  let if_block0 = (
    /*showOptions*/
    ctx[10] && create_if_block_118(ctx)
  );
  const if_block_creators = [create_if_block19, create_else_block13];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (
      /*$filteredArticles*/
      ctx2[9].length
    )
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx, [-1, -1]);
  if_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  const block = {
    c: function create() {
      div = element("div");
      create_component(timelineheader.$$.fragment);
      t0 = space();
      if (if_block0)
        if_block0.c();
      t1 = space();
      if_block1.c();
      attr_dev(div, "class", "timeline svelte-13oda6d");
      attr_dev(div, "style", div_style_value = /*data*/
      ctx[0].width > 1 ? `width: ${/*data*/
      ctx[0].width * 500}px` : "");
      toggle_class(
        div,
        "fullscreenTimeline",
        /*fullscreen*/
        ctx[1] !== void 0
      );
      add_location(div, file27, 266, 0, 10077);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      mount_component(timelineheader, div, null);
      append_dev(div, t0);
      if (if_block0)
        if_block0.m(div, null);
      append_dev(div, t1);
      if_blocks[current_block_type_index].m(div, null);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const timelineheader_changes = {};
      if (dirty[0] & /*fullscreen*/
      2)
        timelineheader_changes.fullscreen = /*fullscreen*/
        ctx2[1];
      if (dirty[0] & /*articleCountLabel*/
      16384)
        timelineheader_changes.articleCountLabel = /*articleCountLabel*/
        ctx2[14];
      if (dirty[0] & /*toggleFullscreen*/
      64)
        timelineheader_changes.toggleFullscreen = /*toggleFullscreen*/
        ctx2[6];
      if (!updating_data && dirty[0] & /*data*/
      1) {
        updating_data = true;
        timelineheader_changes.data = /*data*/
        ctx2[0];
        add_flush_callback(() => updating_data = false);
      }
      if (!updating_availableRefreshTypes && dirty[0] & /*availableRefreshTypes*/
      32768) {
        updating_availableRefreshTypes = true;
        timelineheader_changes.availableRefreshTypes = /*availableRefreshTypes*/
        ctx2[15];
        add_flush_callback(() => updating_availableRefreshTypes = false);
      }
      if (!updating_containerRebalance && dirty[0] & /*containerRebalance*/
      256) {
        updating_containerRebalance = true;
        timelineheader_changes.containerRebalance = /*containerRebalance*/
        ctx2[8];
        add_flush_callback(() => updating_containerRebalance = false);
      }
      if (!updating_showSidebar && dirty[0] & /*showSidebar*/
      32) {
        updating_showSidebar = true;
        timelineheader_changes.showSidebar = /*showSidebar*/
        ctx2[5];
        add_flush_callback(() => updating_showSidebar = false);
      }
      if (!updating_showOptions && dirty[0] & /*showOptions*/
      1024) {
        updating_showOptions = true;
        timelineheader_changes.showOptions = /*showOptions*/
        ctx2[10];
        add_flush_callback(() => updating_showOptions = false);
      }
      if (!updating_favviewerButtons && dirty[0] & /*favviewerButtons*/
      4) {
        updating_favviewerButtons = true;
        timelineheader_changes.favviewerButtons = /*favviewerButtons*/
        ctx2[2];
        add_flush_callback(() => updating_favviewerButtons = false);
      }
      if (!updating_favviewerHidden && dirty[0] & /*favviewerHidden*/
      8) {
        updating_favviewerHidden = true;
        timelineheader_changes.favviewerHidden = /*favviewerHidden*/
        ctx2[3];
        add_flush_callback(() => updating_favviewerHidden = false);
      }
      if (!updating_favviewerMaximized && dirty[0] & /*favviewerMaximized*/
      16) {
        updating_favviewerMaximized = true;
        timelineheader_changes.favviewerMaximized = /*favviewerMaximized*/
        ctx2[4];
        add_flush_callback(() => updating_favviewerMaximized = false);
      }
      timelineheader.$set(timelineheader_changes);
      if (
        /*showOptions*/
        ctx2[10]
      ) {
        if (if_block0) {
          if_block0.p(ctx2, dirty);
          if (dirty[0] & /*showOptions*/
          1024) {
            transition_in(if_block0, 1);
          }
        } else {
          if_block0 = create_if_block_118(ctx2);
          if_block0.c();
          transition_in(if_block0, 1);
          if_block0.m(div, t1);
        }
      } else if (if_block0) {
        group_outros();
        transition_out(if_block0, 1, 1, () => {
          if_block0 = null;
        });
        check_outros();
      }
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx2, dirty);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx2, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block1 = if_blocks[current_block_type_index];
        if (!if_block1) {
          if_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
          if_block1.c();
        } else {
          if_block1.p(ctx2, dirty);
        }
        transition_in(if_block1, 1);
        if_block1.m(div, null);
      }
      if (!current || dirty[0] & /*data*/
      1 && div_style_value !== (div_style_value = /*data*/
      ctx2[0].width > 1 ? `width: ${/*data*/
      ctx2[0].width * 500}px` : "")) {
        attr_dev(div, "style", div_style_value);
      }
      if (!current || dirty[0] & /*fullscreen*/
      2) {
        toggle_class(
          div,
          "fullscreenTimeline",
          /*fullscreen*/
          ctx2[1] !== void 0
        );
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(timelineheader.$$.fragment, local);
      transition_in(if_block0);
      transition_in(if_block1);
      current = true;
    },
    o: function outro(local) {
      transition_out(timelineheader.$$.fragment, local);
      transition_out(if_block0);
      transition_out(if_block1);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      destroy_component(timelineheader);
      if (if_block0)
        if_block0.d();
      if_blocks[current_block_type_index].d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment27.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance27($$self, $$props, $$invalidate) {
  let $filteredArticles, $$unsubscribe_filteredArticles = noop, $$subscribe_filteredArticles = () => ($$unsubscribe_filteredArticles(), $$unsubscribe_filteredArticles = subscribe(filteredArticles, ($$value) => $$invalidate(9, $filteredArticles = $$value)), filteredArticles);
  let $articles, $$unsubscribe_articles = noop, $$subscribe_articles = () => ($$unsubscribe_articles(), $$unsubscribe_articles = subscribe(articles, ($$value) => $$invalidate(25, $articles = $$value)), articles);
  let $articleIdPairs;
  $$self.$$.on_destroy.push(() => $$unsubscribe_filteredArticles());
  $$self.$$.on_destroy.push(() => $$unsubscribe_articles());
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("Timeline", slots, []);
  let { data } = $$props;
  let { fullscreen: fullscreen2 = void 0 } = $$props;
  let { toggleFullscreen = void 0 } = $$props;
  let { removeTimeline } = $$props;
  let { setModalTimeline } = $$props;
  let { favviewerButtons = false } = $$props;
  let { favviewerHidden = false } = $$props;
  let { favviewerMaximized = void 0 } = $$props;
  let { showSidebar = true } = $$props;
  let showOptions = false;
  let containerRef = void 0;
  let containerRebalance = false;
  let articleIdPairs = data.articles;
  validate_store(articleIdPairs, "articleIdPairs");
  component_subscribe($$self, articleIdPairs, (value) => $$invalidate(26, $articleIdPairs = value));
  let articles;
  let articlesWithRefs;
  let filteredArticles;
  function addProps(articleWithRefs, index) {
    const filteredOut = !data.filters.every((f) => !f.enabled || keepArticle(articleWithRefs, index, f.filter) !== f.inverted);
    switch (articleWithRefs.type) {
      case "normal":
        return { ...articleWithRefs, filteredOut };
      case "repost":
        return {
          type: "reposts",
          reposts: [articleWithRefs.article],
          filteredOut,
          reposted: addProps(articleWithRefs.reposted, index)
        };
      case "quote":
        return {
          ...articleWithRefs,
          filteredOut,
          quoted: addProps(articleWithRefs.quoted, index)
        };
    }
  }
  let articleCountLabel;
  let availableRefreshTypes;
  let containerProps;
  var ScrollDirection;
  (function(ScrollDirection2) {
    ScrollDirection2[ScrollDirection2["Up"] = 0] = "Up";
    ScrollDirection2[ScrollDirection2["Down"] = 1] = "Down";
  })(ScrollDirection || (ScrollDirection = {}));
  let autoscrollInfo = { direction: ScrollDirection.Down };
  function shuffle() {
    data.articles.update((idPairs) => {
      let currentIndex = idPairs.length, randomIndex;
      while (currentIndex != 0) {
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex--;
        [idPairs[currentIndex], idPairs[randomIndex]] = [idPairs[randomIndex], idPairs[currentIndex]];
      }
      $$invalidate(0, data.sortInfo.method = void 0, data);
      $$invalidate(8, containerRebalance = !containerRebalance);
      return idPairs;
    });
  }
  function autoscroll() {
    const scrollStep = () => {
      if (autoscrollInfo.direction === ScrollDirection.Down && containerRef.scrollTop < containerRef.scrollHeight - containerRef.clientHeight || autoscrollInfo.direction === ScrollDirection.Up && containerRef.scrollTop > 0)
        containerRef.scrollBy(0, autoscrollInfo.direction === ScrollDirection.Down ? data.scrollSpeed : -data.scrollSpeed);
      else
        autoscrollInfo.direction = autoscrollInfo.direction === ScrollDirection.Down ? ScrollDirection.Up : ScrollDirection.Down;
      autoscrollInfo.scrollRequestId = window.requestAnimationFrame(scrollStep);
    };
    autoscrollInfo.scrollRequestId = window.requestAnimationFrame(scrollStep);
    window.addEventListener("mousedown", stopScroll, { once: true });
  }
  function stopScroll(e) {
    if (autoscrollInfo.scrollRequestId === void 0)
      return;
    window.cancelAnimationFrame(autoscrollInfo.scrollRequestId);
    autoscrollInfo.scrollRequestId = void 0;
    if (e.target.matches(".timelineAutoscroll, .timelineAutoscroll *"))
      autoscrollInfo.direction = autoscrollInfo.direction === ScrollDirection.Down ? ScrollDirection.Up : ScrollDirection.Down;
    else
      autoscrollInfo.direction = ScrollDirection.Down;
  }
  function refresh(refreshType) {
    for (const timelineEndpoint of data.endpoints)
      if (timelineEndpoint.name !== void 0)
        refreshEndpointName(timelineEndpoint.name, refreshType);
      else
        refreshEndpoint(timelineEndpoint.endpoint, refreshType).then((articles2) => {
          if (articles2.length) {
            data.addedIdPairs.update((addedIdPairs) => {
              const newAddedIdPairs = [];
              for (const idPair of articles2.map((a) => getRootArticle(a).idPair))
                if (!addedIdPairs.some((idp) => idPairEqual(idPair, idp))) {
                  addedIdPairs.push(idPair);
                  newAddedIdPairs.push(idPair);
                }
              data.articles.update((actualIdPairs) => {
                actualIdPairs.push(...newAddedIdPairs);
                return actualIdPairs;
              });
              return addedIdPairs;
            });
          }
        });
  }
  function sortOnce(method, reversed) {
    const sorted = get_store_value(articlesWithRefs).sort(compare({ method, reversed, customMethod: null }));
    if (reversed)
      sorted.reverse();
    data.articles.set(sorted.map((a) => getRootArticle(a).idPair));
  }
  onMount(async () => {
    if (!data.endpoints.length)
      return;
    return () => {
      console.log("Destroying timeline " + data.title);
    };
  });
  function removeFiltered() {
    data.articles.set(get_store_value(articlesWithRefs).filter((a, i) => data.filters.every((f) => !f.enabled || keepArticle(a, i, f.filter) !== f.inverted)).map((a) => getRootArticle(a).idPair));
  }
  $$self.$$.on_mount.push(function() {
    if (data === void 0 && !("data" in $$props || $$self.$$.bound[$$self.$$.props["data"]])) {
      console_14.warn("<Timeline> was created without expected prop 'data'");
    }
    if (removeTimeline === void 0 && !("removeTimeline" in $$props || $$self.$$.bound[$$self.$$.props["removeTimeline"]])) {
      console_14.warn("<Timeline> was created without expected prop 'removeTimeline'");
    }
    if (setModalTimeline === void 0 && !("setModalTimeline" in $$props || $$self.$$.bound[$$self.$$.props["setModalTimeline"]])) {
      console_14.warn("<Timeline> was created without expected prop 'setModalTimeline'");
    }
  });
  const writable_props = [
    "data",
    "fullscreen",
    "toggleFullscreen",
    "removeTimeline",
    "setModalTimeline",
    "favviewerButtons",
    "favviewerHidden",
    "favviewerMaximized",
    "showSidebar"
  ];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console_14.warn(`<Timeline> was created with unknown prop '${key}'`);
  });
  function timelineheader_data_binding(value) {
    data = value;
    $$invalidate(0, data);
  }
  function timelineheader_availableRefreshTypes_binding(value) {
    availableRefreshTypes = value;
    $$invalidate(15, availableRefreshTypes), $$invalidate(0, data);
  }
  function timelineheader_containerRebalance_binding(value) {
    containerRebalance = value;
    $$invalidate(8, containerRebalance);
  }
  function timelineheader_showSidebar_binding(value) {
    showSidebar = value;
    $$invalidate(5, showSidebar);
  }
  function timelineheader_showOptions_binding(value) {
    showOptions = value;
    $$invalidate(10, showOptions);
  }
  function timelineheader_favviewerButtons_binding(value) {
    favviewerButtons = value;
    $$invalidate(2, favviewerButtons);
  }
  function timelineheader_favviewerHidden_binding(value) {
    favviewerHidden = value;
    $$invalidate(3, favviewerHidden);
  }
  function timelineheader_favviewerMaximized_binding(value) {
    favviewerMaximized = value;
    $$invalidate(4, favviewerMaximized);
  }
  function timelineoptions_data_binding(value) {
    data = value;
    $$invalidate(0, data);
  }
  function timelineoptions_fullscreen_binding(value) {
    fullscreen2 = value;
    $$invalidate(1, fullscreen2);
  }
  function switch_instance_containerRef_binding(value) {
    containerRef = value;
    $$invalidate(11, containerRef);
  }
  $$self.$$set = ($$props2) => {
    if ("data" in $$props2)
      $$invalidate(0, data = $$props2.data);
    if ("fullscreen" in $$props2)
      $$invalidate(1, fullscreen2 = $$props2.fullscreen);
    if ("toggleFullscreen" in $$props2)
      $$invalidate(6, toggleFullscreen = $$props2.toggleFullscreen);
    if ("removeTimeline" in $$props2)
      $$invalidate(7, removeTimeline = $$props2.removeTimeline);
    if ("setModalTimeline" in $$props2)
      $$invalidate(23, setModalTimeline = $$props2.setModalTimeline);
    if ("favviewerButtons" in $$props2)
      $$invalidate(2, favviewerButtons = $$props2.favviewerButtons);
    if ("favviewerHidden" in $$props2)
      $$invalidate(3, favviewerHidden = $$props2.favviewerHidden);
    if ("favviewerMaximized" in $$props2)
      $$invalidate(4, favviewerMaximized = $$props2.favviewerMaximized);
    if ("showSidebar" in $$props2)
      $$invalidate(5, showSidebar = $$props2.showSidebar);
  };
  $$self.$capture_state = () => ({
    derived,
    get: get_store_value,
    Article,
    articleWithRefToArray,
    deriveArticleRefs,
    getActualArticle,
    getDerivedArticleWithRefs,
    getRootArticle,
    idPairEqual,
    fetchArticle,
    getWritable,
    onMount,
    keepArticle,
    compare,
    SortMethod,
    TimelineHeader: TimelineHeader_default,
    TimelineOptions: TimelineOptions_default,
    endpoints,
    refreshEndpoint,
    refreshEndpointName,
    RefreshType,
    loadingStore,
    data,
    fullscreen: fullscreen2,
    toggleFullscreen,
    removeTimeline,
    setModalTimeline,
    favviewerButtons,
    favviewerHidden,
    favviewerMaximized,
    showSidebar,
    showOptions,
    containerRef,
    containerRebalance,
    articleIdPairs,
    articles,
    articlesWithRefs,
    filteredArticles,
    addProps,
    articleCountLabel,
    availableRefreshTypes,
    containerProps,
    ScrollDirection,
    autoscrollInfo,
    shuffle,
    autoscroll,
    stopScroll,
    refresh,
    sortOnce,
    removeFiltered,
    $filteredArticles,
    $articles,
    $articleIdPairs
  });
  $$self.$inject_state = ($$props2) => {
    if ("data" in $$props2)
      $$invalidate(0, data = $$props2.data);
    if ("fullscreen" in $$props2)
      $$invalidate(1, fullscreen2 = $$props2.fullscreen);
    if ("toggleFullscreen" in $$props2)
      $$invalidate(6, toggleFullscreen = $$props2.toggleFullscreen);
    if ("removeTimeline" in $$props2)
      $$invalidate(7, removeTimeline = $$props2.removeTimeline);
    if ("setModalTimeline" in $$props2)
      $$invalidate(23, setModalTimeline = $$props2.setModalTimeline);
    if ("favviewerButtons" in $$props2)
      $$invalidate(2, favviewerButtons = $$props2.favviewerButtons);
    if ("favviewerHidden" in $$props2)
      $$invalidate(3, favviewerHidden = $$props2.favviewerHidden);
    if ("favviewerMaximized" in $$props2)
      $$invalidate(4, favviewerMaximized = $$props2.favviewerMaximized);
    if ("showSidebar" in $$props2)
      $$invalidate(5, showSidebar = $$props2.showSidebar);
    if ("showOptions" in $$props2)
      $$invalidate(10, showOptions = $$props2.showOptions);
    if ("containerRef" in $$props2)
      $$invalidate(11, containerRef = $$props2.containerRef);
    if ("containerRebalance" in $$props2)
      $$invalidate(8, containerRebalance = $$props2.containerRebalance);
    if ("articleIdPairs" in $$props2)
      $$invalidate(17, articleIdPairs = $$props2.articleIdPairs);
    if ("articles" in $$props2)
      $$subscribe_articles($$invalidate(12, articles = $$props2.articles));
    if ("articlesWithRefs" in $$props2)
      $$invalidate(24, articlesWithRefs = $$props2.articlesWithRefs);
    if ("filteredArticles" in $$props2)
      $$subscribe_filteredArticles($$invalidate(13, filteredArticles = $$props2.filteredArticles));
    if ("articleCountLabel" in $$props2)
      $$invalidate(14, articleCountLabel = $$props2.articleCountLabel);
    if ("availableRefreshTypes" in $$props2)
      $$invalidate(15, availableRefreshTypes = $$props2.availableRefreshTypes);
    if ("containerProps" in $$props2)
      $$invalidate(16, containerProps = $$props2.containerProps);
    if ("ScrollDirection" in $$props2)
      ScrollDirection = $$props2.ScrollDirection;
    if ("autoscrollInfo" in $$props2)
      autoscrollInfo = $$props2.autoscrollInfo;
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty[0] & /*$articleIdPairs*/
    67108864) {
      $:
        $$subscribe_articles($$invalidate(12, articles = derived($articleIdPairs.map(getWritable), (a) => a)));
    }
    if ($$self.$$.dirty[0] & /*$articles*/
    33554432) {
      $:
        $$invalidate(24, articlesWithRefs = derived($articles.map(deriveArticleRefs), (a) => a.map(getDerivedArticleWithRefs)));
    }
    if ($$self.$$.dirty[0] & /*articlesWithRefs, data*/
    16777217) {
      $:
        $$subscribe_filteredArticles($$invalidate(13, filteredArticles = derived(articlesWithRefs, (stores) => {
          let articleProps = stores.map((articleWithRefs, i) => addProps(articleWithRefs, i));
          if (data.hideFilteredOutArticles)
            articleProps = articleProps.filter((a) => !a.filteredOut);
          if (data.mergeReposts) {
            let merged = [];
            for (const a of articleProps) {
              if (a.type === "reposts") {
                const aIdPair = getRootArticle(a.reposted).idPair;
                const plainIndex = merged.findIndex((m) => idPairEqual(getRootArticle(m).idPair, aIdPair));
                if (plainIndex > -1) {
                  merged[plainIndex] = a;
                  continue;
                }
                const index = merged.findIndex((m) => m.type === "reposts" && idPairEqual(getRootArticle(m.reposted).idPair, aIdPair));
                if (index > -1)
                  merged[index].reposts.push(...a.reposts);
                else
                  merged.push(a);
              } else
                merged.push(a);
            }
            articleProps = merged;
          }
          if (data.sortInfo.method !== void 0)
            articleProps.sort(compare(data.sortInfo));
          if (data.sortInfo.reversed)
            articleProps.reverse();
          if (data.section.useSection)
            articleProps = articleProps.slice(0, data.section.count);
          return articleProps;
        })));
    }
    if ($$self.$$.dirty[0] & /*$filteredArticles, $articles*/
    33554944) {
      $:
        if ($filteredArticles.length)
          $$invalidate(14, articleCountLabel = `${$filteredArticles.length} articles shown, ${$articles.length - $filteredArticles.length} hidden.`);
        else if ($articles.length)
          $$invalidate(14, articleCountLabel = `${$articles.length} hidden articles`);
        else
          $$invalidate(14, articleCountLabel = "No articles listed.");
    }
    if ($$self.$$.dirty[0] & /*data, $filteredArticles*/
    513) {
      $:
        if (data.shouldLoadMedia && $filteredArticles.length) {
          for (const articleProps of $filteredArticles) {
            const actualArticle = getActualArticle(articleProps);
            if (!actualArticle.fetched)
              fetchArticle(actualArticle.idPair);
            if (data.shouldLoadMedia) {
              for (const article of articleWithRefToArray(articleProps))
                for (let i = 0; i < article.medias.length; ++i)
                  if (article.medias[i].loaded === false)
                    loadingStore.requestLoad(article.idPair, i);
            }
          }
        }
    }
    if ($$self.$$.dirty[0] & /*data*/
    1) {
      $:
        $$invalidate(15, availableRefreshTypes = new Set(data.endpoints.flatMap((e) => {
          const endpoint = e.name !== void 0 ? get_store_value(endpoints[e.name]) : e.endpoint;
          return [...endpoint.refreshTypes.values()];
        })));
    }
    if ($$self.$$.dirty[0] & /*$filteredArticles, data, setModalTimeline, fullscreen, containerRebalance*/
    8389379) {
      $:
        $$invalidate(16, containerProps = {
          articles: $filteredArticles,
          timelineArticleProps: {
            animatedAsGifs: data.animatedAsGifs,
            compact: data.compact,
            hideText: data.hideText,
            shouldLoadMedia: data.shouldLoadMedia,
            maxMediaCount: data.maxMediaCount,
            setModalTimeline
          },
          articleView: data.articleView,
          columnCount: fullscreen2?.columnCount ?? data.columnCount,
          rtl: data.rtl,
          rebalanceTrigger: containerRebalance
        });
    }
  };
  return [
    data,
    fullscreen2,
    favviewerButtons,
    favviewerHidden,
    favviewerMaximized,
    showSidebar,
    toggleFullscreen,
    removeTimeline,
    containerRebalance,
    $filteredArticles,
    showOptions,
    containerRef,
    articles,
    filteredArticles,
    articleCountLabel,
    availableRefreshTypes,
    containerProps,
    articleIdPairs,
    shuffle,
    autoscroll,
    refresh,
    sortOnce,
    removeFiltered,
    setModalTimeline,
    articlesWithRefs,
    $articles,
    $articleIdPairs,
    timelineheader_data_binding,
    timelineheader_availableRefreshTypes_binding,
    timelineheader_containerRebalance_binding,
    timelineheader_showSidebar_binding,
    timelineheader_showOptions_binding,
    timelineheader_favviewerButtons_binding,
    timelineheader_favviewerHidden_binding,
    timelineheader_favviewerMaximized_binding,
    timelineoptions_data_binding,
    timelineoptions_fullscreen_binding,
    switch_instance_containerRef_binding
  ];
}
var Timeline = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(
      this,
      options,
      instance27,
      create_fragment27,
      safe_not_equal,
      {
        data: 0,
        fullscreen: 1,
        toggleFullscreen: 6,
        removeTimeline: 7,
        setModalTimeline: 23,
        favviewerButtons: 2,
        favviewerHidden: 3,
        favviewerMaximized: 4,
        showSidebar: 5
      },
      null,
      [-1, -1]
    );
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Timeline",
      options,
      id: create_fragment27.name
    });
  }
  get data() {
    throw new Error("<Timeline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set data(value) {
    throw new Error("<Timeline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get fullscreen() {
    throw new Error("<Timeline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set fullscreen(value) {
    throw new Error("<Timeline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get toggleFullscreen() {
    throw new Error("<Timeline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set toggleFullscreen(value) {
    throw new Error("<Timeline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get removeTimeline() {
    throw new Error("<Timeline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set removeTimeline(value) {
    throw new Error("<Timeline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get setModalTimeline() {
    throw new Error("<Timeline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set setModalTimeline(value) {
    throw new Error("<Timeline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get favviewerButtons() {
    throw new Error("<Timeline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set favviewerButtons(value) {
    throw new Error("<Timeline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get favviewerHidden() {
    throw new Error("<Timeline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set favviewerHidden(value) {
    throw new Error("<Timeline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get favviewerMaximized() {
    throw new Error("<Timeline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set favviewerMaximized(value) {
    throw new Error("<Timeline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get showSidebar() {
    throw new Error("<Timeline>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set showSidebar(value) {
    throw new Error("<Timeline>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var Timeline_default = Timeline;

// src/timelines/TimelineContainer.svelte
var { Object: Object_110, console: console_15 } = globals;
var file28 = "src/timelines/TimelineContainer.svelte";
function get_each_context16(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[27] = list[i];
  child_ctx[29] = i;
  return child_ctx;
}
function create_if_block_38(ctx) {
  const block = { c: noop, m: noop, d: noop };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_38.name,
    type: "if",
    source: "(91:1) {#if modalTimeline !== null}",
    ctx
  });
  return block;
}
function create_else_block_14(ctx) {
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let each_1_anchor;
  let current;
  let each_value = (
    /*timelineView*/
    ctx[1].timelineIds
  );
  validate_each_argument(each_value);
  const get_key = (ctx2) => `${/*id*/
  ctx2[27]}/${/*i*/
  ctx2[29]}`;
  validate_each_keys(ctx, each_value, get_each_context16, get_key);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context16(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block16(key, child_ctx));
  }
  const block = {
    c: function create() {
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      each_1_anchor = empty();
    },
    m: function mount(target, anchor) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(target, anchor);
        }
      }
      insert_dev(target, each_1_anchor, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*timelines, timelineView, setModalTimeline, removeTimeline, updateMainStorage, favviewerHidden, favviewerMaximized, showSidebar, isInjected*/
      510) {
        each_value = /*timelineView*/
        ctx2[1].timelineIds;
        validate_each_argument(each_value);
        group_outros();
        validate_each_keys(ctx2, each_value, get_each_context16, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, each_1_anchor.parentNode, outro_and_destroy_block, create_each_block16, each_1_anchor, get_each_context16);
        check_outros();
      }
    },
    i: function intro(local) {
      if (current)
        return;
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      current = true;
    },
    o: function outro(local) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d(detaching);
      }
      if (detaching)
        detach_dev(each_1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block_14.name,
    type: "else",
    source: "(125:1) {:else}",
    ctx
  });
  return block;
}
function create_if_block20(ctx) {
  let previous_key = `${/*timelineView*/
  ctx[1].timelineIds[
    /*timelineView*/
    ctx[1].fullscreen.index
  ]}/${/*timelineView*/
  ctx[1].fullscreen.index}`;
  let key_block_anchor;
  let current;
  let key_block = create_key_block(ctx);
  const block = {
    c: function create() {
      key_block.c();
      key_block_anchor = empty();
    },
    m: function mount(target, anchor) {
      key_block.m(target, anchor);
      insert_dev(target, key_block_anchor, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      if (dirty & /*timelineView*/
      2 && safe_not_equal(previous_key, previous_key = `${/*timelineView*/
      ctx2[1].timelineIds[
        /*timelineView*/
        ctx2[1].fullscreen.index
      ]}/${/*timelineView*/
      ctx2[1].fullscreen.index}`)) {
        group_outros();
        transition_out(key_block, 1, 1, noop);
        check_outros();
        key_block = create_key_block(ctx2);
        key_block.c();
        transition_in(key_block, 1);
        key_block.m(key_block_anchor.parentNode, key_block_anchor);
      } else {
        key_block.p(ctx2, dirty);
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(key_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(key_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(key_block_anchor);
      key_block.d(detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block20.name,
    type: "if",
    source: "(101:1) {#if timelineView.fullscreen.index !== null}",
    ctx
  });
  return block;
}
function create_else_block_22(ctx) {
  let timeline;
  let current;
  function func_6() {
    return (
      /*func_6*/
      ctx[25](
        /*i*/
        ctx[29]
      )
    );
  }
  function func_7() {
    return (
      /*func_7*/
      ctx[26](
        /*i*/
        ctx[29]
      )
    );
  }
  timeline = new Timeline_default({
    props: {
      data: (
        /*timelines*/
        ctx[5][
          /*id*/
          ctx[27]
        ]
      ),
      setModalTimeline: (
        /*setModalTimeline*/
        ctx[6]
      ),
      removeTimeline: func_6,
      toggleFullscreen: func_7
    },
    $$inline: true
  });
  const block = {
    c: function create() {
      create_component(timeline.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(timeline, target, anchor);
      current = true;
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      const timeline_changes = {};
      if (dirty & /*timelines, timelineView*/
      34)
        timeline_changes.data = /*timelines*/
        ctx[5][
          /*id*/
          ctx[27]
        ];
      if (dirty & /*setModalTimeline*/
      64)
        timeline_changes.setModalTimeline = /*setModalTimeline*/
        ctx[6];
      if (dirty & /*removeTimeline, timelineView*/
      130)
        timeline_changes.removeTimeline = func_6;
      if (dirty & /*timelineView*/
      2)
        timeline_changes.toggleFullscreen = func_7;
      timeline.$set(timeline_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(timeline.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(timeline.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(timeline, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block_22.name,
    type: "else",
    source: "(138:3) {:else}",
    ctx
  });
  return block;
}
function create_if_block_211(ctx) {
  let timeline;
  let updating_favviewerHidden;
  let updating_favviewerMaximized;
  let updating_showSidebar;
  let current;
  function func_4() {
    return (
      /*func_4*/
      ctx[20](
        /*i*/
        ctx[29]
      )
    );
  }
  function func_5() {
    return (
      /*func_5*/
      ctx[21](
        /*i*/
        ctx[29]
      )
    );
  }
  function timeline_favviewerHidden_binding_1(value) {
    ctx[22](value);
  }
  function timeline_favviewerMaximized_binding_1(value) {
    ctx[23](value);
  }
  function timeline_showSidebar_binding_1(value) {
    ctx[24](value);
  }
  let timeline_props = {
    favviewerButtons: "true",
    data: (
      /*timelines*/
      ctx[5][
        /*id*/
        ctx[27]
      ]
    ),
    setModalTimeline: (
      /*setModalTimeline*/
      ctx[6]
    ),
    removeTimeline: func_4,
    toggleFullscreen: func_5
  };
  if (
    /*favviewerHidden*/
    ctx[2] !== void 0
  ) {
    timeline_props.favviewerHidden = /*favviewerHidden*/
    ctx[2];
  }
  if (
    /*favviewerMaximized*/
    ctx[3] !== void 0
  ) {
    timeline_props.favviewerMaximized = /*favviewerMaximized*/
    ctx[3];
  }
  if (
    /*showSidebar*/
    ctx[4] !== void 0
  ) {
    timeline_props.showSidebar = /*showSidebar*/
    ctx[4];
  }
  timeline = new Timeline_default({ props: timeline_props, $$inline: true });
  binding_callbacks.push(() => bind(timeline, "favviewerHidden", timeline_favviewerHidden_binding_1));
  binding_callbacks.push(() => bind(timeline, "favviewerMaximized", timeline_favviewerMaximized_binding_1));
  binding_callbacks.push(() => bind(timeline, "showSidebar", timeline_showSidebar_binding_1));
  const block = {
    c: function create() {
      create_component(timeline.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(timeline, target, anchor);
      current = true;
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      const timeline_changes = {};
      if (dirty & /*timelines, timelineView*/
      34)
        timeline_changes.data = /*timelines*/
        ctx[5][
          /*id*/
          ctx[27]
        ];
      if (dirty & /*setModalTimeline*/
      64)
        timeline_changes.setModalTimeline = /*setModalTimeline*/
        ctx[6];
      if (dirty & /*removeTimeline, timelineView*/
      130)
        timeline_changes.removeTimeline = func_4;
      if (dirty & /*timelineView*/
      2)
        timeline_changes.toggleFullscreen = func_5;
      if (!updating_favviewerHidden && dirty & /*favviewerHidden*/
      4) {
        updating_favviewerHidden = true;
        timeline_changes.favviewerHidden = /*favviewerHidden*/
        ctx[2];
        add_flush_callback(() => updating_favviewerHidden = false);
      }
      if (!updating_favviewerMaximized && dirty & /*favviewerMaximized*/
      8) {
        updating_favviewerMaximized = true;
        timeline_changes.favviewerMaximized = /*favviewerMaximized*/
        ctx[3];
        add_flush_callback(() => updating_favviewerMaximized = false);
      }
      if (!updating_showSidebar && dirty & /*showSidebar*/
      16) {
        updating_showSidebar = true;
        timeline_changes.showSidebar = /*showSidebar*/
        ctx[4];
        add_flush_callback(() => updating_showSidebar = false);
      }
      timeline.$set(timeline_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(timeline.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(timeline.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(timeline, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_211.name,
    type: "if",
    source: "(127:3) {#if isInjected && i === 0}",
    ctx
  });
  return block;
}
function create_each_block16(key_1, ctx) {
  let first;
  let current_block_type_index;
  let if_block;
  let if_block_anchor;
  let current;
  const if_block_creators = [create_if_block_211, create_else_block_22];
  const if_blocks = [];
  function select_block_type_2(ctx2, dirty) {
    if (
      /*isInjected*/
      ctx2[8] && /*i*/
      ctx2[29] === 0
    )
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type_2(ctx, -1);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      first = empty();
      if_block.c();
      if_block_anchor = empty();
      this.first = first;
    },
    m: function mount(target, anchor) {
      insert_dev(target, first, anchor);
      if_blocks[current_block_type_index].m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type_2(ctx, dirty);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block = if_blocks[current_block_type_index];
        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
          if_block.c();
        } else {
          if_block.p(ctx, dirty);
        }
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(first);
      if_blocks[current_block_type_index].d(detaching);
      if (detaching)
        detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block16.name,
    type: "each",
    source: "(126:2) {#each timelineView.timelineIds as id, i (`${id}",
    ctx
  });
  return block;
}
function create_else_block14(ctx) {
  let timeline;
  let updating_fullscreen;
  let current;
  function timeline_fullscreen_binding_1(value) {
    ctx[19](value);
  }
  let timeline_props = {
    data: (
      /*timelines*/
      ctx[5][
        /*timelineView*/
        ctx[1].timelineIds[
          /*timelineView*/
          ctx[1].fullscreen.index
        ]
      ]
    ),
    setModalTimeline: (
      /*setModalTimeline*/
      ctx[6]
    ),
    removeTimeline: (
      /*func_2*/
      ctx[17]
    ),
    toggleFullscreen: (
      /*func_3*/
      ctx[18]
    )
  };
  if (
    /*timelineView*/
    ctx[1].fullscreen !== void 0
  ) {
    timeline_props.fullscreen = /*timelineView*/
    ctx[1].fullscreen;
  }
  timeline = new Timeline_default({ props: timeline_props, $$inline: true });
  binding_callbacks.push(() => bind(timeline, "fullscreen", timeline_fullscreen_binding_1));
  const block = {
    c: function create() {
      create_component(timeline.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(timeline, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const timeline_changes = {};
      if (dirty & /*timelines, timelineView*/
      34)
        timeline_changes.data = /*timelines*/
        ctx2[5][
          /*timelineView*/
          ctx2[1].timelineIds[
            /*timelineView*/
            ctx2[1].fullscreen.index
          ]
        ];
      if (dirty & /*setModalTimeline*/
      64)
        timeline_changes.setModalTimeline = /*setModalTimeline*/
        ctx2[6];
      if (dirty & /*removeTimeline, timelineView*/
      130)
        timeline_changes.removeTimeline = /*func_2*/
        ctx2[17];
      if (dirty & /*timelineView*/
      2)
        timeline_changes.toggleFullscreen = /*func_3*/
        ctx2[18];
      if (!updating_fullscreen && dirty & /*timelineView*/
      2) {
        updating_fullscreen = true;
        timeline_changes.fullscreen = /*timelineView*/
        ctx2[1].fullscreen;
        add_flush_callback(() => updating_fullscreen = false);
      }
      timeline.$set(timeline_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(timeline.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(timeline.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(timeline, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_else_block14.name,
    type: "else",
    source: "(115:3) {:else}",
    ctx
  });
  return block;
}
function create_if_block_119(ctx) {
  let timeline;
  let updating_favviewerHidden;
  let updating_favviewerMaximized;
  let updating_showSidebar;
  let updating_fullscreen;
  let current;
  function timeline_favviewerHidden_binding(value) {
    ctx[13](value);
  }
  function timeline_favviewerMaximized_binding(value) {
    ctx[14](value);
  }
  function timeline_showSidebar_binding(value) {
    ctx[15](value);
  }
  function timeline_fullscreen_binding(value) {
    ctx[16](value);
  }
  let timeline_props = {
    favviewerButtons: "true",
    data: (
      /*timelines*/
      ctx[5][
        /*timelineView*/
        ctx[1].timelineIds[
          /*timelineView*/
          ctx[1].fullscreen.index
        ]
      ]
    ),
    setModalTimeline: (
      /*setModalTimeline*/
      ctx[6]
    ),
    removeTimeline: (
      /*func*/
      ctx[11]
    ),
    toggleFullscreen: (
      /*func_1*/
      ctx[12]
    )
  };
  if (
    /*favviewerHidden*/
    ctx[2] !== void 0
  ) {
    timeline_props.favviewerHidden = /*favviewerHidden*/
    ctx[2];
  }
  if (
    /*favviewerMaximized*/
    ctx[3] !== void 0
  ) {
    timeline_props.favviewerMaximized = /*favviewerMaximized*/
    ctx[3];
  }
  if (
    /*showSidebar*/
    ctx[4] !== void 0
  ) {
    timeline_props.showSidebar = /*showSidebar*/
    ctx[4];
  }
  if (
    /*timelineView*/
    ctx[1].fullscreen !== void 0
  ) {
    timeline_props.fullscreen = /*timelineView*/
    ctx[1].fullscreen;
  }
  timeline = new Timeline_default({ props: timeline_props, $$inline: true });
  binding_callbacks.push(() => bind(timeline, "favviewerHidden", timeline_favviewerHidden_binding));
  binding_callbacks.push(() => bind(timeline, "favviewerMaximized", timeline_favviewerMaximized_binding));
  binding_callbacks.push(() => bind(timeline, "showSidebar", timeline_showSidebar_binding));
  binding_callbacks.push(() => bind(timeline, "fullscreen", timeline_fullscreen_binding));
  const block = {
    c: function create() {
      create_component(timeline.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(timeline, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const timeline_changes = {};
      if (dirty & /*timelines, timelineView*/
      34)
        timeline_changes.data = /*timelines*/
        ctx2[5][
          /*timelineView*/
          ctx2[1].timelineIds[
            /*timelineView*/
            ctx2[1].fullscreen.index
          ]
        ];
      if (dirty & /*setModalTimeline*/
      64)
        timeline_changes.setModalTimeline = /*setModalTimeline*/
        ctx2[6];
      if (dirty & /*removeTimeline, timelineView*/
      130)
        timeline_changes.removeTimeline = /*func*/
        ctx2[11];
      if (dirty & /*timelineView*/
      2)
        timeline_changes.toggleFullscreen = /*func_1*/
        ctx2[12];
      if (!updating_favviewerHidden && dirty & /*favviewerHidden*/
      4) {
        updating_favviewerHidden = true;
        timeline_changes.favviewerHidden = /*favviewerHidden*/
        ctx2[2];
        add_flush_callback(() => updating_favviewerHidden = false);
      }
      if (!updating_favviewerMaximized && dirty & /*favviewerMaximized*/
      8) {
        updating_favviewerMaximized = true;
        timeline_changes.favviewerMaximized = /*favviewerMaximized*/
        ctx2[3];
        add_flush_callback(() => updating_favviewerMaximized = false);
      }
      if (!updating_showSidebar && dirty & /*showSidebar*/
      16) {
        updating_showSidebar = true;
        timeline_changes.showSidebar = /*showSidebar*/
        ctx2[4];
        add_flush_callback(() => updating_showSidebar = false);
      }
      if (!updating_fullscreen && dirty & /*timelineView*/
      2) {
        updating_fullscreen = true;
        timeline_changes.fullscreen = /*timelineView*/
        ctx2[1].fullscreen;
        add_flush_callback(() => updating_fullscreen = false);
      }
      timeline.$set(timeline_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(timeline.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(timeline.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(timeline, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block_119.name,
    type: "if",
    source: "(103:3) {#if isInjected}",
    ctx
  });
  return block;
}
function create_key_block(ctx) {
  let current_block_type_index;
  let if_block;
  let if_block_anchor;
  let current;
  const if_block_creators = [create_if_block_119, create_else_block14];
  const if_blocks = [];
  function select_block_type_1(ctx2, dirty) {
    if (
      /*isInjected*/
      ctx2[8]
    )
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type_1(ctx, -1);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  const block = {
    c: function create() {
      if_block.c();
      if_block_anchor = empty();
    },
    m: function mount(target, anchor) {
      if_blocks[current_block_type_index].m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      if_block.p(ctx2, dirty);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if_blocks[current_block_type_index].d(detaching);
      if (detaching)
        detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_key_block.name,
    type: "key",
    source: "(102:2) {#key `${timelineView.timelineIds[timelineView.fullscreen.index]}/${timelineView.fullscreen.index}`}",
    ctx
  });
  return block;
}
function create_fragment28(ctx) {
  let div;
  let t;
  let current_block_type_index;
  let if_block1;
  let current;
  let if_block0 = (
    /*modalTimeline*/
    ctx[0] !== null && create_if_block_38(ctx)
  );
  const if_block_creators = [create_if_block20, create_else_block_14];
  const if_blocks = [];
  function select_block_type(ctx2, dirty) {
    if (
      /*timelineView*/
      ctx2[1].fullscreen.index !== null
    )
      return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx, -1);
  if_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  const block = {
    c: function create() {
      div = element("div");
      if (if_block0)
        if_block0.c();
      t = space();
      if_block1.c();
      attr_dev(div, "id", "timelineContainer");
      attr_dev(div, "class", "svelte-2nnt86");
      add_location(div, file28, 89, 0, 3354);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      if (if_block0)
        if_block0.m(div, null);
      append_dev(div, t);
      if_blocks[current_block_type_index].m(div, null);
      current = true;
    },
    p: function update3(ctx2, [dirty]) {
      if (
        /*modalTimeline*/
        ctx2[0] !== null
      ) {
        if (if_block0) {
        } else {
          if_block0 = create_if_block_38(ctx2);
          if_block0.c();
          if_block0.m(div, t);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      let previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx2, dirty);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx2, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, () => {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block1 = if_blocks[current_block_type_index];
        if (!if_block1) {
          if_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx2);
          if_block1.c();
        } else {
          if_block1.p(ctx2, dirty);
        }
        transition_in(if_block1, 1);
        if_block1.m(div, null);
      }
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(if_block1);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block1);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div);
      if (if_block0)
        if_block0.d();
      if_blocks[current_block_type_index].d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment28.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance28($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("TimelineContainer", slots, []);
  let { timelines: timelines2 = {} } = $$props;
  let { modalTimeline } = $$props;
  let { timelineView: timelineView2 = { timelineIds: [], fullscreen: null } } = $$props;
  let { setModalTimeline } = $$props;
  let { removeTimeline } = $$props;
  let { initialRefresh } = $$props;
  let { favviewerHidden } = $$props;
  let { favviewerMaximized = void 0 } = $$props;
  let { showSidebar } = $$props;
  let { modalTimelineActive } = $$props;
  const isInjected = getContext("isInjected");
  afterUpdate(() => {
    if (!modalTimelineActive)
      $$invalidate(0, modalTimeline = null);
  });
  onMount(() => {
    initialRefresh(...[
      ...timelineView2.timelineIds.map((id) => timelines2[id]),
      ...modalTimeline === null ? [] : [modalTimeline]
    ]);
  });
  $$self.$$.on_mount.push(function() {
    if (modalTimeline === void 0 && !("modalTimeline" in $$props || $$self.$$.bound[$$self.$$.props["modalTimeline"]])) {
      console_15.warn("<TimelineContainer> was created without expected prop 'modalTimeline'");
    }
    if (setModalTimeline === void 0 && !("setModalTimeline" in $$props || $$self.$$.bound[$$self.$$.props["setModalTimeline"]])) {
      console_15.warn("<TimelineContainer> was created without expected prop 'setModalTimeline'");
    }
    if (removeTimeline === void 0 && !("removeTimeline" in $$props || $$self.$$.bound[$$self.$$.props["removeTimeline"]])) {
      console_15.warn("<TimelineContainer> was created without expected prop 'removeTimeline'");
    }
    if (initialRefresh === void 0 && !("initialRefresh" in $$props || $$self.$$.bound[$$self.$$.props["initialRefresh"]])) {
      console_15.warn("<TimelineContainer> was created without expected prop 'initialRefresh'");
    }
    if (favviewerHidden === void 0 && !("favviewerHidden" in $$props || $$self.$$.bound[$$self.$$.props["favviewerHidden"]])) {
      console_15.warn("<TimelineContainer> was created without expected prop 'favviewerHidden'");
    }
    if (showSidebar === void 0 && !("showSidebar" in $$props || $$self.$$.bound[$$self.$$.props["showSidebar"]])) {
      console_15.warn("<TimelineContainer> was created without expected prop 'showSidebar'");
    }
    if (modalTimelineActive === void 0 && !("modalTimelineActive" in $$props || $$self.$$.bound[$$self.$$.props["modalTimelineActive"]])) {
      console_15.warn("<TimelineContainer> was created without expected prop 'modalTimelineActive'");
    }
  });
  const writable_props = [
    "timelines",
    "modalTimeline",
    "timelineView",
    "setModalTimeline",
    "removeTimeline",
    "initialRefresh",
    "favviewerHidden",
    "favviewerMaximized",
    "showSidebar",
    "modalTimelineActive"
  ];
  Object_110.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console_15.warn(`<TimelineContainer> was created with unknown prop '${key}'`);
  });
  const func3 = () => removeTimeline(timelineView2.timelineIds[timelineView2.fullscreen.index]);
  const func_1 = () => {
    $$invalidate(1, timelineView2.fullscreen.index = null, timelineView2);
    updateMainStorage("fullscreen", timelineView2.fullscreen);
  };
  function timeline_favviewerHidden_binding(value) {
    favviewerHidden = value;
    $$invalidate(2, favviewerHidden);
  }
  function timeline_favviewerMaximized_binding(value) {
    favviewerMaximized = value;
    $$invalidate(3, favviewerMaximized);
  }
  function timeline_showSidebar_binding(value) {
    showSidebar = value;
    $$invalidate(4, showSidebar);
  }
  function timeline_fullscreen_binding(value) {
    if ($$self.$$.not_equal(timelineView2.fullscreen, value)) {
      timelineView2.fullscreen = value;
      $$invalidate(1, timelineView2);
    }
  }
  const func_2 = () => removeTimeline(timelineView2.timelineIds[timelineView2.fullscreen.index]);
  const func_3 = () => {
    $$invalidate(1, timelineView2.fullscreen.index = null, timelineView2);
    updateMainStorage("fullscreen", timelineView2.fullscreen);
  };
  function timeline_fullscreen_binding_1(value) {
    if ($$self.$$.not_equal(timelineView2.fullscreen, value)) {
      timelineView2.fullscreen = value;
      $$invalidate(1, timelineView2);
    }
  }
  const func_4 = (i) => removeTimeline(i);
  const func_5 = (i) => {
    $$invalidate(1, timelineView2.fullscreen.index = i, timelineView2);
    updateMainStorage("fullscreen", timelineView2.fullscreen);
  };
  function timeline_favviewerHidden_binding_1(value) {
    favviewerHidden = value;
    $$invalidate(2, favviewerHidden);
  }
  function timeline_favviewerMaximized_binding_1(value) {
    favviewerMaximized = value;
    $$invalidate(3, favviewerMaximized);
  }
  function timeline_showSidebar_binding_1(value) {
    showSidebar = value;
    $$invalidate(4, showSidebar);
  }
  const func_6 = (i) => removeTimeline(i);
  const func_7 = (i) => {
    $$invalidate(1, timelineView2.fullscreen.index = i, timelineView2);
    updateMainStorage("fullscreen", timelineView2.fullscreen);
  };
  $$self.$$set = ($$props2) => {
    if ("timelines" in $$props2)
      $$invalidate(5, timelines2 = $$props2.timelines);
    if ("modalTimeline" in $$props2)
      $$invalidate(0, modalTimeline = $$props2.modalTimeline);
    if ("timelineView" in $$props2)
      $$invalidate(1, timelineView2 = $$props2.timelineView);
    if ("setModalTimeline" in $$props2)
      $$invalidate(6, setModalTimeline = $$props2.setModalTimeline);
    if ("removeTimeline" in $$props2)
      $$invalidate(7, removeTimeline = $$props2.removeTimeline);
    if ("initialRefresh" in $$props2)
      $$invalidate(9, initialRefresh = $$props2.initialRefresh);
    if ("favviewerHidden" in $$props2)
      $$invalidate(2, favviewerHidden = $$props2.favviewerHidden);
    if ("favviewerMaximized" in $$props2)
      $$invalidate(3, favviewerMaximized = $$props2.favviewerMaximized);
    if ("showSidebar" in $$props2)
      $$invalidate(4, showSidebar = $$props2.showSidebar);
    if ("modalTimelineActive" in $$props2)
      $$invalidate(10, modalTimelineActive = $$props2.modalTimelineActive);
  };
  $$self.$capture_state = () => ({
    Timeline: Timeline_default,
    afterUpdate,
    getContext,
    onMount,
    timelineEndpoints,
    updateMainStorage,
    timelines: timelines2,
    modalTimeline,
    timelineView: timelineView2,
    setModalTimeline,
    removeTimeline,
    initialRefresh,
    favviewerHidden,
    favviewerMaximized,
    showSidebar,
    modalTimelineActive,
    isInjected
  });
  $$self.$inject_state = ($$props2) => {
    if ("timelines" in $$props2)
      $$invalidate(5, timelines2 = $$props2.timelines);
    if ("modalTimeline" in $$props2)
      $$invalidate(0, modalTimeline = $$props2.modalTimeline);
    if ("timelineView" in $$props2)
      $$invalidate(1, timelineView2 = $$props2.timelineView);
    if ("setModalTimeline" in $$props2)
      $$invalidate(6, setModalTimeline = $$props2.setModalTimeline);
    if ("removeTimeline" in $$props2)
      $$invalidate(7, removeTimeline = $$props2.removeTimeline);
    if ("initialRefresh" in $$props2)
      $$invalidate(9, initialRefresh = $$props2.initialRefresh);
    if ("favviewerHidden" in $$props2)
      $$invalidate(2, favviewerHidden = $$props2.favviewerHidden);
    if ("favviewerMaximized" in $$props2)
      $$invalidate(3, favviewerMaximized = $$props2.favviewerMaximized);
    if ("showSidebar" in $$props2)
      $$invalidate(4, showSidebar = $$props2.showSidebar);
    if ("modalTimelineActive" in $$props2)
      $$invalidate(10, modalTimelineActive = $$props2.modalTimelineActive);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = () => {
    if ($$self.$$.dirty & /*timelineView, timelines*/
    34) {
      $: {
        for (const id of timelineView2.timelineIds)
          if (!timelines2.hasOwnProperty(id))
            console.error(`Timeline with id "${id}" not found.
Timeline ids: `, Object.keys(timelines2), "\nTimeline View: ", timelineView2);
      }
    }
    if ($$self.$$.dirty & /*timelineView, timelines, modalTimeline*/
    35) {
      $: {
        const newTimelineEndpoints = timelineView2.timelineIds.map((id) => ({
          endpoints: timelines2[id].endpoints,
          addArticles(newIdPairs) {
            if (newIdPairs.length)
              timelines2[id].addedIdPairs.update((addedIdPairs) => {
                const newAddedIdPairs = [];
                for (const idPair of newIdPairs)
                  if (!addedIdPairs.some((idp) => idp.service === idPair.service && idp.id === idPair.id)) {
                    addedIdPairs.push(idPair);
                    newAddedIdPairs.push(idPair);
                  }
                timelines2[id].articles.update((actualIdPairs) => {
                  actualIdPairs.push(...newAddedIdPairs);
                  return actualIdPairs;
                });
                return addedIdPairs;
              });
          }
        }));
        if (modalTimeline)
          newTimelineEndpoints.push({
            endpoints: modalTimeline.endpoints,
            addArticles(newIdPairs) {
              if (newIdPairs.length)
                modalTimeline.addedIdPairs.update((addedIdPairs) => {
                  const newAddedIdPairs = [];
                  for (const idPair of newIdPairs)
                    if (!addedIdPairs.some((idp) => idp.service === idPair.service && idp.id === idPair.id)) {
                      addedIdPairs.push(idPair);
                      newAddedIdPairs.push(idPair);
                    }
                  modalTimeline.articles.update((actualIdPairs) => {
                    actualIdPairs.push(...newAddedIdPairs);
                    return actualIdPairs;
                  });
                  return addedIdPairs;
                });
            }
          });
        timelineEndpoints.set(newTimelineEndpoints);
      }
    }
  };
  return [
    modalTimeline,
    timelineView2,
    favviewerHidden,
    favviewerMaximized,
    showSidebar,
    timelines2,
    setModalTimeline,
    removeTimeline,
    isInjected,
    initialRefresh,
    modalTimelineActive,
    func3,
    func_1,
    timeline_favviewerHidden_binding,
    timeline_favviewerMaximized_binding,
    timeline_showSidebar_binding,
    timeline_fullscreen_binding,
    func_2,
    func_3,
    timeline_fullscreen_binding_1,
    func_4,
    func_5,
    timeline_favviewerHidden_binding_1,
    timeline_favviewerMaximized_binding_1,
    timeline_showSidebar_binding_1,
    func_6,
    func_7
  ];
}
var TimelineContainer = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance28, create_fragment28, safe_not_equal, {
      timelines: 5,
      modalTimeline: 0,
      timelineView: 1,
      setModalTimeline: 6,
      removeTimeline: 7,
      initialRefresh: 9,
      favviewerHidden: 2,
      favviewerMaximized: 3,
      showSidebar: 4,
      modalTimelineActive: 10
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "TimelineContainer",
      options,
      id: create_fragment28.name
    });
  }
  get timelines() {
    throw new Error("<TimelineContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelines(value) {
    throw new Error("<TimelineContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get modalTimeline() {
    throw new Error("<TimelineContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set modalTimeline(value) {
    throw new Error("<TimelineContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get timelineView() {
    throw new Error("<TimelineContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineView(value) {
    throw new Error("<TimelineContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get setModalTimeline() {
    throw new Error("<TimelineContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set setModalTimeline(value) {
    throw new Error("<TimelineContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get removeTimeline() {
    throw new Error("<TimelineContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set removeTimeline(value) {
    throw new Error("<TimelineContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get initialRefresh() {
    throw new Error("<TimelineContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set initialRefresh(value) {
    throw new Error("<TimelineContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get favviewerHidden() {
    throw new Error("<TimelineContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set favviewerHidden(value) {
    throw new Error("<TimelineContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get favviewerMaximized() {
    throw new Error("<TimelineContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set favviewerMaximized(value) {
    throw new Error("<TimelineContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get showSidebar() {
    throw new Error("<TimelineContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set showSidebar(value) {
    throw new Error("<TimelineContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get modalTimelineActive() {
    throw new Error("<TimelineContainer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set modalTimelineActive(value) {
    throw new Error("<TimelineContainer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var TimelineContainer_default = TimelineContainer;

// src/notifications/store.ts
var { subscribe: subscribe2, update: update2 } = writable({});
var ids;
subscribe2((value) => ids = Object.keys(value));
var notifications = {
  subscribe: subscribe2,
  notify(notif, id) {
    const actualId = id ?? generateId();
    update2((prev) => {
      prev[actualId] = notif;
      return prev;
    });
  },
  delete(id) {
    update2((prev) => {
      delete prev[id];
      return prev;
    });
  }
};
function generateId() {
  let id = "Generated0";
  for (let i = 1; ids.includes(id); ++i)
    id = "Generated" + i;
  return id;
}

// src/notifications/Notification.svelte
var file29 = "src/notifications/Notification.svelte";
function create_fragment29(ctx) {
  let div1;
  let button;
  let t0;
  let div0;
  let span;
  let t1_value = (
    /*data*/
    ctx[0].text + ""
  );
  let t1;
  let mounted;
  let dispose;
  const block = {
    c: function create() {
      div1 = element("div");
      button = element("button");
      t0 = space();
      div0 = element("div");
      span = element("span");
      t1 = text(t1_value);
      attr_dev(button, "class", "delete");
      add_location(button, file29, 6, 1, 130);
      add_location(span, file29, 8, 2, 228);
      attr_dev(div0, "class", "block");
      add_location(div0, file29, 7, 1, 206);
      attr_dev(div1, "class", "notification");
      add_location(div1, file29, 5, 0, 102);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div1, anchor);
      append_dev(div1, button);
      append_dev(div1, t0);
      append_dev(div1, div0);
      append_dev(div0, span);
      append_dev(span, t1);
      if (!mounted) {
        dispose = listen_dev(
          button,
          "click",
          /*click_handler*/
          ctx[2],
          false,
          false,
          false,
          false
        );
        mounted = true;
      }
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*data*/
      1 && t1_value !== (t1_value = /*data*/
      ctx2[0].text + ""))
        set_data_dev(t1, t1_value);
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div1);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment29.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance29($$self, $$props, $$invalidate) {
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("Notification", slots, []);
  let { data } = $$props;
  let { id } = $$props;
  $$self.$$.on_mount.push(function() {
    if (data === void 0 && !("data" in $$props || $$self.$$.bound[$$self.$$.props["data"]])) {
      console.warn("<Notification> was created without expected prop 'data'");
    }
    if (id === void 0 && !("id" in $$props || $$self.$$.bound[$$self.$$.props["id"]])) {
      console.warn("<Notification> was created without expected prop 'id'");
    }
  });
  const writable_props = ["data", "id"];
  Object.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<Notification> was created with unknown prop '${key}'`);
  });
  const click_handler = () => notifications.delete(id);
  $$self.$$set = ($$props2) => {
    if ("data" in $$props2)
      $$invalidate(0, data = $$props2.data);
    if ("id" in $$props2)
      $$invalidate(1, id = $$props2.id);
  };
  $$self.$capture_state = () => ({ notifications, data, id });
  $$self.$inject_state = ($$props2) => {
    if ("data" in $$props2)
      $$invalidate(0, data = $$props2.data);
    if ("id" in $$props2)
      $$invalidate(1, id = $$props2.id);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [data, id, click_handler];
}
var Notification = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance29, create_fragment29, safe_not_equal, { data: 0, id: 1 });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "Notification",
      options,
      id: create_fragment29.name
    });
  }
  get data() {
    throw new Error("<Notification>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set data(value) {
    throw new Error("<Notification>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get id() {
    throw new Error("<Notification>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set id(value) {
    throw new Error("<Notification>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var Notification_default = Notification;

// src/SoshalThing.svelte
var { Object: Object_111 } = globals;
var file30 = "src/SoshalThing.svelte";
function get_each_context17(ctx, list, i) {
  const child_ctx = ctx.slice();
  child_ctx[26] = list[i][0];
  child_ctx[27] = list[i][1];
  return child_ctx;
}
function create_each_block17(key_1, ctx) {
  let first;
  let notification;
  let current;
  notification = new Notification_default({
    props: {
      data: (
        /*notif*/
        ctx[27]
      ),
      id: (
        /*id*/
        ctx[26]
      )
    },
    $$inline: true
  });
  const block = {
    key: key_1,
    first: null,
    c: function create() {
      first = empty();
      create_component(notification.$$.fragment);
      this.first = first;
    },
    m: function mount(target, anchor) {
      insert_dev(target, first, anchor);
      mount_component(notification, target, anchor);
      current = true;
    },
    p: function update3(new_ctx, dirty) {
      ctx = new_ctx;
      const notification_changes = {};
      if (dirty & /*$notifications*/
      1024)
        notification_changes.data = /*notif*/
        ctx[27];
      if (dirty & /*$notifications*/
      1024)
        notification_changes.id = /*id*/
        ctx[26];
      notification.$set(notification_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(notification.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(notification.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(first);
      destroy_component(notification, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_each_block17.name,
    type: "each",
    source: "(121:2) {#each Object.entries($notifications) as [id, notif] (id)}",
    ctx
  });
  return block;
}
function create_if_block21(ctx) {
  let sidebar;
  let updating_batchActionFilters;
  let updating_timelineView;
  let updating_timelineViews;
  let updating_timelines;
  let current;
  function sidebar_batchActionFilters_binding(value) {
    ctx[15](value);
  }
  function sidebar_timelineView_binding(value) {
    ctx[16](value);
  }
  function sidebar_timelineViews_binding(value) {
    ctx[17](value);
  }
  function sidebar_timelines_binding(value) {
    ctx[18](value);
  }
  let sidebar_props = {
    setModalTimeline: (
      /*setModalTimeline*/
      ctx[13]
    ),
    addTimeline: (
      /*addTimeline*/
      ctx[11]
    )
  };
  if (
    /*batchActionFilters*/
    ctx[8] !== void 0
  ) {
    sidebar_props.batchActionFilters = /*batchActionFilters*/
    ctx[8];
  }
  if (
    /*timelineView*/
    ctx[1] !== void 0
  ) {
    sidebar_props.timelineView = /*timelineView*/
    ctx[1];
  }
  if (
    /*timelineViews*/
    ctx[2] !== void 0
  ) {
    sidebar_props.timelineViews = /*timelineViews*/
    ctx[2];
  }
  if (
    /*timelines*/
    ctx[0] !== void 0
  ) {
    sidebar_props.timelines = /*timelines*/
    ctx[0];
  }
  sidebar = new Sidebar_default({ props: sidebar_props, $$inline: true });
  binding_callbacks.push(() => bind(sidebar, "batchActionFilters", sidebar_batchActionFilters_binding));
  binding_callbacks.push(() => bind(sidebar, "timelineView", sidebar_timelineView_binding));
  binding_callbacks.push(() => bind(sidebar, "timelineViews", sidebar_timelineViews_binding));
  binding_callbacks.push(() => bind(sidebar, "timelines", sidebar_timelines_binding));
  const block = {
    c: function create() {
      create_component(sidebar.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(sidebar, target, anchor);
      current = true;
    },
    p: function update3(ctx2, dirty) {
      const sidebar_changes = {};
      if (!updating_batchActionFilters && dirty & /*batchActionFilters*/
      256) {
        updating_batchActionFilters = true;
        sidebar_changes.batchActionFilters = /*batchActionFilters*/
        ctx2[8];
        add_flush_callback(() => updating_batchActionFilters = false);
      }
      if (!updating_timelineView && dirty & /*timelineView*/
      2) {
        updating_timelineView = true;
        sidebar_changes.timelineView = /*timelineView*/
        ctx2[1];
        add_flush_callback(() => updating_timelineView = false);
      }
      if (!updating_timelineViews && dirty & /*timelineViews*/
      4) {
        updating_timelineViews = true;
        sidebar_changes.timelineViews = /*timelineViews*/
        ctx2[2];
        add_flush_callback(() => updating_timelineViews = false);
      }
      if (!updating_timelines && dirty & /*timelines*/
      1) {
        updating_timelines = true;
        sidebar_changes.timelines = /*timelines*/
        ctx2[0];
        add_flush_callback(() => updating_timelines = false);
      }
      sidebar.$set(sidebar_changes);
    },
    i: function intro(local) {
      if (current)
        return;
      transition_in(sidebar.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(sidebar.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(sidebar, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_if_block21.name,
    type: "if",
    source: "(125:1) {#if showSidebar}",
    ctx
  });
  return block;
}
function create_fragment30(ctx) {
  let div1;
  let div0;
  let each_blocks = [];
  let each_1_lookup = /* @__PURE__ */ new Map();
  let t0;
  let t1;
  let timelinecontainer;
  let updating_timelines;
  let updating_timelineView;
  let updating_modalTimeline;
  let updating_modalTimelineActive;
  let updating_favviewerHidden;
  let updating_favviewerMaximized;
  let updating_showSidebar;
  let current;
  let each_value = Object.entries(
    /*$notifications*/
    ctx[10]
  );
  validate_each_argument(each_value);
  const get_key = (ctx2) => (
    /*id*/
    ctx2[26]
  );
  validate_each_keys(ctx, each_value, get_each_context17, get_key);
  for (let i = 0; i < each_value.length; i += 1) {
    let child_ctx = get_each_context17(ctx, each_value, i);
    let key = get_key(child_ctx);
    each_1_lookup.set(key, each_blocks[i] = create_each_block17(key, child_ctx));
  }
  let if_block = (
    /*showSidebar*/
    ctx[9] && create_if_block21(ctx)
  );
  function timelinecontainer_timelines_binding(value) {
    ctx[19](value);
  }
  function timelinecontainer_timelineView_binding(value) {
    ctx[20](value);
  }
  function timelinecontainer_modalTimeline_binding(value) {
    ctx[21](value);
  }
  function timelinecontainer_modalTimelineActive_binding(value) {
    ctx[22](value);
  }
  function timelinecontainer_favviewerHidden_binding(value) {
    ctx[23](value);
  }
  function timelinecontainer_favviewerMaximized_binding(value) {
    ctx[24](value);
  }
  function timelinecontainer_showSidebar_binding(value) {
    ctx[25](value);
  }
  let timelinecontainer_props = {
    setModalTimeline: (
      /*setModalTimeline*/
      ctx[13]
    ),
    removeTimeline: (
      /*removeTimeline*/
      ctx[12]
    ),
    initialRefresh: (
      /*initialRefresh*/
      ctx[14]
    )
  };
  if (
    /*timelines*/
    ctx[0] !== void 0
  ) {
    timelinecontainer_props.timelines = /*timelines*/
    ctx[0];
  }
  if (
    /*timelineView*/
    ctx[1] !== void 0
  ) {
    timelinecontainer_props.timelineView = /*timelineView*/
    ctx[1];
  }
  if (
    /*modalTimeline*/
    ctx[6] !== void 0
  ) {
    timelinecontainer_props.modalTimeline = /*modalTimeline*/
    ctx[6];
  }
  if (
    /*modalTimelineActive*/
    ctx[7] !== void 0
  ) {
    timelinecontainer_props.modalTimelineActive = /*modalTimelineActive*/
    ctx[7];
  }
  if (
    /*favviewerHidden*/
    ctx[3] !== void 0
  ) {
    timelinecontainer_props.favviewerHidden = /*favviewerHidden*/
    ctx[3];
  }
  if (
    /*favviewerMaximized*/
    ctx[4] !== void 0
  ) {
    timelinecontainer_props.favviewerMaximized = /*favviewerMaximized*/
    ctx[4];
  }
  if (
    /*showSidebar*/
    ctx[9] !== void 0
  ) {
    timelinecontainer_props.showSidebar = /*showSidebar*/
    ctx[9];
  }
  timelinecontainer = new TimelineContainer_default({
    props: timelinecontainer_props,
    $$inline: true
  });
  binding_callbacks.push(() => bind(timelinecontainer, "timelines", timelinecontainer_timelines_binding));
  binding_callbacks.push(() => bind(timelinecontainer, "timelineView", timelinecontainer_timelineView_binding));
  binding_callbacks.push(() => bind(timelinecontainer, "modalTimeline", timelinecontainer_modalTimeline_binding));
  binding_callbacks.push(() => bind(timelinecontainer, "modalTimelineActive", timelinecontainer_modalTimelineActive_binding));
  binding_callbacks.push(() => bind(timelinecontainer, "favviewerHidden", timelinecontainer_favviewerHidden_binding));
  binding_callbacks.push(() => bind(timelinecontainer, "favviewerMaximized", timelinecontainer_favviewerMaximized_binding));
  binding_callbacks.push(() => bind(timelinecontainer, "showSidebar", timelinecontainer_showSidebar_binding));
  const block = {
    c: function create() {
      div1 = element("div");
      div0 = element("div");
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].c();
      }
      t0 = space();
      if (if_block)
        if_block.c();
      t1 = space();
      create_component(timelinecontainer.$$.fragment);
      attr_dev(div0, "id", "soshalNotifications");
      attr_dev(div0, "class", "svelte-1eyvkgl");
      add_location(div0, file30, 119, 1, 4152);
      attr_dev(div1, "class", "soshalthing svelte-1eyvkgl");
      toggle_class(
        div1,
        "injected",
        /*isInjected*/
        ctx[5]
      );
      add_location(div1, file30, 118, 0, 4097);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div1, anchor);
      append_dev(div1, div0);
      for (let i = 0; i < each_blocks.length; i += 1) {
        if (each_blocks[i]) {
          each_blocks[i].m(div0, null);
        }
      }
      append_dev(div1, t0);
      if (if_block)
        if_block.m(div1, null);
      append_dev(div1, t1);
      mount_component(timelinecontainer, div1, null);
      current = true;
    },
    p: function update3(ctx2, [dirty]) {
      if (dirty & /*Object, $notifications*/
      1024) {
        each_value = Object.entries(
          /*$notifications*/
          ctx2[10]
        );
        validate_each_argument(each_value);
        group_outros();
        validate_each_keys(ctx2, each_value, get_each_context17, get_key);
        each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx2, each_value, each_1_lookup, div0, outro_and_destroy_block, create_each_block17, null, get_each_context17);
        check_outros();
      }
      if (
        /*showSidebar*/
        ctx2[9]
      ) {
        if (if_block) {
          if_block.p(ctx2, dirty);
          if (dirty & /*showSidebar*/
          512) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block21(ctx2);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(div1, t1);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, () => {
          if_block = null;
        });
        check_outros();
      }
      const timelinecontainer_changes = {};
      if (!updating_timelines && dirty & /*timelines*/
      1) {
        updating_timelines = true;
        timelinecontainer_changes.timelines = /*timelines*/
        ctx2[0];
        add_flush_callback(() => updating_timelines = false);
      }
      if (!updating_timelineView && dirty & /*timelineView*/
      2) {
        updating_timelineView = true;
        timelinecontainer_changes.timelineView = /*timelineView*/
        ctx2[1];
        add_flush_callback(() => updating_timelineView = false);
      }
      if (!updating_modalTimeline && dirty & /*modalTimeline*/
      64) {
        updating_modalTimeline = true;
        timelinecontainer_changes.modalTimeline = /*modalTimeline*/
        ctx2[6];
        add_flush_callback(() => updating_modalTimeline = false);
      }
      if (!updating_modalTimelineActive && dirty & /*modalTimelineActive*/
      128) {
        updating_modalTimelineActive = true;
        timelinecontainer_changes.modalTimelineActive = /*modalTimelineActive*/
        ctx2[7];
        add_flush_callback(() => updating_modalTimelineActive = false);
      }
      if (!updating_favviewerHidden && dirty & /*favviewerHidden*/
      8) {
        updating_favviewerHidden = true;
        timelinecontainer_changes.favviewerHidden = /*favviewerHidden*/
        ctx2[3];
        add_flush_callback(() => updating_favviewerHidden = false);
      }
      if (!updating_favviewerMaximized && dirty & /*favviewerMaximized*/
      16) {
        updating_favviewerMaximized = true;
        timelinecontainer_changes.favviewerMaximized = /*favviewerMaximized*/
        ctx2[4];
        add_flush_callback(() => updating_favviewerMaximized = false);
      }
      if (!updating_showSidebar && dirty & /*showSidebar*/
      512) {
        updating_showSidebar = true;
        timelinecontainer_changes.showSidebar = /*showSidebar*/
        ctx2[9];
        add_flush_callback(() => updating_showSidebar = false);
      }
      timelinecontainer.$set(timelinecontainer_changes);
      if (!current || dirty & /*isInjected*/
      32) {
        toggle_class(
          div1,
          "injected",
          /*isInjected*/
          ctx2[5]
        );
      }
    },
    i: function intro(local) {
      if (current)
        return;
      for (let i = 0; i < each_value.length; i += 1) {
        transition_in(each_blocks[i]);
      }
      transition_in(if_block);
      transition_in(timelinecontainer.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      for (let i = 0; i < each_blocks.length; i += 1) {
        transition_out(each_blocks[i]);
      }
      transition_out(if_block);
      transition_out(timelinecontainer.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching)
        detach_dev(div1);
      for (let i = 0; i < each_blocks.length; i += 1) {
        each_blocks[i].d();
      }
      if (if_block)
        if_block.d();
      destroy_component(timelinecontainer);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block,
    id: create_fragment30.name,
    type: "component",
    source: "",
    ctx
  });
  return block;
}
function instance30($$self, $$props, $$invalidate) {
  let $notifications;
  validate_store(notifications, "notifications");
  component_subscribe($$self, notifications, ($$value) => $$invalidate(10, $notifications = $$value));
  let { $$slots: slots = {}, $$scope } = $$props;
  validate_slots("SoshalThing", slots, []);
  BigInt.prototype.toJSON = function() {
    return this.toString();
  };
  let { timelines: timelines2 = {} } = $$props;
  let { timelineView: timelineView2 = {
    timelineIds: [],
    fullscreen: {
      index: null,
      columnCount: null,
      container: null
    }
  } } = $$props;
  let { timelineViews: timelineViews2 = {} } = $$props;
  let { isInjected = true } = $$props;
  let { favviewerHidden = false } = $$props;
  let { favviewerMaximized = void 0 } = $$props;
  let modalTimeline = null;
  let modalTimelineActive = false;
  let batchActionFilters = [];
  setContext("isInjected", isInjected);
  let showSidebar = !isInjected && favviewerMaximized !== true;
  function addTimeline(data) {
    let idNum = 0;
    while (timelines2.hasOwnProperty(`Timeline ${idNum}`))
      idNum += 1;
    const id = `Timeline ${idNum}`;
    $$invalidate(0, timelines2[id] = data, timelines2);
    $$invalidate(0, timelines2);
    $$invalidate(1, timelineView2.timelineIds = [...timelineView2.timelineIds, id], timelineView2);
    updateTimelinesStorage(timelines2);
  }
  function removeTimeline(id) {
    delete timelines2[id];
    if (timelineView2.fullscreen.index === timelineView2.timelineIds.indexOf(id))
      $$invalidate(1, timelineView2.fullscreen.index = null, timelineView2);
    $$invalidate(1, timelineView2.timelineIds = timelineView2.timelineIds.filter((viewId) => viewId !== id), timelineView2);
    $$invalidate(1, timelineView2);
    updateTimelinesStorage(timelines2);
  }
  function setModalTimeline(data, width = 3) {
    $$invalidate(6, modalTimeline = { ...data, width });
    $$invalidate(7, modalTimelineActive = true);
    initialRefresh(modalTimeline);
  }
  function initialRefresh(...refreshingTimelines) {
    const endpointNames = /* @__PURE__ */ new Set();
    for (const timeline of refreshingTimelines)
      for (const timelineEndpoint of timeline.endpoints.filter((e) => e.refreshTypes.has(0 /* RefreshStart */)))
        if (timelineEndpoint.name !== void 0)
          endpointNames.add(timelineEndpoint.name);
        else if (timelineEndpoint.endpoint?.refreshTypes?.has(0 /* RefreshStart */))
          refreshEndpoint(timelineEndpoint.endpoint, 0 /* RefreshStart */).then((articles) => {
            if (articles.length) {
              const newAddedIdPairs = articles.map((a) => getRootArticle(a).idPair);
              timeline.addedIdPairs.update((idPairs) => {
                idPairs.push(...newAddedIdPairs);
                return idPairs;
              });
              timeline.articles.update((idPairs) => {
                idPairs.push(...newAddedIdPairs);
                return idPairs;
              });
            }
          });
    for (const endpointName of endpointNames.values())
      refreshEndpointName(endpointName, 0 /* RefreshStart */);
  }
  const writable_props = [
    "timelines",
    "timelineView",
    "timelineViews",
    "isInjected",
    "favviewerHidden",
    "favviewerMaximized"
  ];
  Object_111.keys($$props).forEach((key) => {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$" && key !== "slot")
      console.warn(`<SoshalThing> was created with unknown prop '${key}'`);
  });
  function sidebar_batchActionFilters_binding(value) {
    batchActionFilters = value;
    $$invalidate(8, batchActionFilters);
  }
  function sidebar_timelineView_binding(value) {
    timelineView2 = value;
    $$invalidate(1, timelineView2);
  }
  function sidebar_timelineViews_binding(value) {
    timelineViews2 = value;
    $$invalidate(2, timelineViews2);
  }
  function sidebar_timelines_binding(value) {
    timelines2 = value;
    $$invalidate(0, timelines2);
  }
  function timelinecontainer_timelines_binding(value) {
    timelines2 = value;
    $$invalidate(0, timelines2);
  }
  function timelinecontainer_timelineView_binding(value) {
    timelineView2 = value;
    $$invalidate(1, timelineView2);
  }
  function timelinecontainer_modalTimeline_binding(value) {
    modalTimeline = value;
    $$invalidate(6, modalTimeline);
  }
  function timelinecontainer_modalTimelineActive_binding(value) {
    modalTimelineActive = value;
    $$invalidate(7, modalTimelineActive);
  }
  function timelinecontainer_favviewerHidden_binding(value) {
    favviewerHidden = value;
    $$invalidate(3, favviewerHidden);
  }
  function timelinecontainer_favviewerMaximized_binding(value) {
    favviewerMaximized = value;
    $$invalidate(4, favviewerMaximized);
  }
  function timelinecontainer_showSidebar_binding(value) {
    showSidebar = value;
    $$invalidate(9, showSidebar);
  }
  $$self.$$set = ($$props2) => {
    if ("timelines" in $$props2)
      $$invalidate(0, timelines2 = $$props2.timelines);
    if ("timelineView" in $$props2)
      $$invalidate(1, timelineView2 = $$props2.timelineView);
    if ("timelineViews" in $$props2)
      $$invalidate(2, timelineViews2 = $$props2.timelineViews);
    if ("isInjected" in $$props2)
      $$invalidate(5, isInjected = $$props2.isInjected);
    if ("favviewerHidden" in $$props2)
      $$invalidate(3, favviewerHidden = $$props2.favviewerHidden);
    if ("favviewerMaximized" in $$props2)
      $$invalidate(4, favviewerMaximized = $$props2.favviewerMaximized);
  };
  $$self.$capture_state = () => ({
    setContext,
    Sidebar: Sidebar_default,
    TimelineContainer: TimelineContainer_default,
    notifications,
    Notification: Notification_default,
    Endpoint,
    refreshEndpoint,
    refreshEndpointName,
    RefreshType,
    getRootArticle,
    updateTimelinesStorage,
    timelines: timelines2,
    timelineView: timelineView2,
    timelineViews: timelineViews2,
    isInjected,
    favviewerHidden,
    favviewerMaximized,
    modalTimeline,
    modalTimelineActive,
    batchActionFilters,
    showSidebar,
    addTimeline,
    removeTimeline,
    setModalTimeline,
    initialRefresh,
    $notifications
  });
  $$self.$inject_state = ($$props2) => {
    if ("timelines" in $$props2)
      $$invalidate(0, timelines2 = $$props2.timelines);
    if ("timelineView" in $$props2)
      $$invalidate(1, timelineView2 = $$props2.timelineView);
    if ("timelineViews" in $$props2)
      $$invalidate(2, timelineViews2 = $$props2.timelineViews);
    if ("isInjected" in $$props2)
      $$invalidate(5, isInjected = $$props2.isInjected);
    if ("favviewerHidden" in $$props2)
      $$invalidate(3, favviewerHidden = $$props2.favviewerHidden);
    if ("favviewerMaximized" in $$props2)
      $$invalidate(4, favviewerMaximized = $$props2.favviewerMaximized);
    if ("modalTimeline" in $$props2)
      $$invalidate(6, modalTimeline = $$props2.modalTimeline);
    if ("modalTimelineActive" in $$props2)
      $$invalidate(7, modalTimelineActive = $$props2.modalTimelineActive);
    if ("batchActionFilters" in $$props2)
      $$invalidate(8, batchActionFilters = $$props2.batchActionFilters);
    if ("showSidebar" in $$props2)
      $$invalidate(9, showSidebar = $$props2.showSidebar);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [
    timelines2,
    timelineView2,
    timelineViews2,
    favviewerHidden,
    favviewerMaximized,
    isInjected,
    modalTimeline,
    modalTimelineActive,
    batchActionFilters,
    showSidebar,
    $notifications,
    addTimeline,
    removeTimeline,
    setModalTimeline,
    initialRefresh,
    sidebar_batchActionFilters_binding,
    sidebar_timelineView_binding,
    sidebar_timelineViews_binding,
    sidebar_timelines_binding,
    timelinecontainer_timelines_binding,
    timelinecontainer_timelineView_binding,
    timelinecontainer_modalTimeline_binding,
    timelinecontainer_modalTimelineActive_binding,
    timelinecontainer_favviewerHidden_binding,
    timelinecontainer_favviewerMaximized_binding,
    timelinecontainer_showSidebar_binding
  ];
}
var SoshalThing = class extends SvelteComponentDev {
  constructor(options) {
    super(options);
    init(this, options, instance30, create_fragment30, safe_not_equal, {
      timelines: 0,
      timelineView: 1,
      timelineViews: 2,
      isInjected: 5,
      favviewerHidden: 3,
      favviewerMaximized: 4
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: this,
      tagName: "SoshalThing",
      options,
      id: create_fragment30.name
    });
  }
  get timelines() {
    throw new Error("<SoshalThing>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelines(value) {
    throw new Error("<SoshalThing>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get timelineView() {
    throw new Error("<SoshalThing>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineView(value) {
    throw new Error("<SoshalThing>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get timelineViews() {
    throw new Error("<SoshalThing>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set timelineViews(value) {
    throw new Error("<SoshalThing>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get isInjected() {
    throw new Error("<SoshalThing>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set isInjected(value) {
    throw new Error("<SoshalThing>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get favviewerHidden() {
    throw new Error("<SoshalThing>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set favviewerHidden(value) {
    throw new Error("<SoshalThing>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  get favviewerMaximized() {
    throw new Error("<SoshalThing>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
  set favviewerMaximized(value) {
    throw new Error("<SoshalThing>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
  }
};
var SoshalThing_default = SoshalThing;

// src/entry.ts
var { timelineIds, fullscreen, timelineViews, defaultTimelineView } = loadMainStorage();
var timelines = loadTimelines();
var searchParams = new URLSearchParams(location.search);
var searchTimelineView = parseTimelineView(timelineViews, searchParams);
var timelineView = searchTimelineView ?? (defaultTimelineView !== null ? timelineViews[defaultTimelineView] : null) ?? {
  timelineIds: timelineIds ?? Object.keys(timelines),
  fullscreen
};
var searchParamsFullscreen = parseFullscreen(searchParams);
if (searchParamsFullscreen !== void 0)
  timelineView.fullscreen = searchParamsFullscreen;
new SoshalThing_default({
  target: document.body,
  props: {
    isInjected: false,
    timelines,
    timelineView,
    timelineViews
  }
});
function parseFullscreen(search) {
  const param = search.get("fullscreen_timeline");
  switch (param) {
    case null:
    case "false":
      return void 0;
    case "":
    case "true":
    case "0":
      return {
        index: 0,
        container: null,
        columnCount: null
      };
  }
  const num = parseInt(param);
  if (isNaN(num))
    return void 0;
  return {
    index: num,
    container: null,
    columnCount: null
  };
}
function parseTimelineView(timelineViews2, search) {
  const param = search.get("view");
  if (!param?.length)
    return void 0;
  else if (!Object.hasOwn(timelineViews2, param)) {
    console.error(`Couldn't find timeline view "${param}"
Available views: `, timelineViews2);
    return void 0;
  } else
    return timelineViews2[param];
}
//# sourceMappingURL=data:application/json;base64,
